nia-amar-wfe (2023-12-12 19:29 GMT-5) - Transcript
Attendees
Brian Kimbrow, Daniel Perez, Gregory Robertson Jr, Iris Coats, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Ryan Arnold, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: car goes and this is day two of Capstone week. So we're going to do the same thing. We did yesterday. I'm going to do a 30 minute lecture and then we're gonna go into individual breakout rooms where you'll be able to perform screen sharing and I'll be able to walk through your code with you. Just check out your approach on things find any possible bugs and make sure we're all within best practices. So, let me get my screen share going here.
Lewis Benson: So what we're looking at here if you can see that. Yeah, it showed up. What we're looking at here is some really bad code everything in here is pretty much broken. I'm currently linked into the index. Whoops. That was my source control. I'm linked into the index.
Lewis Benson: we have our index.js LinkedIn. And there's just a whole lot of bugs in here and this could be a little tricky to find them all because there's so much going on with this. For one we're using this VAR keyword. That's not really a bug. It's just not best practice. We would want to update that. Here I can see there's a typo with get Elements by class name. And here We're looping over that. And then we're trying to access this inner. Here there is missing piece of camel case. There's just a whole lot of stuff going on if I double click on these. No type is there.
Lewis Benson: We have a query selector all that looks correct. There's a typo in length. Just a lot of stuff. I'm consuming to go through and you might miss something and it might just take forever to debug and this is an oversimplified version of what I'm trying to demonstrate we could probably go through this and find them all especially using our console tools. Let me find there it is. If we go into inspect. We can see all these different bugs showing up. I'll do another refresh. When we get this is not a function as we can see there's a hypo right there. So what I want to introduce to you now is using AI for debugging this is extremely helpful. It can really make a big difference. And figuring out what's going on with your code. It's also a really great teaching tool. Keep in mind it's not perfect. It will give you wrong stuff sometimes.
Lewis Benson: But It does better most of the time than it does bad if that makes sense. The first one I'm going to show is Google barred. I know some of you already using this.
Lewis Benson: So I'm just gonna go to their website here. And we'll try Bard now.
Lewis Benson: Got What I do here.
Lewis Benson: I may have to switch to my other browser here real quick for that because this one. I'm on my codex domain that doesn't like that. So let me switch over.
Lewis Benson: I'll go to my personal domain. All right, so this is what the interface looks like. And I'm gonna do is grab the code. from my index and I'm just gonna copy it. And I'm gonna paste it in here and then at the bottom, I'm gonna write a message. There are bugs in my code. there's actually an entire job that revolves around what I'm doing right here. It's called a prompt engineer you're creating prompts for AI and you're getting Solutions with that. So, let's see what this says.
Lewis Benson: Google bard gives you a lot of information about what's going on.
Lewis Benson: And here we have the corrected code with the bugs fixed. But what I don't like that it's still using VAR. So I'm actually gonna tell it. I don't like VAR.
Lewis Benson: And it's explaining why VAR is bad right there. Now it just switched these all over to const. It fixed all my bugs and then I can simply grab this code. And throw it into here. And all the bugs are now fixed. Let's take a look at this in the browser. And there we see that content on we have no errors in the console so that quick I was able to find all my bugs and get it all corrected something I've noticed too is with HTML we run into a lot of issues with rhtml being a little weird for example if I have We'll put another closing body tag here. I'll put a section.
00:05:00
Lewis Benson: And what I'm going to do is put the section up here. And now my prettier is broken. It's not letting me format this code. So this is another use case where you can use this. And say let me go to Google barred again. So it's in the other browser.
Lewis Benson: This code won't format. I'm just going to put at the top this time. It doesn't matter where you put the text. You just want to kind of give a little bit of context so that it understands what you're asking. So I'm just putting in this code won't format.
Lewis Benson: And s And cleaning it all up. So there's the body with the home in it and there's all the correct it and there's also a little copy button here. We also it says use code with caution. This something takes serious because this will give you bad code. Sometimes it happens quite a bit. You have to be really careful with what you get and make sure you analyze it closely don't just copy and paste it in blindly.
Lewis Benson: Once you have it in there look it over and make sure that everything makes sense. Especially when you get into more complex code it can give you results that are unexpected. It might do something like drop an entire database deleting all of your data because it thought you meant something else than what you actually meant. It might interpret you incorrectly. You could have a lot of typos in your message. It usually is pretty good about interpreting typos. But sometimes it doesn't work the way you would want and the typos will throw it off just enough to where it gives you bad code. You can also use this to generate code. If you are generating code using AI then what you need to do is make sure you put that in your readme file and also put a code comment that it's generated code and what that means is I want to say
Lewis Benson: generate me and HTML. Index file that uses bootstrap. I need to build Pizza website use on the splash for images.
Lewis Benson: so we can generate texts or Our code this one thing to note is sometimes these URLs are also wrong. So I wouldn't advise using what it gives you because it might give you an outdated version. So you're going to want to go in and check this and make sure that everything's up to date. You want to analyze all of your code very closely. One thing I've noticed is it is missing in this Integrity part here. It's missing it down below. Let me scroll back down and make sure I didn't just miss it. So there should be an Integrity piece here on this script as well. It's also possible that it looks like it's stopped generating early. So I'm gonna just paste this in and show you what happened. It's gonna break.
Lewis Benson: Yeah, because we only have part of the script here. And prettier yelling at me. So this is one of the things to keep in mind. So we have this kind of website going on. Let's take a look and see what actually is being output now. So we basically just built a web application and a few seconds. Now, there's this thing going around the media saying that AI is going to replace Developers. It's not AI that It's developers using AI that developers. So this is a great total leverage use it to increase your workflows. And definitely use this as much as you can but keep in mind this is all generated code. So I need to add attribution to this and code comment. So what I would do is say all right here at my main. content generated with googlebard
Lewis Benson: and then I would also want to put that within my readme file as well under attributions. Make sure you do this whenever you're using these tools because otherwise these aren't your ideas and it is considered plagiarism. And we can usually pick up on generated code pretty easily. We actually have some tools. that'll check for things like that. But at the same time if you're doing some advanced stuff. And I don't see attribution and I might just ask where you got it from and if you said that you got it on AI then. Just as long as you updated afterwards will be So generated HTML content using Google bar so Google bar is great because it uses the internet to access its current data.
Lewis Benson: But it's not quite actually as powerful as another AI toll called chat GPT some you've probably heard of it. It's been trending for a while in the text base chat. GPT does a little bit better with code, but it's also a little more outdated. the data is about a year old and it uses databases. But because it's using databases rather than the power of the internet it can actually give you better responses. Let me go to their site. openi.com. You can actually just type in as a Google search and it takes you right here. I'm going to switch this to three five. I actually have the plus This is the free version. And you can do similar things I could say. Generate me HTML. that uses bootstrap or a pizza site
00:10:00
Lewis Benson: And again, this is a great learning tool because not only can It help you build out code like this. But it can also teach you what is going on here. I'll let this finish. Notice right here. We were getting some outdated stuff. We're jQuery 3.5. So some of this stuff we would actually have to go on to the bootstrap documentation and update. And again, this is why I say analyze your code what you get because sometimes it's going to be wrong. We'll check the top here. We don't have That newer piece for authentication in here. So this is the old version. This is actually version 4.5. Yes, Omar.
Umar Z: Can we copy this code from here and ask bar to update the code?
Lewis Benson: Yes, copy that. And let me go back to Google bard. So you can use these together and I would recommend using them together because they both have their strengths. So let me paste this and I say update the latest bootstrap.
Lewis Benson: use best practices The only thing about Google Bardo is it times out pretty quick. So it may not have enough time to actually generate everything so you may have to tell it to pick up where it left off at some point. So here it goes.
Lewis Benson: Let me actually look at the top here There's the latest version of bootstrap. There's our integrity string that we were missing. So it looks like it's working. But again, we ran out of time. So this is where you want to bring in that whole prompt engineer thing. What I'm gonna do is I'm gonna copy everything above
Lewis Benson: I'm gonna paste this into my as cell index.html.
Lewis Benson: And we ended here. so what I'm going to do is copy this
Lewis Benson: and say
Lewis Benson: from this point in my code snippet Show me the rest of the code.
Lewis Benson: And I just pasted that in.
Lewis Benson: It doesn't see the reference to the old one. I once have full context I can identify the closing. So maybe it just needs a little bit more.
Lewis Benson: Yeah, it's not giving me It doesn't have enough context to continue on so. This is one of those points where? You might tell it this skip everything that's not required. So, let me paste this back in again. the one from GPT This is the wrong browser.
Lewis Benson: And I'm actually going to create a new prompt here because it will use the old prompts as context. So creating a whole bunch of new prompts. Is a great way to keep the context clean. So what I'm going to do now is paste the sun again. and I'm gonna tell it to update to the latest bootstrap skip sections using Code comments So you don't generate too much?
Lewis Benson: It doesn't look like it really listened to all that but we do see the bottom here. We did get the rest of that. So we don't have the code comments I asked for but we do have the updated version so you could grab them that way to be honest though. It's quicker just to go to bootstrap and just get the latest stuff. So just gonna get bootsrap. I Copy it. And then in my vs code go back up to the top. Let me get this formatted and just replace the outdated with the new and that's your best bet for that. It is a great tool. Let's see what we actually have now. Let's see what it just looks like on the closing tag here. I keep going to the floor and brows. Let me just take it over here.
00:15:00
Lewis Benson: Okay, so that should be everything on that.
Lewis Benson: And it looks like our images are broken. But again, we have something decent here to work with a starting point. so it's trying to use local files here is what's happening. We didn't tell it to use unsplash. So it's trying to use images that I currently have downloaded. So I'd have to include those separately in order to make that work again. This is where you have to analyze your code and check what it's actually doing. So here we can see it's looking for this pizza three dot jpeg. If you're not sure why these are broken. You can always just paste it back into GPT and say I do my images not work.
Lewis Benson: my dull down earlier and now it's giving me a lot of information on why they might not Ensure that the image paths are specified in the SRC. There's all kinds of stuff here. You can also use this as a learning tool and that's one of the biggest things that this can be used for is trying to understand things. You don't get so I could say explain the array map method to me
Lewis Benson: And it's giving us all this information about it. It's giving us some code Snippets to look at we can see there's a callback function in here. And here it actually calls it callback. And it breaks it apart pretty well. And then explains each piece. So just use this as another source of documentation. I don't recommend just generating code and then using it without reading through it because you want to make sure that whatever you're using your understanding if you're copying and pasting code directly from AI into your work environment, then you're not going to be learning anything and a lot of times during technical interviews. They will restrict the use of AI to make sure you actually understand the fundamentals of these Concepts. Definitely leverage it use it to improve your workflows and speed up what you're doing.
Lewis Benson: But don't just blindly copy-paste code. It's very dangerous to do. It can lead to major issues down the road when you get into more complex environments, especially when you're working with production code. So analyze it very thoroughly and make sure that you're actually digging into that. So now another one I want to show. Is actually inside of vs code itself. And there's a couple in here GitHub co-pilot, I think. probably a couple of you have heard of this.
Lewis Benson: GitHub co-pilot is an AI generator and I'm just going to show this through this little demo here that they have to show how it works. So there it's creating a bunch of tests and I just generated all that code based on what you were typing one thing to keep in mind with this is if you bump tab at any point, it'll autocomplete unexpectedly and it can really slow down your workflow at that point. I've already used up the free trial of GitHub Code Pilot. I don't want to pay for it. I'm not a big fan of AI within my vs code just because when something pops up I often just press Tab and without looking at it and then it's not what I wanted at all and it just cost me more time. It's one of those things that you have to practice using and I'm not a fan of practicing using This here. I do leverage googlebard chat GPT quite a bit and occasionally. I'll turn on Tab 9.
Lewis Benson: Tab 9 is very similar to GitHub copilot. It works almost the same way. Let me just go ahead and install this and turn it on. It's going to ask me to restart.
Lewis Benson: But it's actually running. So if I were going to go into some JavaScript here. We're going to start with use I got the auto complete for your strict a new exactly what I wanted there. And then I'll say function.
00:20:00
Lewis Benson: And we're going to say some.
Lewis Benson: one numb two a lot of complete that and then I'm going to go to a new line. And I don't get any help here. So let me close in this to get the syntax. Good again. And then I'm going to say return. We get number one plus num2. So it's already helping me there. It's generating this code for me. I'm gonna go underneath this function and see if it gives me anything. I'll start with new subtract num number one number two
Lewis Benson: return on 1 minus num2
Lewis Benson: there we get divide number. So it kind of knows what I'm doing now. It's learning as I go.
Lewis Benson: And the more you use it the more it learns in the more effective it gets.
Lewis Benson: So as you can see, there's a lot of suggestions there that I don't want so you got to kind of slow down and see what you're doing. Even though you're slowing down it still significantly faster than actually typing this out. So every time it pops something up I pause for a second seeing what it was wasn't what I wanted. So I continued on eventually it got to a point where I was able to autocomplete and I made up all that time that I was wasting waiting to see what I was looking at. So this is a great tool. It can generate code fairly quickly.
Lewis Benson: It works very similar to Get up copilot will generate significantly faster. It would have probably created all of these functions as soon as I created this first one. So it does have more power but I do believe there is a paid version of this as well. where you can make it so it gives you more information quicker.
Lewis Benson: There's the beta. I know they have a premium version. It's not something I would recommend paying for unless you're getting a lot of use out of it and it's helping your workflows or something like that. But yeah tab 9 Pro. So it's generating an entire code block just based on a function name.
Lewis Benson: Does anyone have any questions about this And how it's used.
Lewis Benson: Turn this tab 9 back off.
Lewis Benson: Again, I'm not really a fan of using autocomplete AI I know it is powerful. I know a lot of developers swear by it. It's just not for me. I've just prefer to type out my code or I'll generate some code blocks. Don't try to generate entire applications generate pieces if you're going to be doing that. Create a single function create a single class create a single block of code one at a time and it works a lot better. You'll get much better results. So what I would mean by that is You want to give it as much context as you can?
Lewis Benson: working on an HTML bio page and using bootstrap five
Lewis Benson: build my header So I'm just getting one piece.
Lewis Benson: And then we have rest of code goes here. And the reason you want to do one piece of time because look how much code this just generated. There is a limit to how much it can do at a time and whenever you limit this to one piece at a time, you can actually give you better code. So let me just grab this piece here. It's gonna grab the header. And this is using the latest. It's not. I go to zero there. So that's where you have to be careful with this so I'm only going to grab the header. Let me go back into my index. And I'm just going to delete everything out of here except for the body. Hope and that's correct.
Lewis Benson: Through some Style Elements in there earlier.
00:25:00
Lewis Benson: And so I'll delete those as well. And so we have our header, so I'll drop that in. And let's see what it looks like.
Lewis Benson: I've got a refresh. I restarted my vs code so I'm no longer live.
Lewis Benson: Every so there's my header. And then we want to get the next piece of code so you can continue to talk to the AI. so I'll say the next section is my skills. And I want these as cards.
Lewis Benson: So it added a code comment. We don't want to copy all of this because we end up removing our header notice it removed all of the old code. But now we have our next section but notice it's not using semantic HTML. It's just using divs for everything. So we want to make sure we tell it.
Lewis Benson: And There's another article. So this looks like it's working pretty well add more skills as needed. Keep in mind that's going to be in there. So again you want to watch very closely what you're grabbing and make sure that you're not. putting generic code in your projects I'm just remove that code comment now. And let's take a look.
Lewis Benson: So there we have our little skills section each one's using cards. Does anyone have any questions about this?
Lewis Benson: Pretty straightforward again. If you're going to be generating code you need to put attribution then so for each of these code blocks, I would need a code comma here that says
Lewis Benson: section generated by GPT
Lewis Benson: And then just kind of go through and make sure you understand what all of this means so we know what a container is. It's like a box that has some margin. It doesn't go the whole way across the screen. This is margin top. It's one through five. So this is almost all of the margin top. We're using the grid system here. We have our columns. Here it's using the card body title and text. So just go through your code and make sure ending what these mean again. I want to make sure it's very clear. We don't want to copy and paste random code without understanding it. It's very very important.
Lewis Benson: If there's no questions, the breakout room You can get started on your projects. Again AI is a very powerful toll highly recommend leveraging it for debugging learning and if you just need some content use it to generate some content. Eventually, you want to start using it to help you increase your speed in a way. So how I just created these sections now, I can go in and update these to what I actually want. This is very similar to what I'm just copying and pasting code out of bootstrap. So maybe I don't want all of these nav items. Maybe I only need a few of these so I can take two of these out I could take
Lewis Benson: And just have a home and about and then you could modify this as needed. But again, make sure you're putting in these code comments that say that all of this was generated by AI that way it's clear and then you want to also put it in your attribution side.
Lewis Benson: Yes, Omar.
Umar Z: He can please share that a readmead or MD file you shared yesterday. I forgot to copy that the context and I didn't have anything to so I just a randomly updated my readme file. Can you please share that link again I think you shared in the messages.
Lewis Benson: It's in the cohort Channel as well.
Umar Z: I try to find it, but I couldn't find it. Okay, so
Lewis Benson: Yeah, it wasn't the most recent message, but it's the one right before it.
Lewis Benson: You'll see a GitHub link.
Umar Z: so when we go On slack you mean? you are.
Lewis Benson: Yeah on slack in the October cohort two channel.
Umar Z: Okay. I'm here. Okay.
Lewis Benson: Yeah, and then yesterday it was posted. So it's the most recent with the video right above the video. You should see the readme template repo.
Umar Z: I see I found it. I'll get it from it. Thank you so much.
00:30:00
Lewis Benson: Yeah, no problem. And that's actually one of the number one thing that I use GPT for. is documentation so let me go back into my code here. And we'll just grab this one. and I'm gonna say generate You read me MD. that has lots of info for my project.
Lewis Benson: And I also want to tell generate
Lewis Benson: all marked down and a code block. So I can copy it.
Lewis Benson: there is an issue here. I'm glad I actually brought this up. So with markdown, this is already in markdown. So as soon as it tried to do a code block here, it has these three little dashes. It messed up the actual response. So typically what I do to solve this and say in the markdown with I will. Be this later.
Lewis Benson: And that solves it.
Lewis Benson: what's really cool about this is when I copy this into my vs code. I'm just gonna pop override this one here for a minute. So there's this little tilda's when I save they get transformed by prettier into the correct syntax. So that fixes that it's just a little trick that little things like this. You'll pick up as you're using AI. So we use the tildas so that it generates the entire code block and it looks like it crashed.
Lewis Benson: Does anyone have any questions about that?
Lewis Benson: Because if you look at the previous reply it was trying to do this in a code book. But as soon as it put these three blocks in it's trying to Nest the code block inside of a code block and it ended the exterior code block. So it started writing this in plain marked down structure without being inside of a code block. And then it tried to make another code block. So it actually created this one. And then it ended the three tildas or throw the three.
Lewis Benson: The back ticks and then it started writing in plain text again, and then it tried to make another code block so yeah, it just messes it up. If we look in here we can see that This is the code block that it created. So that's just fixes a little bug there with it. But this is a great way to build documentation. So we have a table of contents. It has an introduction installation usage. So this is a way to navigate through your readme file. This is something I've ever actually done before but I actually like this a lot. These will actually link to the headings. So if I clicked on installation, it would actually scroll down to this heading here. And show me the installation process. This is how you clone it down. usage the website has the following structure. header navigation
Lewis Benson: This is what documentation should look like on a professional site is as much information as you can get. A contributions. This is something that you might want to look into sometime is if you ever want to build a project for example, something similar to your Capstone project where maybe you build a animal adoption website for example, and then you start posting links to your animal adoption GitHub repository on developer platforms and ask people to help you make it better and they can come in and make changes add pull requests. And before you know you can have 40 people helping you work on a website and you make something really impressive just by using the other Developers. So it is a good thing to do. I always have the license so. Are there any questions at all?
Lewis Benson: GPT and Google barred great tools highly recommend. You leverage them as much as you can if you're stuck on something throw your code in there and say hey, I'm stuck. Can you explain to me? What's happening? Why is my code not working? Why does it not look the way? I I'll show you what kind of results you would get with that. Let me bring this in I'll start a new one again context is important. You want to keep creating new prompts if it's not related to your previous one. All right HTML looks bad and you explain why?
00:35:00
Lewis Benson: It appears to have some issues but it's not necessarily bad. Let's go through the issues and explain so the structure we've got the correct dock type declaration This is a good start meta and viewport it just goes through everything and explains all of the code. So if you're not sure what's happening use AI to explain it to you, it can give you so much information. bootstrap CSS and JavaScript You've included from a CDN in case you didn't know that stands for Content delivery Network. So we're learning what acronyms mean it gives us that information.
Lewis Benson: let's address some of the issues for improvement the header element in your nav is using bootstrap classes, but it's missing the necessary bootstrap JavaScript component initialization for responsive design. So this right here is what they're referring to. So it just gives you a whole bunch of feedback on your code. So if you're not sure if your code is any good you can use AI to ask and find out.
Lewis Benson: All right, I'm gonna get the breakout room You can get started on your capstone's today again. I'll be around to check on your progress. See what some of your code looks like. I want to see what your content how it's rendering. If you have any wire frames, you can share those with me as well any documentation you want to share. Just want to see how it's going and how you're doing and make sure that you're following best practices. So be prepared to screen share when you're in your breakout room. You'll be by yourself. So you don't have to worry about showing your code to other students. Let me get these going.
Lewis Benson: All right opening them now.
Meeting ended after 00:37:17 👋