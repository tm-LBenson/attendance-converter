nia-amar-wfe (2023-12-06 19:30 GMT-5) - Transcript
Attendees
Brian Kimbrow, Chantrice L, Daniel Perez, Gregory Robertson Jr, Iris Coats, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: Hey, so this is week seven day three we're going to be doing. the bootstrap review probably just do a build out of a project just to kind of review all of the different components that we discussed maybe get a little bit into how we would structure our HTML while we're getting into that. we can get a little bit more review on that as well. Before I get started. Is anyone have any questions?
Lewis Benson: All right, so to get started with bootstrap we go to their documentation page. And that's to get bootstrap.com. And once you're on get bootstrap calm you want to scroll down to where you can import their cdns. We're not using package managers yet. This is something that would be coming soon though. So we will be able to install these as dependencies eventually here for now. We're going to use the CDN. I'm going to grab this link, which is a link to a CSS file. We can see that it has the rail style sheet. And it actually has a CSS file on this link here. So let me put that I already created my indexed on HTML to put this in.
Lewis Benson: So we just put the link at the top and you want to make sure you have the correct link. If you're ever reaching out to say stock overflow or even using some sort of AI solution. A lot of times. It'll get the link wrong because it's not using the latest version or maybe you're finding an old code base. So make sure you're checking that you have the correct and most latest version of bootstrap one of your importing it and here we can see we have version 5.3.2. So that's good. Also, they've added this integrity. Attribute recently. So you want to make sure that you're importing one that includes that as well. Otherwise, it might not work correctly. and let me grab the JavaScript import from bootstrap
Lewis Benson: And that's this one here again. You want to make sure you're grabbing. The latest one bootstrap used a jQuery solution for this and they've changed over to this 5.3.2 version. Of bootstrap that no longer uses jQuery. So this right here is the correct link. And I'll place that at the bottom of the body. I could put If I put the fur like that on that. Then I could move this into the head of my document. I'd prefer to have it at the bottom though. It's just where I'm used to finding all of my scripts. So I just put it down here as normal and it works fine like this. Let's check the browser and make sure that We do have the updated font. We have the results for that so we can see that that's working correctly.
Lewis Benson: All So I'm just gonna do a little bit of a build out of a normal web page. So I'll just kind of lay this out the way I would if I were building this and normal. So typically, I'll start off my web pages with a navbar. So I'm going to go to the bootstrap documentation. I'm going to find that navbar component. I'm going to go to their Docs. And I'm gonna go down to their components.
Lewis Benson: And here we have navs and tabs. Here's navbar.
Lewis Benson: So I just like to use their sample code. This one looks like it has a little bit of everything on it. We have a disabled link. We have a drop-down link. We have a search bar a search button we have this. Smaller link and then we have our home which is currently active. So it has that kind of brighter color and we have a logo there. So this has a little bit of everything I could just come down and grab a very basic version of I only wanted a logo on one side. If I wanted to have something like this. If I didn't want to search bar and all that. but we can always modify it we can edit everything out of here and kind of customize this for our own needs and that's The normal workflow of how you use bootstrap like this. You just grab their sample codes and modify them based on the documentation. If you work with this enough, you'll eventually start to memorize these different class names.
Lewis Benson: If you get to that point, then you'll be able to build this out through your code editor a lot quicker than coming to the documentation and actually copying and pasting and editing. So there is benefits to practicing with bootstrap. Let me paste in this now. I'll see how that looks on our page.
00:05:00
Lewis Benson: Also, there it is. Let me zoom out a little bit so we can see what this looks like a normal size. I'm three little search bar here. We have a drop-down link with some stuff in there. So what I would want to do now is actually Taylor list to the page that I'm working on and that would mean not only changing the content of these that also changing like the ID names and any sort of information relating to them to something a little bit more meaningful. So I want to go up to the top here. Let me kind of make this. I got almost a side-by-side. It deals so we can see what we're working with. and we'll be that out. So looking at this navbar, I don't need to disabled link. So let me find that first. So here's an Li with an anchor tag in it for a disabled blank. And now that's gone.
Lewis Benson: I'm gonna remove this drop down as well. We can see that this has a UL that says drop down menu as a class. We can also see this drop-down text here. And this is the content of this anchor tag. And here's the L on it. So this looks like the most part of the dropdown so when I remove all of this
Lewis Benson: And now we just have a regular link and I'm going to duplicate this link a couple times. So now we have these three links and we have our home and notice that home is currently active we can see that in the code right here. We have the nav link with the active class on it and the active class is just whatever page you're currently on you want to apply that class? so let's get these links a little bit more meaningful names we can say about we could say.
Lewis Benson: references I'll just throw a sign up in here as well.
Lewis Benson: And we can get rid of the search bar. I'm not going to use that.
Lewis Benson: So the search I can see there's an input here for that. There's a form so it looks like it's just this form. So I want to head and delete all of that. And those are now gone so we have this really basic looking Navbar is called navbar. I want to update that. This would be the name of our actual web page. Notice this ID here's called navbar supported content. We'd probably want to make these something a little more meaningful or related to our web page and not just navbar supported content. Especially since this is using Aria the Aria has to do with accessibility. And if it's just called navbar supported content, it doesn't really help with that. AR accessibility at all So let's change this logo.
Lewis Benson: We'll just put Something random in here for the name of our site. I call it spotlight.
Lewis Benson: Just some random text. And then we would want to have this. button
Lewis Benson: I believe it's the spotlight button.
Lewis Benson: So we'll call this.
Lewis Benson: spotlight
Lewis Benson: and we're just updating all of You see this and this is an ID. I want to make sure I don't have two IDs with the same name.
Lewis Benson: I don't see any on the button. So yeah, I'll call this one Spotlight as well. Let me sure they're using that old one. Okay, they're using it above.
Lewis Benson: Okay, so this is a little bit more tailored toward our own custom site now, so you just want to make sure that whenever you're building something out on bootstrap. You just kind of go through these different attributes. And your updating? The labels and the IDS and everything, let's stuff that's more tailored to your solution and not list a generic name. You want to make this very customized and not look like you just copied and pasted code off of bootstrap. it's not the most professional hey to make a solution, so This right here is just one of those things where you're just gonna kind of go with a fine tooth comb. Look at every single line make sure that it does have everything you want. So We updated our IDs and we have an updated the data bootstrap Target.
Lewis Benson: This would be used the navigation so we click that. It just takes us to a hashtag because we're already on the home. And these don't go anywhere because we haven't actually wired any of these links up. As we build out our page, I can actually build areas on the page that uses these. So we'll look into that as we go. So there's the navbar that's just the top of the page just to kind of get us started. So next I'm just going to create we'll do a carousel. This would be like our hero area.
00:10:00
Lewis Benson: So let's take a look at the carousel Solutions again. we're looking at these different components on here just to kind of get a refresher on how to find them and how to use them. And some of these are what they are too. So here's an example carousel. That has all these different slides. Seems to be working pretty well. for our images. We have these three dots we'll have to update that. We'll have to update our alt text. And Carousel example for this target will definitely want to be updating that.
Lewis Benson: And we can see that this is a previous and next button. So we'll actually just rename these to previous slide and next slide. All right, so, let me copy this into my code.
Lewis Benson: And I'll place it here underneath of our nav. And let's update this SRC. I'm going to use the random images link. So that's lon Source Dot unsplash
Lewis Benson: .com slash random and then we're going to put in a query string by putting in a question mark and we'll put in the parameters. City night
Lewis Benson: And then I want to copy this down and then change the parameters on each one.
Lewis Benson: We'll do pack night.
Lewis Benson: and we'll do
Lewis Benson: And upload day for that one.
Lewis Benson: So for the alt text.
Lewis Benson: We want to make sure we're always updating our alt text. It is very important. Don't skip over this even on little projects that are only going to be for portfolios. Because whatever you build something out for a portfolio. You may have to do a code review with a developer during an interview on projects you built just to kind of show them what you can do. They may say hey, what should be something you build so you will come into your project and you do the kind of a code along thing with them or you're Explaining this line by line just a normal code review. And if they see you're skipping over the alt text they may find that a little bit concerning. So just make sure you put something in there. so that Shows that you have to have alt text even these small details really do matter. Also adding comments in your code definitely makes a big difference as well. It also allows it to be more organized and modular.
Lewis Benson: All right, so there's all our alt text. and then for these I'm going to put pre
Lewis Benson: button
Lewis Benson: and next
Lewis Benson: answer those look like they're all up to date. We're using a width of 100 here. We may have to change this a little bit or put this inside of another container. This Carousel should be a hero images something like that.
Lewis Benson: I did mess that up. I apologize this right here should be the same as these buttons
Lewis Benson: so that these buttons are wired up to the correct one. So when you're tailoring this you don't make all these random. It is an easy mistake to make but I noticed that when I went back to the documentation, this idea is Carousel example, and each of those data attributes are also caring cell example. So there they are. And I noticed they also have a hashtag in front of them. So we want to make sure we include that htag. there as well so everything looks to be the same now. So, let's see if this is working correctly. So here's a large image. And I hit the arrow and it goes to the next one. So it does seem to be working correctly. But that width of 100.
00:15:00
Lewis Benson: We're telling it to be the full width of the screen. That's okay. It's the height that I want to adjust on this to make this more like a hero image. So let's try to change this to H25
Lewis Benson: And I'll add this to all of them just to see what kind of looks like.
Lewis Benson: I may have to put this into a container and set the container to be 25. Yeah.
Lewis Benson: So I could probably do it here. Yes, Krystal.
Krystal Jefferson: 
Krystal Jefferson: random question, What do you use again to copy and…
Lewis Benson: Sure.
Krystal Jefferson: paste that so fast?
Lewis Benson: Copy and paste what exactly I'm sorry.
Krystal Jefferson: how you're copying and how you're pasting? you're doing it pretty fast. I usually can't do it that fast. So
Lewis Benson: which part that I copy and paste specifically like the
Krystal Jefferson: No, when you add at the height, yes.
Lewis Benson: out of the documentation
Lewis Benson: So the height I didn't actually copy and paste I just typed 25.
Krystal Jefferson: No, no I'm saying you added it to.
Umar Z: So I think she is talking more tab.
Lewis Benson: This whole thing.
Umar Z: Where should you press the tab and copies the whole thing?
Krystal Jefferson: Okay.
Umar Z: I think that's…
Krystal Jefferson: Got you. Mm-hmm.
Umar Z: what he means.
Lewis Benson: you mean the documentation when I click this little button here
Krystal Jefferson: No, not there when you Okay, now I'm confused, but I get it now I get it.
Lewis Benson: So there was the hero images. I copied those and I pasted them down here. I just highlighted and pasted.
Lewis Benson: Is there something else you seen me copy? I'm I'm confused. I don't.
Krystal Jefferson: no, no when you add the H25 right here, and then you added it to the other images as well.
Lewis Benson: Yeah the age 25. I just typed H25. I didn't actually copy and paste it.
Krystal Jefferson: No, no, I'm saying how you added it to the other images as well. when you type it in. No.
Lewis Benson: maybe I did call it. Yeah, so I might have did H25 shift.
Krystal Jefferson: Yeah, and then you add it to the other images as well. I was just wondering how you did it that fast. Yeah like that.
Lewis Benson: 
Lewis Benson: yeah, so whenever I wrote it, I don't know if I did this initially I wasn't really Thinking about what I was typing but I hit 25 and I held shift and I pressed left four times to highlight it.
Krystal Jefferson: Okay.
Krystal Jefferson: I got it now.
Lewis Benson: Yeah, and…
Lewis Benson: then I could control C. And then I was just kind of navigating with my keyboard. So I wasn't really thinking about sometimes a little shortcuts like that. I'd take them for granted. I don't even so yeah, I don't always use the mouse to
Lewis Benson: Yeah, if you hit shift left four times, it'll highlight the whole thing C And then control Vita paste it.
Krystal Jefferson: Okay, I got it. I see.
Lewis Benson: Okay, yeah. I'm glad we could get that cleared up on that. So as far as the solution goes, I don't want this to be this tall. So that's the issue. We're dealing with her now. Let me see We're at a hundred percent so much try to put this on a wrapper.
Lewis Benson: And see where this at leave it ends here. So this outer div. I'm going to give it a class of container.
Lewis Benson: that my width away
Lewis Benson: so we'll do container fluid. So that it does go the full width and then I'm going to put H25 here and see if that shrinks it down. It did I may actually have to set the height on this manually. Let's see what they have in the utility classes for setting height.
Lewis Benson: So here's our sizing. Hoping maybe I was just using that wrong, but it doesn't look like it.
00:20:00
Lewis Benson: And they're setting their manual width there. display inline block
Lewis Benson: that might be necessary. I'll give it a try.
Lewis Benson: Doesn't seem to be working for that. So I'm going to put a style attribute on this and see if we can just hard code that in. So we'll just Style. height I'll say 600 pixels.
Lewis Benson: And it did not seem to overwrite it as well.
Lewis Benson: You find that outer one. This is the kind of things you'll run into whenever you're dealing with. we can actually see that's being overwritten right there. We have an H25 with an important on it.
Lewis Benson: See if there's anything else taking our height away.
Lewis Benson: Yeah, it could just be the scale of the image as well. I may have to adjust the image size through the URL in order to get that to be a lot shorter There's probably a better solution then so I'm going to take another look at this and the sizing and see if we can come up with something that works out well for us. Here they the style attribute with a wrapper which is similar to what we're doing. So this container fluid might be part of the issue here. We removed that remove this. and I place the
Lewis Benson: the height here the way they did it.
Lewis Benson: And we'll say 600 pixels.
Lewis Benson: and then I might be able to place the actual H25 on the inside one. So let's take a look. Alright, so the height definitely applied now, but we can see it did scale it.
Lewis Benson: And it's got some weird Behavior going on.
Lewis Benson: So this probably isn't ideal. And that's because the images coming in are so big when they come in and The Styling is not being applied until after it's done with that little animation. So I'll definitely have to just adjust the images, which is what I normally would do with images actually set my wits and my Heights on it. So I believe I can say h. Or I guess I'd be over here. I'm not sure. I can't remember exactly how to set this URL up.
Lewis Benson: if I can. take a look at the
Lewis Benson: So here we actually get it.
Lewis Benson: They do have some information in this URL. fit Max Maybe I'll use this fit.
Lewis Benson: unfortunately, it doesn't work. Yeah, I'm not sure how to actually get the image resize without saving it and then adjusting it there. So we'll just work with what we have for now. And I'll see if I can. Maybe change the height here.
Lewis Benson: I'm sorry, this we Style. height and secondly pixels
Lewis Benson: and that does set it to 600. But again, we're dealing with That weird behavior of such a work without for now.
Lewis Benson: So they're all set to 600 and now I'm just going to stretch the width. So it takes up the full width.
Lewis Benson: If it lets me do that. What's the third image?
Lewis Benson: Yes, so it does it for a second and then it scales it back again. I may have to remove.
00:25:00
Lewis Benson: sometimes you got to play with this stuff to get it just right and this is one of the annoying things about using a framework like this is everything's kind of pre-made. So you just got to work with what they have? And then try to get it from there. So there Let's go in the way across this is what we wanted. Yes to scaling is off. That's something we have to fix with object fit. But it does do exactly what I was going for. It gives us three images it takes up. About three quarters of the top of the screen. So this is what I would call a hero. Sometimes you could put a button right in the middle of this. It would be like a signup button. That's something you would use absolute positioning for. Another good use case for that and you would also do this. You could use bootstrap for that. I believe they have the absolute positioning. Yeah, they do. So we could place a button directly in the center.
Lewis Benson: of this using absolute positioning and that could be like a signup button or an enter the page something like that and then while that button sitting there Over top of this. This is slowly scrolling through these showing us the different images. So to give it a nice little touch. We'll go ahead and actually do that just for that little bit of practice. So let's find a button.
Lewis Benson: And we'll use the success. I think that's a good button for this.
Lewis Benson: So I'm only grabbing one button. There's a whole lot here. So I'm not going to click the copy to clipboard. I'm just gonna grab the one I want. And that button has a class of ptn and then BTN success and it also is a button element. You don't have to use a button element. You could change that to be a div or an anchor tag or whatever. You want It just needs to have these classes on it. That's the important thing. So I'm gonna place this button. I can go above my Carousel or underneath of it. I'm going to go above with it.
Lewis Benson: And so it should have it directly above the Carousel and there it is. So next we'll go back to the absolute positioning.
Lewis Benson: and we want to put
Lewis Benson: we're gonna try this one here. It's position absolute top 50 start 50. It looks like it'll try to get us somewhere in this area here notice. It's not perfectly centered, but it's pretty close. So here they actually have something. this is perfect. They have a way to center it. So we'll use this one actually.
Lewis Benson: So that way it's dead right in the middle there.
Lewis Benson: And we'll put those classes on the button. And this is how you use these utility classes? You come in to hear You see what they do, and then you just add the class names to whatever component you're trying to manipulate. And let's take a look at that.
Lewis Benson: It looks like we might have a z index issue. Where the button is behind the carousel, let's take a look.
Lewis Benson: There's the button. so the button is currently behind the carousel. So, let's see if we can bring that to the front. Let's see what they use for Z index.
Lewis Benson: So in the utilities here Z index and all this does is it allows things to come to the front or send it to the back? So currently our button is behind the carousel so it can't be seen. So we want to bring it to the front. Let's see. Where is
Lewis Benson: We have Z index. And it goes up to three.
Lewis Benson: So Z3 is the highest level. So let's apply that.
Lewis Benson: And there's our button in the middle of the page. We're going to rename that From Success though. to
Lewis Benson: click here So this is a call to action. It kind of entices you don't want to click on their little sign up page so you can scroll through this and that's buttons always there. So real good example of where you would use absolute positioning as I would scroll down to page the button would remain in the middle. I don't have enough content to scroll just yet. But when I do you'll see that it actually does work like that. Does anyone have any questions about these utility classes about any of the process that I've gone through so far to make this work the way it's working anything at all?
Lewis Benson: There any confusion about how I was able to get the button centered or get this Carousel to fit where I wanted it to fit?
Lewis Benson: All right. I will continue moving on. If you do have any questions just feel free to let me know and we can address anything that. You might be confused about. Next I'm gonna bring in accordion. I'll put the accordion underneath of the parasail. So an accordion they're used a lot. they're very commonly used. So at some point in time you may be asked to create a web page that has an accordion on it. And you want to be kind of familiar with the process of this and this is one of those components where you can do this without bootstrap using just CSS and a little bit of JavaScript. I wouldn't recommend it though is a nightmare to build one of these manually. I've done it as a challenge before just to see if you know how difficult it is and it is doable and I'd recommend just using a framework.
00:30:00
Lewis Benson: Here's an example of one. So notice I'm going to refresh the page. This top one is already open if I refresh it's open by default. So that is something to note if we look at the actual component here. There's some sort of attribute holding it currently open. So we'd have to compare the different components to see which one is keeping it open and how it's state is being set.
Lewis Benson: I am so this one has collapsed as a class. This is That has Another button with collapsed past tense. So let's look at this button up here and it doesn't have the collapsed. So that's what's holding it open. So just want to kind of look through that note it. And let's go ahead and bring this in I'm going to use the whole thing because typically when you have an accordion you do have more than one item. Unless you're just using it to kind of hide content. It's not an uncommon practice. Maybe you have a small image right here and you have a caption underneath of it. And this could say learn more and then you just click a button and it pops the text down. You can learn more about the image without having to view it at all times. I believe they also have a button version of this somewhere.
Lewis Benson: It may be in a different location. I did use it before off of here.
Lewis Benson: I might have to dig through Different parts to find it but there is another version of this that it has a separate button somewhere else on the page and when you click it, it opens up the accordion. So it is useful. Let me copy this in.
Lewis Benson: And I'm gonna go under my carousel. And place it here. Let me start putting in some code comments because this is already getting to be a bit messy. This is going to be.
Lewis Benson: There's our hero section.
Lewis Benson: Call to action button.
Lewis Benson: Our navbar so again, I'm adding these in here just so as I'm scrolling quickly. They kind of pop out and I can find these components quickly. It's really helpful later on whenever you're trying to update things or change things and it's like where is the beginning of this? Where is the end of that? And that's another thing you can also put a second comma here if you wanted to saying that this is the end of the nav I'm not going to do that because I have a comment here telling me this is the beginning of the next section so that would imply that that's the end of the nav. However, if you're scrolling from the bottom to the top It would be a good way to find where does the bottom of my nav begin without having to scroll past find the top of the school back down. So if you want to you can put comments on both ends. I'll do it just to show you what I mean. I put a code comment here. I could say bottom of nav. And I'll put a little bit space between these.
Lewis Benson: And then what you would do is if you're scrolled all the way at the bottom and you're scrolling up and you're looking for the bottom of your nav bar, you'll see the code comment and you'll know this is where it all begins and then the first especially for really large components or navbar almost takes up the full width or the full height of my vs code. So whenever you have a component that large and sometimes you'll have them much larger than that. It's not always a bad idea to put a code comment at the bottom of the section as well. But I typically just do it at the top. But if you like it go for it type of thing. All right. So this is the hero section. So next is going to be our accordion.
00:35:00
Lewis Benson: Alright, so I'm just going to copy this right over.
Lewis Benson: And then next thing we want to do is update all of this information. So we have a bootstrap according example thing going on here again. So this is gonna match the idea at the top. So if I scroll all the way up?
Lewis Benson: So Here's our ID accordion example. all of these Data bootstrap parents they need to be the same. So what you can technically do here is Alt click so I have my cursor after the e. and then I can alt click after this e and then I can find other ones to alt click and it doesn' it's giving me multiple cursor so I can type in all of them at once. So if I can Have a cursor here. I have a cursor here. And I have it after every single one of these. So as I update my ID, it's going to update all of those data pieces as well. So what kind of data do we want in our accordion? This is going to be general information. So that's what I'm going to put here is general information.
Lewis Benson: And we should see an accordion here. the top ones open by default. I think I want to have it closed by default. So I'm going to add that collapsed class. to make that happen so here is
Lewis Benson: let's find Here's a button it has collapsed on it. So I'm just going to copy and paste that so don't miss type it. And then I'm going to look for the rest of the button. So a little trick you can do if you're looking for certain elements. If you click on an element, it'll show you all of the elements. I'm actually double clicking to highlight it it'll show you all of the elements called buttons. So there's the one that we're looking for. It's highlighted. It pops out easy.
Lewis Benson: And we have another button up here. this is for the carousel. I could tell that because my code comment here if I didn't have this code comment. I might have kept going. So this is the button that we're looking for. So we're going to add the class collapsed on it.
Lewis Benson: And it didn't seem to collapse it by default.
Lewis Benson: So that might be part of the styling. That goes into the collapsed. Yeah, it looks like it changes a little bit.
Lewis Benson: So I need to find what is actually being applied. I can just look at my Dev tools here and it will tell me what's changing.
Lewis Benson: I just need to find it in my Dev tools. So it's nothing yet.
Lewis Benson: And we can see all the classes changing here. This one has a show on it. and now it doesn't
Lewis Benson: so we have accordion collapse shell. And then I click it and we have accordion collapse. So let's find that show class.
Lewis Benson: And now it is closed but notice we still have that coloring. So that's the styling I was talking about earlier. And we need to make sure that we add the collapsed class.
Lewis Benson: So that styling is gone. So now that it's closed by default. And again, this is one of those things where if you're using bootstrap and you want things to be done a certain way and it's not exactly the way you want it you'll have to come in here and kind of figure out how to manipulate it. So again, if you see I was using my Dev tools here every time I click on it. If I can find it in here again. We can actually see the class names changing and that's how I was able to Define what to actually change in my code by watching that happen. Another way you could have done this is by copying and deleting item one completely and then copying and pasting item two and then changing the content and that would give you the closed version. But sometimes you have to do things like this where you're just watching the dev tools for things changing. So we can see that happening there.
Lewis Benson: And it's a pretty cool little trick As it's using JavaScript to make this work so javascript's actually adding class names now that we're familiar with JavaScript. We kind of know how this works under the hood. So we know that there's a click listener on this element and when you click on it it has the er. It has a and within that callback function. It's selecting the element and saying add class. So it's doing all of that behind the scenes. So we click on that and we can see that that class just got added and then we have a class list dot remove method. We click on it and it's gone. So It's good to know under the hood how this stuff works because it could be a good way to figure out how to make it work the way you want it to work and you could always customize some of this stuff using JavaScript as well. You could override the current JavaScript with your own JavaScript.
00:40:00
Lewis Benson: So keep that in mind and some of that can be a little tricky notice my buttons moving there a little bit when I click. It's because we're adding a scroll bar. So when we have a scroll bar the buttons at that elevation and we don't have a scroll bar the buttons there so The score bars are actually pushing that around a little bit and it's a really interesting thing that's happening right there. Those tiny little details like that are things that you definitely want to watch out for when you're doing design especially if you're going to be presenting this to somebody There's a little details can really make a big difference somebody with an eye for design will notice that they'll see you open that and I'll see that button move and they'll be like what's up with that? Why is that button moving? And then they'll know that it's absolutely positioned and your screen size is changing and all of that can be changed you can adjust all of that through JavaScript?
Lewis Benson: Or through CSS as well. You can make this all behave differently, but there's a little details you go to watch out for them. And then you may have to find Solutions on your own as well on how to make that work one possible solution might be to this relative to the image because notice the carousel isn't moving. So we're currently relative to the body the bodies which changing so that would be the easiest thing just set the button relative to this and then we have to Nest it inside of that container.
Lewis Benson: So that's one possible solution There's a lot of ways we could approach it. Yeah, just what I wanted to be aware of that is happening right now. Let's change these accordion item names. I don't like having too much default stuff going on. We'll do information about our company
Lewis Benson: And we can do.
Lewis Benson: I don't see an updating. by putting this in the wrong spot
Lewis Benson: you're doing search for accordion. item
Lewis Benson: Okay.
Lewis Benson: So this is the accordion section.
Lewis Benson: I'm sorry, I was typing in the wrong file
Lewis Benson: Okay, so we'll make information about our
Lewis Benson: there we go. Now those are updating.
Lewis Benson: So returning some new content in here, so this is more. realistic looking in a way I'm not going to change the inner content just the outer content just to show that this isn't that generic but at the same time this in here is very generic. You could change this out with Laura mipsum if you wanted to So you're not having that default bootstrap stuff so that it's not as obvious. This is coming from bootstrap. Somebody might not recognize it for what it is. And especially whenever you bring in a template, which I'm also going to be doing today. We're currently just using the default bootstrap stuff, but I will remind you how to bring in your own custom. bootstrap or use a template for that
00:45:00
Lewis Benson: Does anyone have any questions about this?
Lewis Benson: as dive back into these components I just want to talk about these Spinners again. I want you to remember them for whenever we actually start getting into stuff that has a delay. So we could do this we could actually make this work right now using bootstrap where the page loads up. using JavaScript and we could set some sort of timer to make these work basically sometimes when you're retrieving content from the internet, there's a delay and it could take three four seconds to actually load that content in it could be an image it Could be anything. And you can use these Spinners to hold the place of the page until it actually retrieves the content from let's say a database.
Lewis Benson: Databases take time, especially for pulling a whole lot of data. You've probably seen these for example, if you're scrolling on social media, they have some sort of spanner or some sort of Animation as you scroll down and it's loading more content. That's where you would use something like this. So these are really useful. You can also get some off of that. I quantify I just will share that real quick as well because these can work the exact same way. But you can get some more options using another Library like iconify dot design.
Lewis Benson: And I'm gonna hit browse icons. And I at the top here. I'm gonna hit animated icons. And then here's our SVG Spinners. So there's some other options here for animated. things you could say and you could use these in place of the bootstrap stuff if you didn't want to use their Spinners because they are kind of limited here. they have this one. They have some dots showing up.
Lewis Benson: So there are some choices here, but if you don't like any of these choices You can always go for iconify and you can bring them in.
Lewis Benson: Using the JavaScript and the HTML or you can just bring in the entire SVG if I wanted to bring and say this one for example. You could actually just copy all this SVG here. I have to call Copy button.
Lewis Benson: And I'll just throw this in my document temporarily to show you what it looks like. I'll put it.
Lewis Benson: I'll put it underneath of the accordion. So again, this is a lot of stuff here.
Lewis Benson: We're not expecting anyone to interpret any of this stuff. and whenever I format it it gets A little much this is taking up a lot of my document here. So this is one of the reasons I don't really go for the svgs all that often, but sometimes if you don't want any JavaScript on your page for some reason if you want a JavaScript Free Solution You can bring this in as an SVG and you will have zero JavaScript then and you'll have a little bit of Animation going on. So there it is on the page. Let's do that little loading thing. Looks like something's trying to load at the bottom of the page. I'll just do that forever and retrieve something. Now if we had some JavaScript implemented here I could put it in a container just to show you what I mean. we'll say div with an ID of spinner
Lewis Benson: and I'm just going to copy all the stuff.
Lewis Benson: And paste it into here. And then using JavaScript we could delete this div by selecting it. I'll just show what I mean real quick. I'll create a quick Javascript file. I don't even need to create a Javascript file I'll type it right into the HTML
Lewis Benson: So at the bottom of my page, I want to create another script. And you can write your JavaScript directly in here. So I'm going to say spinner equals document dot query selector pass in our ID of spinner
Lewis Benson: and then we can do something like after a certain amount of time. Delete it so I'll put in a set timeout.
00:50:00
Lewis Benson: And we'll put in our callback function. And we'll do spinner dot remove.
Lewis Benson: and we'll put this on a five second timer
Lewis Benson: so after five seconds and then after it goes away, we then load the content that we are waiting on. So if I had some new content in here. create a bit. I'll do P equals document dot create element pass in that paragraph We'll give it some content. enter text equals something I haven't shown I just want to share this real quick because it is a useful thing. I'm going to back this up a second here. I'm gonna make this a div But I'm just going to call this content.
Lewis Benson: And we're going to make this a give. And something I haven't shown you which is useful. Is you can actually write HTML inside of your JavaScript? It's not the most common way to do this. But if we want to go up here and grab a little bit of content, we'll grab this bit of text here. I'll grab the whole div I'll remove the class in the bottom.
Lewis Benson: so instead of doing inner text I can do inner HTML so we'll say content HTML equals and I'm going to put in a string and just paste that I might need to use template literal word for this.
Lewis Benson: Because we have the class with the quotes. Let me delete that class.
Lewis Benson: The formatting doesn't work that well because this is a string in JavaScript. So it's not sure how the work with that. But let's see what happens after five seconds.
Lewis Benson: So there it went. I didn't append it though. So let me add that little bit left. content we're going to append the content to We'll have to append it to the body. So I need to select that. document query selector pass and body and I'll dot append child and we'll pass and content I notice I didn't put this into a variable. I did it all in one line and this is called chaining. So we have this method query selector and then we have the append child method. We're just chaining them together that's perfectly valid. So let's make sure this is Away already is working because I didn't put it inside a delay. so the add to document part should happen after it's removed like that.
Lewis Benson: So we wait our five seconds. And again, this is just to show you how these Spinners work. And it's downloading and it loaded our content. So there's a little bit of a rabbit hole there, but I think it is important to understand how these Spinners work and why you would want to use them sometimes In this case. It's content takes five seconds because we build it this way. We told it to take five seconds. But if we were integrating with a database that does take time and you would want to have it. wait until you get your data from the database once you have your data go ahead and append your content and Again, you can do this. I have all these different HTML elements being appended inside of a div here. So let's take a look at that inside of the elements.
Lewis Benson: And it has that class of accordion body. That's looking the wrong one. Here's the div. And there's that strong element and everything that was included. Does anyone have any questions about how I did that?
Lewis Benson: I know that was kind of quick with the JavaScript here. Most of that is review. But again, I really wanted to iterate over these Spinners because they are very useful and I highly recommend using them when your page is loading because it is kind of jarring whenever you have delayed responses on your page. For example, if you have really large images You set a timer you can load to content behind the scenes. Load it into your JavaScript is a variable perhaps. And then send it to the page once it's fully loaded. There's also a thing called lazy loading. The way that works is if you have images way down your screen, they won't load until you to your scroll just above them right before they're visible then they load in let's just save data on mobile devices.
00:55:00
Lewis Benson: so you don't want to load the images and right away you might want to put a spinner in for that as well just to make sure that the images are low it's clear that something's loading if they're going to take a little bit of time. All right. I'm going to comment all of this out.
Lewis Benson: And we'll just keep the spinner there. We'll keep it spinning.
Lewis Benson: Actually, no, that's that big SVG. I'm gonna remove that. I'm sorry. we don't want to fill up our entire document with an SVG here now. So with that, I'll remove the script as well.
Lewis Benson: Just so we can keep moving forward with this. so we ion. We have some content in it. We have our Carousel we have our call to action button. I think we should put some cards in here. Maybe have some more images on these cards. I'll start putting those in. Let's take a look at the documentation though first.
Lewis Benson: Here is the card. And I kind of like that. This one has a button on there that's got the image at the top and then There are some more basic versions. This one has a card title and subtitle and some text with some links in it. So we're looking at this piece of demo here. And then we're looking at the code underneath of it. This code creates this here. So just remember that when you're looking through this documentation, whatever code you see here if you want to know like. What's right above it? So that's how it's going to look. Here we have an image.
Lewis Benson: Places and image at the top of each card with card text and can be added to card. This is the one I think I'm going to go with because this one is very basic. We have a little caption at the bottom. That looks pretty good.
Lewis Benson: You have a card with lists.
Lewis Benson: I don't think I've ever used a list card. And then this one has everything and has the image. It has the text list and the links. We have header and footer. So again, you just want to look through all this documentation while you're using this stuff and even if you kind of know what you want to do check through and you might see another idea that could improve what you're working on. Here we have the block quote.
Lewis Benson: A lot of cool cards here again. I want to use This one here. copy that in.
Lewis Benson: and I'm gonna do this as got out of there. I'm going to do this with a container. So we'll just create a section here and give it a class of container.
Lewis Benson: and then within this container I want to create these cards so that this is kind of a responsive build.
Lewis Benson: So what we want to do is make it so. depending on your screen size it will automatically kind of rearrange. So there's a few different approaches for that. One of them you could use the bootstrap grid system that allows you to kind of lay things out. so that let me just bring that up real quick. Look at layout.
Lewis Benson: So here's the grid. This is for a form.
Lewis Benson: Where is grid asked if I clicked on form? There we go. Grid. So this is what we use our rows on our columns. And we can change how many cards are on the page based on the width of our page.
Lewis Benson: So this would be a Large or above screen size. It's going it's gonna have two columns on a larger above screen size as what this is saying. So it always goes from whatever you put in and above. It's a little bit backwards to how media queries work. So it kind of throws me off sometimes. the Medium-sized Auto is saying just decide based on the width of the content.
Lewis Benson: Let's take our 10 minute break real quick and then come back and I'll actually build this out with the cards and using this responsive design. And so let's start to 10 minute timer before I did anyone have any questions. Just want to make sure I'm not leaving anyone in the dark here. We're going break.
01:00:00
Lewis Benson: All right, so no questions at this time. So I'll start the 10 minute timer and bigger taking a break when we get back. We'll get into this cards.
Lewis Benson: And I'll see you in 10.
01:10:00
Lewis Benson: All right, welcome back. So let's dive into this responsive design putting in them cards or images and making this so that it would respond on mobile or large screen size. So here we can see the different. Column, so what this means column This means on from small screen sizes. We're going to have eight rows. So there are I said I'm at columns our content spots, whatever you want to call them. There's basically each cell at 12 cells Across that we can use in space so we can see here. We have eight and then four because these are side by side.
Lewis Benson: So what this does is it gives us a total of 12 content places for this element to take up? So we can also put more than one at a time. For example here we have column six. This would be your Mobile screen sizes. Typically you would write these mobile first column six on a mobile screen size because it always starts with By default when you don't have anything above it, it'll start on the smallest screen size. It's going to take up six contents spaces. And then when you get on a medium screen size, it'll take up four content spaces and you could also put in here a large one until it to take up two content spaces on large. Typically, you want to decrease your content based on your larger screen sizes. So that it spreads it out across the page a little bit better. So, let's see what that looks like.
Lewis Benson: We'll bring up for document so we can see things happening. So I'm going to start off by creating. I have this container here. I'm actually just going to change this to a row and that way we don't lose our margins. I could do container fluid, but it's not really necessary since we're going to be doing this grid system. So we'll do. a row first
Lewis Benson: And then inside the row, I'm going to place my first card. So let me go to the actual card component. I'm actually going to put a wrapper in first and we'll actually put our Mobile screen sizes on this wrapper and then I'll put the card inside of that. It's just a little bit easier this way I could put it directly on the card. But sometimes you get bugs doing that. So it's a good idea to just put in a wrapper and then put in your sizing on that. So we'll do CL 12. So there'll be 12 columns and this is going to mean that on a mobile size. This will take up the entire screen. It'll go all the way from left to right. And then we'll do call on medium screen size. We want to take up four good spots.
Lewis Benson: And then we want to put our card component inside of here. So let me go to bootstrap and get the card component.
Lewis Benson: And let me find that one that I wanted. Here it is.
Lewis Benson: And I'm just going to drop that right in here.
Lewis Benson: All right, so our source is dot Let's change that to use that unsplash link again. Just scroll up and grab that.
Lewis Benson: There it is. copy this link
Lewis Benson: and go back down and paste it in. So our SRC has that link. I'm going to change you to these though. I don't want them all to be the same. We'll do something like water on those two parameters now you put that in here.
Lewis Benson: So I got a typo there. Let's fix that. and we have this some quick text we'd want to have a text describing our actual card so
Lewis Benson: Down by the water. We have a gift shop just so we have some content in there. And let's see how this is looking on our page. Here is our card. It's right up against our accordion. We can fix that with. a utility class We'll just do it here. We'll say Mt. - 5 and that'll push that down. So our entire row got pushed down with that. Margin. Also, we don't have a lot of space on the left and right of our page here. that's because we're not using that a container. I'm actually going to put that in there because I think that would look a little better. So we'll just say painter. And then yeah that brought that over a little bit. So it also shortened it.
01:15:00
Lewis Benson: That's actually think I like that better. never mind if I refresh it'll change.
Lewis Benson: Yeah, so it's just the image was a different size. So if we wanted our image to be locked to a certain size, we'd actually have to set that. We could do that here.
Lewis Benson: We could say That's to do style first. Max height we could do two 80 pixels or something.
Lewis Benson: Actually, I'm just gonna set the height instead of Max height my way there all the exact same.
Lewis Benson: Yeah, so that seems like it worked.
Lewis Benson: We got this lock to that height even a scaling looks. So let's put in some more cards now. So basically, all I got to do is copy this. Column 12 container here because this is what is actually determining our content within the row. So we have a row now. We need to have all of our columns. So I'll put a second one in.
Lewis Benson: And this is a good time to start including comments. top of card so actually want to copy that in as well because when you're starting to go through all of these it can be hard to find where things end and begin so that definitely can help. So let's put that in.
Lewis Benson: we have two of them. So we'll give this one a little bit different. We'll do City landscape.
Lewis Benson: And then I'd want to have some text relating to that.
Lewis Benson: So there's Another card, they have different heights because they have different amount of content there. We could set this card body to have a set height that way. They're all the same. We would do that by saying style outside of the class. And then give it a height. And we could give this a hard coded height of say. 80 pixels
Lewis Benson: and now they're both exactly the same this could get a little weird if you don't have a whole lot of content and you make this one really long. Also, you would have to deal with overflow if these get too long. So that's one thing to keep in mind with that. So let's go ahead and add another card.
Lewis Benson: So there are three cards now.
Lewis Benson: And we'll see what happens on Mobile screen sizes. So I'm gonna hit this toggle device hit mobile small. And then we'll scroll down and now we can see our card. Is taking up a hundred percent of the screen height?
Lewis Benson: Notice the rate up against each other though. So that's something else we can adjust we can put a little bit of margin top on that. How to fix that one thing I like to do whenever I'm actually building websites, especially if I'm aiming for this mobile first design, which is considered a good practice to do as I'll actually leave my page exactly like this. I'll have my Dev tools over here. I'll have my screen in this mobile view and mobile small and I'll build my entire application exactly like this because I kind of look at this button right now. This looks a little weird we might want this button to be down a little bit lower. So things like that. So you build your entire web page and mobile view and then when you're done you expand it out and you see how do things look on larger screen size? So look right here. We got some weird Behavior there.
Lewis Benson: So that would be something that we would have to adjust for my experience though. It's easier to go from Mobile to large desktop than it is to go from large desktop to Mobile when you're doing design. It is significantly easier to scale up than it is to scale down. So let's just add a little margin top on each of these. We can do 3.
01:20:00
Lewis Benson: And that spaces them out nicely again. We're just using that utility class. Now we're getting kind of stuck there on that scrolling. I'm not sure what's up with that, but I can scroll with my finger. That's what this little dot represents is supposed to be a finger on a touch screen.
Lewis Benson: So it gives you an idea of how this would behave if you were actually touching the screen.
Lewis Benson: Okay, so those look pretty decent. I'm just going to duplicate this a few more times so that we can see what this looks like when we have six cards total. So actually I was duplicate all of them. And that will give us our six.
Lewis Benson: Okay, so on mobile screens looks awesome. What I know I have a lot of the same image right now. I don't want to go through and just update all that content at the moment just for times sake. Let's go ahead and close the mobile view. And there we have three side by side. We do have a little bit of sizing or spacing issue going on here. I believe it's because of the margin top. Let's take a look and see if we were missing this on one of them.
Lewis Benson: So this one doesn't have any margin top.
Lewis Benson: So I did miss that on a few of them. And it did throw things off.
Lewis Benson: So there's that one. I'm just gonna highlight top of cards. I can have that stand out to me a little bit.
Lewis Benson: all of our Heights are correct. is a six cards across. No matter how wide we get once we get down so small. We do have that little bit of overlap issue there. That's something that we would have to address by adding in Another value. So what we could actually do to correct that. We're currently going small to medium we can add in one more here. We could say column. And put this on. SM
Lewis Benson: and we may have to adjust that a little more. Yes, Omar.
Umar Z: The difficult question this extra code showing in pink or red is it gonna make any difference or is it okay if it stays there? Right next to margin top three there are showing an extra coat.
Lewis Benson: Next to it. What do you see?
Umar Z: yeah, empty - 3. You see and two.
Lewis Benson: Yeah good catch this could do is actually break my prettier if I hit. Yep, seem prettier is no longer working.
Umar Z: Yeah, yeah, so that's what I was thinking because maybe that's because happening with me yesterday. I wanted to ask you about that.
Lewis Benson: Yeah, so that is a good catch and I have that in a lot of spots. So I need to find all of those now and That's the problem with copy paste is…
Umar Z: right
Lewis Benson: if you have a bug you're copying and pasting that bug as well. We still have that little bit overlap issue going on.
Lewis Benson: Let me look at oops the mobile size for that and see where that actually happens. What breakpoint we're on.
Lewis Benson: So we're on. the nine nine seven. So this is actually showing us our media queries here. These are the bootstrap media queries that are built in so we can see when we hit that screen size right there. It's not happy with it.
Lewis Benson: So maybe I need to make this. large instead of medium to fix a
Lewis Benson: and I'll have to actually duplicate this down.
Lewis Benson: and up
Lewis Benson: you can add in more breakpoints by adding in your Smalls and everything else, but I don't think it'll help in this case.
Lewis Benson: Yeah, so it goes down to one pretty early there.
Lewis Benson: this is one of those things. We all just have to play with it. Maybe add in a medium here.
Lewis Benson: and instead of having that for have it at we could try eight.
01:25:00
Lewis Benson: And this is basically how you do design. Is by trial and error and you just keep working at it until it looks the way you want basically. So let's drive that down. Yeah, that's still not quite what I wanted. Maybe if I Center it and make it a little wider on that screen size. It would look a little better. I'm not going to put too much more time into that just because it is a little bit of a complex thing and out of time. I would have yes more
Umar Z: What if we assign the value for medium instead of eighteen science six? So all of each one of them has two columns each.
Lewis Benson: Yeah, that's a good point. Yeah, very very bad.
Umar Z: Because it's not worrying evenly.
Lewis Benson: That would take up 50% of the container then So that should actually fix it. Yeah good catch.
Lewis Benson: I wasn't really thinking about the actual content size on that when I chose eight. I just wanted it to be a smaller number than 12 and a larger number than four. So I just picked one random again. A lot of this is trial and error, but I should have thought that's exactly what I want there. So, yeah, thank you for bringing that up that was perfect
Lewis Benson: and then we could also Center using our utility classes So this would be kind of going into our layout. We might be able to throw a margin Auto on this. Let's see if we can do that on the container.
Lewis Benson: I'm not sure what margin Auto actually is anymore that we have to look at that again. Where's my utilities?
Lewis Benson: There's our positioning Vertical line. Is there a horizontal line?
Lewis Benson: We'll take a look at vertical line.
Lewis Benson: This doesn't look like what I'm looking for. It was the CSS for this.
Lewis Benson: I don't think that's what I'm looking for.
Lewis Benson: This is one of them things where sometimes you to get a solution. You just have to kind of dig through this.
Lewis Benson: layout
Lewis Benson: I'm just gonna search for it.
Lewis Benson: There we go and it's probably M Dash Auto. Yeah, that'll add the margin Auto.
Lewis Benson: And as long as it is a sized element with M Auto it should Center it. I'll go ahead and try it.
Lewis Benson: There we go. That looks centered.
Lewis Benson: so as long as it's taking up the full width, it has to be a block element and then the content within it has to have sizing. As long as those are the cases you can put margin Auto and it will just automatically Center all of your components for you without you having to do display flex and then set your justify content align Center. That would be my next solution if I couldn't get it to work. Through margin Auto I would actually use flexbox in that case. I believe this should already be setting Flex containers At least it is there. Let me find this is already a flex container.
Lewis Benson: So let's take a look at that and see what we actually are looking at here.
Lewis Benson: So we have our Flex wrap turned on. And it looks like we are in a row. So I could justify content Center as well, and I believe it's called justify Center. Let's see.
Lewis Benson: It is justify content Center. Okay, so it's the whole thing.
Lewis Benson: And that would also get us centered without the margin Auto. Does anyone have any questions about that utility class?
01:30:00
Lewis Benson: All right, and then I think I'm just gonna add a footer on here. See if there's anything else. I wanted to really cover on bootstrap. Most of this again is just going through and just navigating your way through it. We could talk about the alerts believe there is one on here. That's similar the ge. the badge is used for if you have a new post or where'd they go?
Lewis Benson: And that's actually what they're using in the example here. You could do this for if you had a commerce website or something's on sale. You could just say sell 10% off anything like that. So definitely some good use cases for the badge. these are kind of like the alerts and JavaScript. The ones that I didn't show those there's a library that pops these up. All it is as you can see here is just a div with some coloring on it. And you can have this account created successfully or in this case. Maybe you have documentation and be like make sure you secure your API key or if this is a finance website do not share your password with anyone things like that.
Lewis Benson: Caution may cause injury you could put some sort of disclaimer inside this yellow one and that's kind of where you would use that the other alert I was talking about those there's one for JavaScript it pops up. Where was that at? I might have been the toll tip and I wasn't told tip.
Lewis Benson: actually forget what's one that was The Moodle that's what I'm thinking of.
Lewis Benson: the modals to pop up so I'm actually going to put a modal in I like noodles. So this one has a close and a save.
Lewis Benson: And that's what it looks like. So it's kind of like the alert we used in JavaScript except. It doesn't interrupt your page. It allows the code to keep flowing. This doesn't pause everything while this is up. So I feel like it has a lot more use cases for it. So let me bring this in.
Lewis Benson: This one has this launch demo button. I'm going to bring all of this in for the moment and then I'm actually gonna put this into my navbar to actually pop this up. And then I'm going to change the content out a little bit.
Lewis Benson: So let's bring that up here. Let me close this mobile view. And I'll use the sign up button as my trigger for the modal.
Lewis Benson: And it doesn't really matter where you put it in your document. I'm just gonna put it at the bottom.
Lewis Benson: And now when I scroll down I should have that button and that'll pop up like that. So let's actually wire this up now to where it's working the way I want it to. this button
Lewis Benson: so it's set to the example modal on this ID here. We're going to call this sign up.
Lewis Benson: And this is an example mobile label, so we'll do sign up label.
Lewis Benson: and sign up label
Lewis Benson: change out This is an H1. So you got to be careful with this because you don't want to have two H ones on your page. This one will be hidden until you click the button. But if you do have H1s already, you might want to change this out with something else if that's the case. We don't want to have a save button on ours. So we're gonna remove that save button. We'll keep the close button now that's important. And which one was the save? Here it is.
Lewis Benson: and then the for this content. I'm actually going to bring in A bootstrap form for that. So for now I'll put to do.
Lewis Benson: I'll put a bootstrap form there. And we'll see if this is still working. Okay, so we got our sign up. And instead of just a close. I'm actually gonna put a submit there. Actually that kind of makes more sense.
Lewis Benson: So we'll do a button. class
Lewis Benson: Etn Dash. success
01:35:00
Lewis Benson: and then we need to get some content.
Lewis Benson: It's like that, So, where is that button at here? It is. I want to put these on the other one.
Lewis Benson: In my navbar, so we scroll up to my nav bar. And now I'm looking for the sign up link. Here it is.
Lewis Benson: And there on the anchor tag They're not on the class. They're extra attributes. So if I click sign up? We now get the modal coming up. And then inside of there I'm actually going to put in a form.
Lewis Benson: So I seen it earlier. There's an entire section dedicated the Here. They I'll do form control.
Lewis Benson: if we have any good examples already done.
Lewis Benson: Email and password. This is a good start. I'll just grab these and drop them in. We can always add more as needed find our to do.
Lewis Benson: but a lot of content on this page So here is our to do. I'll just drop in that form.
Lewis Benson: And let's see what the default looks like. sign up and we have an email and a password. We actually want this to be Not just a Content piece like that. So let's go back to here.
Lewis Benson: And find for the fast scrolling. Here's an email one. It looks like it's pretty good. So we'll bring that one instead.
Lewis Benson: I grabbed that div, so I grabbed one here. Let's find the closing div.
Lewis Benson: And I'm just looking over what attributes are on that already.
Lewis Benson: And let's see what it looks like.
Lewis Benson: Alright, so we have some differences in styling here. Let's take a look have our label. I'm going to make sure that What I could do here is actually just convert the other one to look like the top one.
Lewis Benson: Or I could convert the bottom one to look like. I can do it either way.
Lewis Benson: Let's see The class of form label this one has a lot of other things so I'm just gonna grab these ones and put them up there.
Lewis Benson: that it looks horrible.
Lewis Benson: Maybe we'll remove it off of this one.
Lewis Benson: Okay, that's at least a little bit more uniform. That's probably good enough for that and then we would want to have a confirmation password.
Lewis Benson: So we can just copy and paste this again. I messed up the copy paste. just closing tag for that div. Me here. I messed it up because my prettier started yelling at me.
Lewis Benson: 
Lewis Benson: There we go.
Lewis Benson: And instead of just password on the second one will make that confirm password. We don't have any JavaScript logic to actually check that these are the same but that's how you would do that. You would use. Basically an event listener on this form. And you would check that your email was correctly. Added that it has an @ sign that it has a DOT something at the end of it and it has the proper structure and you could add a minimum length to that as well. If you're comfortable doing that there could be some short domains out there. be careful with that. We can also add a username tag in here if we wanted to. And then we have our confirm password. So for these two we would want to grab both of those with JavaScript and say
01:40:00
Lewis Benson: This element strictly equals this element and if that's true then continue with the cement. Basically if it's not true, then you'd want to throw in an alert and we could use a bootstrap alert for that if we wanted to. If I go back up to the alerts. You could make it small. You don't have to make it a huge alert. I believe it's under components actually.
Lewis Benson: So we could throw in this red one that says passwords must match doesn't even have to be an alert. You could just put in some plain text right here have a little asterisk and then throw in some text and say passwords do not match you could also do that. So that as you're typing in your password, it tells you they don't currently match. That's also possible to do using JavaScript using A change event or an input event basically as you type any sort of typing it all would be tracked and then it would start comparing these instantly and giving you live output. So that is something you can do as well. Does anyone have any questions about this?
Lewis Benson: Yeah, so the modal's pretty cool you get a lot more. control over this then you do alert like this
Lewis Benson: we're prompt.
Lewis Benson: So this one here, it gives us our URL. We have a little bit of text. We can't do any sort of styling to this at all. And it also pauses the entire page right now. So I can't click on anything at all. Nothing works. It just interrupts everything. It's not the best feeling it does have uses if you're working in an industry where you're not like selling web pages to Consumers. You have some sort of commercial application for this where you're working and say a warehouse and that warehouse has a private web page that's only available to the employees. You could start throwing in some prompts and some alerts for your functionality just for some quick down and dirty functionality so you don't have to build out entire forms.
Lewis Benson: There are places that have web applications they're not on the internet. They're on their local machines and accessible on their local networks across all of their computers, but not outside of their industry. So if you start building solutions for companies like that, feel free to use things like this because a lot of times those type of applications don't have to be pretty they might even tell you don't put any CSS in just make it functional and make it work is gonna be the ultimate goal in cases like that. So feel free to use these ugly alerts or prompt. And you could put in your question. email
Lewis Benson: something like that and then it would type in their email address, press OK and that would ask for their password. It would ask for confirmation and then would you do it the same result, but this gives you a lot more control you got styling. I can't click on things on the page, but also clicking on the page closes the modal that is behavior. You can disable if you wanted to. I would recommend it. It's pretty common for a modal to be closed by clicking off of the modal. But perhaps for a sign up page, maybe you don't want to close it. Unless they click the close button. That way if they have a whole lot of information to fill out and they accidentally click they just lost all of their information. Unless you're storing that information in local storage. And then when they click on this again, it'll auto fill these forms back out to where they left off and that is another possibility. We haven't talked about local storage other than me briefly mentioning it once.
Lewis Benson: But it's a way to store a JavaScript object. And if you remember, right I'll create one real quick.
Lewis Benson: I could do email. And I'll just make this an empty string. and then I could say password
Lewis Benson: and make this an empty string and then as this sign up button is populated every time you type a letter in here. It would update this object here and then it would store this in your local storage which lives under application local storage and then you'd click on your current URL and I Quantified does use a little bit of local storage. So we have some there but we can see that this has an object right here. if I scroll over we can see that object that has a prefix property. It has last modified. So yeah, this has Some properties already assigned to it within an object and that's basically how it works. You just store it in this little area and then as soon as you click on the modal again, you'll check. Is there anything in local storage? If yes fill out my forms for me. So just some kind of behavior you can think about especially when you start thinking about your
01:45:00
Lewis Benson: Capstone projects if that's some sort of functionality you would like to Go for it. Don't be intimidated by learning new things. If it's something we didn't cover in class. Don't let that be a blocker to Try to do it go for it. If you can't figure it out let one of the Tas know that myself know and we can help you implement some of that more complicated logic these Capstone projects are going to be looked at potentially by employers. You're probably going to want to put them on your portfolio. Whenever you have a good portfolio. You're going to want to have a list of projects on there to show off. And anytime you have a project you want to show to an employer you're going to want to be as basically as cool as you can you want to have as much functionality as you can you want to have it look as good as you can you want to make it very professional and you just want to show to people that I can build really nice stuff you're going to want to hire me because I can do this.
Lewis Benson: And maybe it's a company that's looking for new developers and they might say let's see what you're willing to do and what you're willing to learn they'll look at these projects and they'll see that functionality you're adding in they'll see your attention to detail little things like this button moving whenever the scroll bars are permanently now, but before that button was moving so not having behavior like that is a good thing. Having this move the way it is right now. I know if I were looking at this, I would actually test that and look for those little details because those are common bugs that I've ran into myself and also they just kind of bother me. Does anyone have any questions at all?
Lewis Benson: All right, so I'm gonna start getting into today's breakout rooms or a little workshop assignment again, we don't have anything to submit but we do need to be practicing this stuff. We need to be using this so maybe build out a page that looks similar to this have some cards have a modal put in some sort of button using their absolute positioning uses little actual inline styling as you can try to use everything in bootstrap for now.
Lewis Benson: throw in a lot of this stuff and make it look as good in this professional as you can maybe you can even get a head start on your Capstone project now just kind of getting that General layout Bill deciding on what you want to make and starting to dive into it and you can literally make anything you want as long as it fulfills everything we've learned in this course and it's something professional and something you might want to share with a potential employer one day. This could be a clone of a website you like. It could be a fan page for something you could make a web page for Spotify and it just showcases your favorite songs. You can throw some album art on there and it's not Spotify's website, but you could make your own version of what you would like it to look like. I mean you could make a website for your local pizza shop and maybe one day you could even sell it to them. You can say hey, look I made this website. Do you want it? And you can host it for them and get paid for it.
Lewis Benson: So think of things like that, I did one earlier that was a grass cutting web page. I believe that was in week two or those week three. I actually implemented a little bit of a side business where it was like a grass cutter. You could build something like that something for a small business. Another thing we can do is W3 schools. They have a bootstrap thing in here. So it's actually here at the top you'll see it if you go to their home page. And we want to go to bootstrap 5. the Battery and they have a little bit different setup. one they're using And over here, we actually have a list of all these different things. It wouldn't hurt to go through these two one of these days. If you have some extra time just kind of go through and read some of this stuff a lot of it's interesting and as things updates W3 schools will also update so come back and look at this stuff from time to time and see if there's anything new
Lewis Benson: 
Lewis Benson: Utilize YouTube there's a lot of good YouTubers out there content creators pushing out the latest changes in web development. Even things that are like this is an experimental feature check them out because if they're experimental now, they might not be forever. So we have our exercises here. Looks like you just put in the class names. I haven't actually done the trap exercises on here. But they could be pretty good use bootstrap class to Center the following text. So this is actually a really good practice here. This might be perfect. So you would have to go into here. And see how you would Center text. We want to look at. I believe I actually seen something about this in here already. text and text Center would be the class name to put in so we'll just say. Text Dash Center.
01:50:00
Lewis Benson: And submit and we get correct. So this is really good practice here if we're just going to be putting in last names. We can try to find a way to actually solve these little problems. So check this out all we have our Spinners in here.
Lewis Benson: So fill in the missing part to create a loader that grows instead of spin. So in order to solve this you would have to go into the bootstrap documentation and find the solution. So this is an excellent practice an excellent resource. I highly recommended practicing building something out is also really good practice because things will go wrong and a lot of times you learn more by breaking your code than you do just by writing your code. Especially whenever half of it's already written for you here. But again, this is still something like I don't know these off the top of my head bootstrap classes are something that I have to look up every time I have to use the documentation because I don't use them on a daily basis.
Lewis Benson: I actually forgot to show you I apologize for this. I've got a good back pedal just a second here. Just to remind you about the templates I mentioned I was going to show you this. I want to make sure I bring this up now. So I use boot Swatch. It's b o o t s w a t c h. I'm just going to do a Google search for boot Swatch so we can see what that looks like. And it's the top link here. And you just come in and you download the one you want basically. So look at these kind of these themes. It's showing you their different colors. There's our primary colors secondary the way they have the button shape. all of that I'll pick this slate one here looks pretty good to me. And what I like to do is when I'm getting a boot Swatch. You have the download button and you have this little arrow on the side. I like to click the arrow.
Lewis Benson: And pick which one I want the minified version is the most performant. You got to be careful that you don't click save on it or you're prettier will format it and it will no longer be minified means that there is no space between any of the text in the file. If you plan on editing anything though or customizing it then you're going to want to get the regular one. I'm just gonna grab the minified one because it's smaller. And I'm going to drag this into my project now.
Lewis Benson: So we'll go into index open up my folder here. And what I'm going to do is actually open up my downloads. from here and I should be able to just drag this right in.
Lewis Benson: There it is. And then I'm going to rename this so that it has get rid of that two, so it's bootstrap dot men dot CSS. And then notice over here. It looks like it formatted. That's unfortunate. So it's not really minified anymore. Some of it might be still minified.
Lewis Benson: yeah, this has beenified. We're only on 12 lines. So it's just the way it's formatted because my editor doesn't allow line wrap. So yeah, this is still good. So we have 12 lines of code and all of this is one big piece of text basically and then we just want to import that I want to go all the way back to the top of my file We got almost 400 lines of code in this file. I'm going to remove this link to bootstrap. And I'm going to link in. the bootstrap dot men dot CSS
Lewis Benson: live read alert is not possible without a head or body tag. I must have broke something here.
Lewis Benson: Let me copy this and then I'm going to undo and see what happened.
Lewis Benson: And then I'll paste it back in. Yeah. So here is the new theme.
Lewis Benson: You can see our success is a dark button. So some of this stuff looks a little weird like that light color on that dark background might have to go in and customize some of these. You can always just do an override on them. And there's our form. But it's not too bad. It's really nice way to just make it not look so generic and like that. It was made with bootstrap by using this theme. So I just wanted to bring it up one more time.
01:55:00
Lewis Benson: Yeah, and then the last thing I wanted to show for that little Intermission there on the explanation that I did want to show this one more time how this works. We closed that out w3schools. We have the quiz on here. The bootstrap five quiz, so let's check that out. We have 25 questions. The container class provides for with container spanning the entire width of the screen. We know that that's false. That would be the container fluid. And so that's how you would continue through this here. Does anyone have any questions? Anything at all?
Lewis Benson: All right, if there are no questions, I'll stop recording. I'll get the breakout rooms going again. You want to work on any assignments you're missing? If you have any questions about whether you're missing assignments or not, me know. I can go over that with you. I can open up another breakout room for one discussions if you want to discuss anything about your grades or anything like that. And we can make sure that everything is caught up and everybody is on the right track to moving on to level two. All right, so let me in the recording here.
Meeting ended after 01:56:38 👋