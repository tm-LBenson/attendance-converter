nia-amar-wfe (2023-12-08 19:30 GMT-5) - Transcript
Attendees
Brian Kimbrow, Daniel Perez, Elgin Sharper, Gregory Robertson Jr, Iris Coats, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Ryan Arnold, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
00:05:00
Lewis Benson: Right and we might put some transparency on this background so that it makes the button pop out a little bit more things like that. You could do a higher Fidelity more detailed version of this using better software than something like figma. But for what this is this works fine. This shows us our initial landing page. And then we would want to actually have another. page for The next page so in my URL, I would say. Slash quote and this would be kind of like the calculator we made yesterday. And then on here. we'd want to put our content and so I'm going to use forms and I'll just use these. sections for our forms because they kind of look like forums. And I think we had type.
Lewis Benson: There was three things we had and then we had the square foot.
Lewis Benson: So that would represent that form. And then last we'll have a checkbox.
Lewis Benson: And there's also things here you can use for symbols on figma if you're using figma that might be able to find a check mark. and the sticker there's one is so we could also put that there. And then I could slide this over this way.
Lewis Benson: And we'll have our checkbox. So it just to show that that's how that would look. And then at the bottom we would have a button so I'll just copy this one here to share that this is going to be a button. And this would say calculate.
Lewis Benson: So this is how you plan your site out. And then once you're done with this, you actually want to put this into your documentation having your wireframe and your documentation looks great On a portfolio whenever they're looking at it, they'll say This guy knows what he's doing. He build out a wireframe. There's all kinds of stuff on here. They tells your thought process you could put all of that into documentation, so I'll show you what I've actually done so far on this I actually restyled this already a little bit. So this was the landing page I actually made this just as own file called Landing because we already had an indexed on HTML. I just did this in the last hour. So that's why I don't have head and rearrange everything and then we have our button. We click on that.
Lewis Benson: And I forgot to change that link should be a slash. And then it takes us into our form. I just use bootstrap and just threw some bootstrap on here to make this. So it has a border. I made these actual bootstrap form elements and it pretty much did all the styling for me. I didn't have to really do a lot much. But it looks similar to the wireframe but notice it doesn't look exact and that's the thing with wireframes. Is there just an idea of how you want it to look. It doesn't have to turn out see how this one the buttons aren't exactly Oops. They're not lined up exactly the same way. That's actually where I got that picture from let's just right there.
Lewis Benson: But it doesn't have to be exact. It's just to give you a general idea of what you're doing. And also it gives you an idea of what you would need to plan in your JavaScript here because we know okay, we're going to be picking a roof type. We're going to be picking the square foot and is going to be a disposal cost so we know all of these things and I could also put the output in here if I move this button down a little bit lower perhaps I could have a spot just for the output right here. And I could show that. I'll put a section here. And in this section, we'll just call this area
00:10:00
Lewis Benson: and then I'll put some warm up some in here.
Lewis Benson: And some places you can go to copy and paste lore mips and you can do it out of your vs code as well if you want so you don't have to have repetitive text like that. But There's our output area with our lower mipsum and this just gives us that General feel of what it's supposed to look like. So once you have your wireframe built, the next thing you want to do is put this into your readme file, so I'm just going to using my clipping tool. If you don't have a clipping tool you can download one or you could use something like paint and have it exactly the size you want. Once you do have this in your clipboard if you put it in paint you can use control C to do this. It's in my clipboard. So I'm going to go to landing page. So I'm gonna go to VF code into my readme file. I have that still on here from
Lewis Benson: I think that was Monday and you can just paste that right in. And it brought the image in if I go to my preview. And my screenshot being brought in. So I can do that again for the other side. I'm going to use for I press shift Windows key s and it brings up this clipping tool. It might not work the same for everybody. But for my Windows machine, it's shift Windows key s and it opens that up. I have had Windows computers where it was different. there was one that pressing the screenshot key to the exact same thing. I also had one where I had to press shift in the print screen button and also one where I had to press function and another key as well. It was on a laptop, so I'm currently on a desktop so that could be a difference in that.
Lewis Benson: But for me, that works and I know you can download other external tools third party tools, that'll do the same thing. So if you just would search for snipping poll. You'd probably find something for your operating system. In fact, I'll just type that in real quick just to see what comes up. There might be something in here. I've seen before Microsoft has one, but if you're not on a Microsoft. Machine, then you might need to find a different one. Here's a free Snipping Tool. I've never heard of it. I'll just go into it and take a look.
Lewis Benson: It looks like Windows XP. And they're showing a little demo there. So yeah, it looks like it works the same way. They hit the print screen key. So yeah, it does work the same way they could put it in their clipboard. It looks like it's a little more powerful than mine. But there are pulls out there if you want one if you don't currently have one. I think that's in my clipboard still so I should be able to just come in here make a new line and paste that in. I notice this says alt text you actually want to change that to be more descriptive. So this would be linked page screenshot
Lewis Benson: And the second one would be. calculator screenshot
Lewis Benson: and something else you might want to put in here is the name of the web application. So that would be for this one. Roofing Applications something like that, whatever you want to call it. And then you would want to put some information in here about it. You One good thing we can do here and I would recommend doing this as well is each day that you're working on your Capstone project in your readme file. Make a day one header. That's an H2 header here and you can actually put in some information about what you did that day. Just as a way for us to track how you're doing on your progress. So we'll do day one. We'll have a day two.
Lewis Benson: I'll just do up the day three for now. And then in day one we say. added landing page
Lewis Benson: and brought in bootstrap
Lewis Benson: no calculator and stuff like this. These are basically features that you added. It kind of gives you some practice too on if you were creating Or a freelance web development job. You actually will keep track of each feature you do each day and how long it took you to do it what the feature was you'll write all of that down inside something similar to a readme file and then you could submit that to the client for payment.
00:15:00
Lewis Benson: You probably want to have a little bit more than just a sentence or two though. You would make sure that this is descriptive so that whoever is looking at this knows exactly what you did each day. It's not a requirement, but I do recommend doing it because it does look good on your project check one of those things that people like to see that you're keeping track and It's almost like having a tech Journal. It's just one of those things that people like to see. So it's an optional piece, but I would recommend it. I'm just putting something like that in there. And we can see what that looks like over there. Let me close out this preview.
Lewis Benson: So that's pretty much all I want to cover on the wireframe. There are some other applications out there that are really good for wireframing if you don't want to use figma. There's one called. assalamic
Lewis Benson: I think it ends in a q. Yeah, that's it. I don't think it's free, but I believe they do have a free trial.
Lewis Benson: Yeah start balsamic Cloud trial. I do but I'm pretty sure they have a free verse like a free trial for 30 days or something like that, but it has the browser and all that build in this part come you can just insert that you can put in all of your Items, so when you're planning this out, it looked really good. I wouldn't ask anyone to pay for this because I think it's 80 dollars or something like that for the software. So it's not really worth that. since you can do this without it, and there's other applications that are free, but it's cool. I'm not high fidelity, but it can make almost a prototype. You can actually click on links and use all that. Yeah, Brian. You have a question.
Brian Kimbrow: Will it be okay if they use stuff like canvas as well? No canvas is another good one because wireframe.
Lewis Benson: canva Yeah, any total that I was showing figma. There's another one called Miro and I know people use I mean you could if you're familiar with Miro feel free to use this. I'm not sure.
Brian Kimbrow: Your mirrors pretty good as well.
Brian Kimbrow: I was just asking cuz I know a lot of us use camera.
Lewis Benson: Yeah, I don't.
Lewis Benson: I don't think I have an account. So it might make me do some stuff here. Yeah mirror is pretty decent.
Lewis Benson: That's not
Lewis Benson: I need a team name just my name here.
Lewis Benson: I'm just picking random stuff here.
Lewis Benson: Wow, I really want to. Hurry up. So, this is Miro. It looks very similar to. figma
Lewis Benson: controls are a little bit different. There we go.
Lewis Benson: So we have templates see if they have wire frames in here.
Lewis Benson: this looks pretty neat you can do it for. One of those let's hit use on that.
Lewis Benson: So here we go. it looks like a Wireframe I'm sure they have other templates in here though. So you could look into something like this. If you want to build a wire frame like this that stuff looks really good on your project. So highly highly recommended. Yeah, Brian.
Brian Kimbrow: He was famous that we were using but we were doing it through Canada. we're gonna think Yeah,…
Lewis Benson: We're the canva extension.
Brian Kimbrow: but it was big.
Brian Kimbrow: Just wanted to clarify.
Lewis Benson: So they do have plugins here, too. I haven't looked for a wireframe template on here before. They do have this one looks pretty nice. Let's take a look at it.
Lewis Benson: there's a lot of stuff on this one.
Lewis Benson: Can definitely use it if you want to but you'd have to kind of pick and choose the items you want out of it.
Lewis Benson: I'm not exactly sure how to access each piece of this. It looks like you just copy and paste out of this toolkit over here.
00:20:00
Lewis Benson: What I would probably do is have this whole thing sitting on to the side and I would start by copy pasting that part. And then I would pick and choose what I wanted out of it. And then I'd have all of this over here, so I had access to it still so I didn't want this piece. you just take what you want out of it, and then I won't put an image there instead. I can copy that in.
Lewis Benson: And then once you have it all built the way you want it. You can simply screenshot this piece and put it into your readme file. So there's an option there as well. It looks like they're also using this sections. So it's pretty cool stuff. Feel free to experiment and explore on here. There's probably some other good stuff as well. type in wireframe completely
Lewis Benson: Yeah, so that's the same one. Yeah, this is a pretty good stuff on here I think you can do wireframe on canva as well without being through figma.
Lewis Benson: I've only used canva a little bit. So I'm not sure if all it's capabilities. I've also seen people use Adobe Photoshop. XD and some other ones as well. You got to be pretty proficient with those applications in order to be able to build wireframes with them. Otherwise, it'll take so long to actually build anything meaningful. That it's not worth it. Those are fairly complex apps if you're not familiar with those at all.
Lewis Benson: There's also an open source version of Photoshop I don't work ink something. I can't think of the name of it off the top of my head.
Lewis Benson: But yeah, there's our little wire frame.
Brian Kimbrow: Yeah, the Photoshop thing. I'm not gonna lie. That was a little complicated kind of learning. it was different for sure.
Lewis Benson: You tried to build wireframes off Photoshop.
Brian Kimbrow: Yeah, I did. It was very different.
Lewis Benson: Yeah, the tools are not normal drawing tools. Everything's like through layers.
Brian Kimbrow: Yeah, not at all.
Lewis Benson: And I forget even the terminology. I haven't touched Photoshop in three years. Yeah, it's not easy to build my friends…
Brian Kimbrow: It was crazy. And I know Photoshop isn't as easy as everybody think it might be.
Lewis Benson: if you're not married.
Brian Kimbrow: I mean when you think about actual Photoshop It's not what you think it is when you're going into trying to learn how to actually Photoshop something.
Lewis Benson: Yeah, for Yeah, it's definitely a complicated application. Another thing to bring up is Unsplash this is where I got that roof image feel free to use unsplash. But anytime you do use unsplash you're going to want to give attribution. to the author And you could put this in your readme file. You don't want to. Just take people's images and use them on your applications without saying where you got it from and it's perfectly fine. If you use somebody's photo. just give them the attribution like you're not gonna get in trouble for using somebody's photo so you can put a column in your readme file.
Lewis Benson: And I believe I put the image directly in here. So here is the URL to it.
Lewis Benson: So there's the link to the photo and what I can do then is If I want to make this an actual image, I can wrap this in square brackets and put an exclamation point at the beginning. But I did that backwards. Parentheses and then over here. I put exclamation point square brackets.
Lewis Benson: And then I could say roof pick from unsplash. by this guy
Lewis Benson: and it shouldn't have there we go.
Lewis Benson: So something like that would be fine. You don't necessarily have to make this an image. If you want to you can make it a link. I'll take out that exclamation point that's a link now. so there's the difference so Without the explanation point we have a link to that and that's one way to do it. Another way is you could put the exclamation point that will actually show the image. It doesn't have the text in there. But looking in the readme file, you can see where the attributions coming from and that's perfectly acceptable as well. So whatever you think looks better on your GitHub go that route. I think I like the link better. That way we know exactly what we're talking about there. Does anyone have any questions about this readme file?
00:25:00
Lewis Benson: And one thing to note is there's no set role on everything that needs to be in here. It really comes down to. The developer one thing I like to do. Is I'll go to GitHub.
Lewis Benson: And I can visit a repository. Here's one trending right here. And I'll go down to their readme file and I'll just kind of see what they have. So I had the name of their application. They're here. They have a description of what it is examples of how to use it. And then almost every one I've ever seen has a quick start guide. It just tells you how to use this if you wanted to make your own project. So typically in the quick start guide you would just say something like download the repository using get Loan, if you have any third party dependencies, you would explain that I'm here. They have a contributing heading this is something pretty common you'll see. So this repository here with 12 contributors currently. I'm not sure what it's used for if I actually read this.
Lewis Benson: It's an array framework for machine learning on Apple silicon. So if you wanted to make a change to this repository change some of their code or anything like that, you'd want to check out these contribution guidelines. And in the contribution guidelines, it tells you exactly how to do this. So here they're saying you're going to fork and submit pull requests to the repo. If you added code that should be tested you want to add the tests, which is basically just more code. And if the change is likely to impact efficiency run some benchmarks after the change so they want to see the performance of your changes in that case. So yeah, this is all of the requirements for this application in order to make changes to it. That's something if you wanted other people to work on your project later on.
Lewis Benson: feel free to do that. it's actually something I see growing in popularity right now is students or those in between jobs will create open source projects. And they're kind of like a Capstone project. what I was showing here maybe a project like this. And you put it on a web page First timers only I think is what it was search that
Lewis Benson: so on first timers only there are links. Let's see up for grabs good first issues these type of websites here. So you can add it to this right here and then people will come on here and they'll want to complete these so that they get contributions on their GitHub. It boosts their GitHub and it makes it look better. It also goes along. There's another platform. If anyone's interested in this platform, it can really boost your resume building. It's called Publican something. I just recently learned about. this application you join with GitHub and this is very very new what it does. They actually have a screenshot of it here.
Lewis Benson: Is it uses your GitHub projects and analyzes it through Ai and figures out exactly what kind of code you do and then gives you information on what you can do to make your GitHub profile better kind of like Credit Karma anyway. It'll just give you suggestions on open source projects. You could contribute based on your skill level. And allow you to really boost your portfolio.
Lewis Benson: So if you haven't heard of this before you might not have is again, it's really new. I'd highly recommend checking it out and making an account on here and start building what they call street cred. I haven't made my account yet. I was just watching a demonstration on it today. to see how this works, but It's free. You don't have to pay for anything on here. This is 100% free, but you can see in this little screenshot here. They have these points here. It's based on. How much do you contribute to projects on Open Source on the left here? There's a Code challenge type thing or is that challenges?
Lewis Benson: These are not like JavaScript code challenges. These are build a front end user interface for a signup page or something like that, which is well within your skill level. It'd be just like building a couple forms putting in some icons and some logos and then you submit it and it's graded by AI basically and it has mock interview questions. It's a really good resource. So again, this is tumblion to Brian. I'm not sure how to pronounce that. I'll throw it in the cohort channel for anyone who's interested in this and great resource highly recommended. If you want to throw your name out there. Another thing it does too is it also gives you suggestions on job openings based on your skills and it will help match you with job positions based on what it's seen you actually doing very useful.
00:30:00
Lewis Benson: and again you can use this first time issues website or sorry the First timers only.com to get to all these different sites here. One of them is good first issues. And you can search for these open source cont the more you do open source contributions the more that'll boost your tublin account and it'll give you more credit and give you more opportunities. It also keeps you coding and keeps you practicing. So another great resource there. I might get more into that in level two. I'm going to be talking to the other instructors and see if we can just add that right into our curriculum because it is such a good resource. so let's move on with some ideas here for the final project so we went over the again whiteboarding is
Lewis Benson: it's not a full-on requirement that I would highly recommend whiteboarding any projects you build. even if you build the Whiteboard afterwards just so you have this in your documentation very useful to have and it's a gold star for employers. They love seeing anything in your documentation. I just love seeing documentation in general. It shows a really good attention the detail as well. This balsamic toll is available. If you want to use their free trial to build out your whiteboards. But again, this is a piece of software that you would have to learn and that could take a little bit of time to get through. So if you want to work on that over this weekend, feel free to do that. If you just want to mess around on figma Miro in the last one I wanted to show is envision.
Lewis Benson: I think it's in vision.
Lewis Benson: That was with an i.
Lewis Benson: Envision is another free whiteboarding. I believe I have an account.
Lewis Benson: Probably not on this perhauser, though.
Lewis Benson: That's just suggest one there.
Lewis Benson: And everyone knows my password to review that. Yeah, so It's because it messed up my name.
Lewis Benson: It'll be good enough. I'm not worried about the password because I'm never going to use this. I'm not gonna verify anymore right now, but this is basically another version of Miro and figma, but it's just laid out differently. Feel free to hack my account. I'm never gonna use it and it's just another drawing application like these.
Lewis Benson: Does anyone have any question about these drawing applications? The other one been able to get on these as anyone had any trouble getting into some sort of whiteboarding application.
Lewis Benson: And lots of thumbs up, that's good. All right, so just to show some projects here this project.
Lewis Benson: This You want to have some sort of landing page and we want to make this a multi-page application landing pages. Look really good. You could also throw in navbar up here if you wanted to build this however you want.
Lewis Benson: And then you want to have some sort of JavaScript implementation as well and in here we have this calculator where you're figuring out. how much something's going to cost I removed my
Lewis Benson: ID off of the calculate button when I was styling, so it's going to just refresh now. But you want to be able to actually Implement some of this functionality. It doesn't have to be a calculator. I'm going to go to get Hub and show off some other projects that I've prepped for this week.
00:35:00
Lewis Benson: We got my repositories.
Lewis Benson: So the first one I showed some of these before the first one is just a basic portfolio. This one uses a dark mode for the JavaScript implementation. I'll do a quick demo today to show you how you would actually do this. This one is a little bit more advanced than what I would expect but if you want to do this. You'll have assistance during your breakout room time. This one doesn't have any functionality on these buttons. And then we have it about page where it has a profile picture. It has some text here. And to get in touch doesn't do anything.
Lewis Benson: It just has the dark mode. So that's the only functionality on this one. I would probably expect a little bit more functionality. if you were to knock this out by Tuesday or Wednesday. You want to keep on working at this all week long just keep on adding and adding the more content you put the better. It is for your portfolio. Remember this project is to pass the class, but it's also to help you land a job. So that should be your main focus sufficient enough that you can land a job also while you're working you'll be all in separate breakout rooms so that you can screen share.
Lewis Benson: So we're gonna be doing code review each day with you and seeing what you've done. You're gonna show me your code. You're gonna show me what your thought processes on how it's built any documentation you've added and any blockers you're having we're gonna be going through that together each day. So make sure you are working on your Capstone project during Capstone week and not playing catch up on other assignments because we do need to be able to review your code during that time.
Lewis Benson: Okay, so that's one of the projects. I clicked on a lot of links there. The next one was this kayak store again. I got to fix this image. I'll do that today during the breakout room. I'll actually get this fixed so that this looks decent again. And this one uses a calculator? To figure out how much it would cost to rent a kayak or a canoe. Based on how long you're going to be doing it and how many people are going to be renting? And notice this is upda live as I'm checking these because this is on change attribute with an HTML. And you're able to invoke JavaScript functions through that on change event. It's very very similar to just calling a callback function. But instead you actually invoke the function.
Lewis Benson: Inside of a string in your HTML so it's a little weird to look at if you're interested in making a live updating form. Just let me know and I can help you set that up. If you're not able to find a solution on your own. Here we have more information. These would be the different tiers that you would pick from a lot of times with web applications. If you ever get into freelance work businesses will want you to build them some sort of web application and a lot of times you'll want to pitch them to the idea of having a three. System because it will increase their sales having a base model intermediate version and advanced. This one's for training itself. But just for sales in general having three options to pick from oftentimes, we'll do sales so you could always mention that if you do any freelance work,
Lewis Benson: And then we have our little modal there that just shows a form and allows you to update or contact through The Forum. This isn't actually wired up to send a contact. That's a little bit more complex than what I want to get into. But you could use some sort of mail to as well. It's an attribute in HTML that will actually open up your local Outlook Express or Gmail or whatever. You have it configured to. So that is another option.
Lewis Benson: So let's go to the next one. This was that guess a number game. This is our splash page. We can get feedback on the splash page. I don't think it actually functions because it's not wired up to a server. But if you wanted to you could put this feedback thing in and make it so the messages pop up above. The block here they wouldn't persist unless you wanted to learn a little bit about local storage and setting up data persistence. If that's the case you could make it persist and have a little message feed here on your site. We go into the actual game and you just put in a number between one and a hundred and try to guess the number and then it tells you for too high or too low. And you continue to guess. Until you get it, correct.
00:40:00
Lewis Benson: Or until you run out of guesses.
Lewis Benson: I think I went the wrong direction.
Lewis Benson: So I'm probably going to lose.
Lewis Benson: And we're going to run out of guesses. The number was 39. So yeah, I went completely in the wrong direction there. For some reason. It said too low and I went lower. Anyways, that's a very simple implementation of all of the tools. Probably add some images to something like this though to get a little bit more content and just make it more impressive looking. But this does meet all It implemented bootstrap. It's using boot Swatch as a theme. And it has HTML and CSS. So this is hitting all of the requirements. Yes, Omar.
Umar Z: Is such a good question this game is using if else logic, right? Okay,…
Lewis Benson: Yes, it is.
Umar Z: so we can also give it an option instead of just saying too high or too low there. You can also say when we're getting closer like you're almost there or keep trying or something like that. We can add those options too, right?
Lewis Benson: Yeah, you would have a range. Yeah, yeah,…
Umar Z: When we're getting closer so we can give users some input the …
Lewis Benson: you could do that.
Umar Z: you're almost there. You're getting closer, Okay. Thank you.
Lewis Benson: Yeah, absolutely. Probably the easiest way to do that would be to implement a little bit of math. You would use something like the number to guess minus their current number and then if that number is less than 10, for example, you could say getting warmer. something like that the one thing about that.
Umar Z: mmm
Lewis Benson: Probably not getting warmer because then if you get further away, they wouldn't know that you were warm at one point. So you'd have to implement a lot of logic to make that part work, but you could say something pretty not at close at all,…
Umar Z: Yep.
Lewis Benson: something like that based on the difference between theirs so that's definitely Great question and that also just use a few more if else statements to do that. You might have to Nest them inside of your lower and higher. You could also do that through a function. I think a function would be the best way to go about that. You would have two separate functions one would be figuring out if you're higher or lower and the other function would be deciding. Are you close or are you far away and then inside of your FL statements you would just invoke those functions? So, I don't know if that makes sense. Just saying it without you actually seeing the code, but you could do it with functions my point.
Umar Z: thank you.
Lewis Benson: Yeah, no problem. Good question. So yeah, that's the little guess the number game you could do other games, too. one thing about games A lot of times they're not considered all of that impressive. Unless they're really well done. So if you do decide to go this route, some sort of guess a number game. Load it with content make it as impressive as you can. Maybe throw in some sort of messaging system on here. You can do a mock version of that maybe throw in a dark mode do as much functionality as you can implement. You could also make it increase difficulty levels.
Lewis Benson: So every time you get one, correct, you could start off you could have a counter say starting at one and every time you get it, correct, you can increase that counter and increasing the counter you can have that ad to the maximum number you're guessing. So every time you get it, correct, the range gets further apart and it would get harder and harder to guess each time. And then you could add in a score system. So that would be a decent project for that. I actually have that exact guess a number game on my portfolio somewhere. Maybe I'll pop that up in a little bit and just kind of show what that would look like. I think it's still meets. I didn't use bootstrap on it. But other than that, it has all the requirements for this. So if you're interested I can show the car rental service This is a rental car application kind of like a fan site for a rental car service.
00:45:00
Lewis Benson: It has these Auto scrolling clicks.
Lewis Benson: And we can scroll down to contact. it has a
Lewis Benson: what do you call a carousel? For the testimonials here, so that's a bootstrap feature. We don't have any q&a's here. Let's go to getting started. And here we have a calculator to figure out what it's going to cost to rent a car for how many days. And then it gives a full breakdown based on what you chose. So because we said five days it calculates out the insurance per day. We have a service fee going on here. That's something you commonly see eight percent tax. So that's how much that would cost four or five day rental. And then the base costs. For five days is 250 and then we get a grand total at the end. So I showed that briefly whenever I demoed out this roofing calculator on how you would build out something like this.
Lewis Benson: It would take a little bit more work than the roofing calculator, but it's very doable something to also whenever I switch between Vehicles the vehicle types are switching as well. so economy sedan SUV And luxury So based on whichever. One of The output down here is changing. So something kind of neat that you could add. This might be a good one for a portfolio. You could have a list of tools or Technologies. Maybe have one that says HTML and you click on it and explains What your experience learning HTML was Just a little bit or maybe some backstory or just explain what it is. A lot of times Technical Recruiters might not understand all of the tools.
Lewis Benson: And you might have a toll listed that is equivalent to another toll for example sass. Is a pre-processor for CSS. And anyone who uses SAS also knows CSS are basically the same thing. So if you put SAS on here you could explain that in the information. JavaScript you could explain exactly what kind of language JavaScript is you could say things like it has the ability to do functional programming. You could go straight to the MDM documentation and copy and paste their text out of there. But if you do that, make sure you put attribution within your markdown file so that you're not hit for plagiarism.
Lewis Benson: So that's about it for this car rental idea.
Lewis Benson: Get back to the homepage. I clicked on all those links. And the last one I built another portfolio just to have another idea of something we could make. We went with Peter Capaldi for the name. If you're familiar with Doctor you might know who that is. So this one is just built on one page. Everything is in these different sections the scaling in these photos isn't the greatest. I didn't use object fit. I just kind of threw this together quickly. We have a reach out thing at the bottom where you could send a message to you social media links little details like this is nice. We also have some links at the top here. These are all broken at the moment. I didn't finish this. There's a Blog that takes us to a 404. We don't want things like that. If you put a Blog link actually put a Blog.
Lewis Benson: I didn't link this to my resume just because I don't want to share my resume on this public site right now. But you could actually link this to a PDF file and display your actual resume. Contact is I think that Scrolls to the bottom and I kind of made that look like a call to action in the navbar. That's one of those things. I like to do. I think it's a nice touch work Scrolls down to work. And about me Scrolls down about me and then we have this dark mode. It kind of works. All it does is just switch the bootstrap file and I'll show you how to implement that one because that's the simplest way to actually build a dark mode. Using JavaScript. It's just a switch out the actual CSS file.
Lewis Benson: So whatever classes you currently have styled, we'll all switch one thing to note. I hit refresh it goes back to dark mode. So there's no data persistence on this also that photo changes every time I refresh that's interesting. I use that unsplash auto thing for that. And I got my little logo there. I like that logo.
00:50:00
Lewis Benson: So that's all for these projects. Does anyone have any questions about these?
Lewis Benson: Hopefully everyone's got a decent idea of what they actually want to build. Again, you don't have to make anything. You've seen here. You can come up with your own idea completely.
Lewis Benson: That is an encouraged thing. I did say a demonstrate that guess a number game. I look quickly and see if it's at the top of my GitHub or if it's easily searched. I don't want to dig around too much right now, but I do have a few minutes before.
Lewis Benson: Get some number if it's deployed.
Lewis Benson: I think it's deployed. Because I think this was on one of my portfolios.
Lewis Benson: Yeah, so this one was Kind of the old school Mario theme version of it and this one here. It starts off with between 1 and 20. And the difficulty increases as you go.
Lewis Benson: So we got a high score of 90 we had four guesses remaining and your score depends on how many guesses you had remaining. So the quicker you guess the better, but if you watch here when I keep playing it increases between 1 and 21. So the further you go the more difficult it gets I'm using kind of a binary search algorithm here. So I'm guaranteed to get it this time.
Lewis Benson: And then we can keep going now. It's between 1 and 22 and that'll just go on until you run out of gases. This one does use data persistence to store the high score. So if I refresh the page the high score stays so I can continue to try to beat my high scores. But the only problem with this is it doesn't use bootstrap. This is all CSS to do this, so you want to implement some bootstrap? If you wanted to go with a theme like this, you could always make your button have a bootstrap button and maybe a bootstrap navbar. And then you would meet those requirements and then you could build your own custom CSS if you prefer to use custom CSS.
Lewis Benson: So that's all I have for these so we can take a 10 minute break. Does anyone have any questions before the break any things that need addressed or anything like that? Just want to make sure that we're all understanding how capstone's going to work this week. And then I'm going to do a little bit of a demo to show. Some of that functionality I'll show you the local storage. If we have time, I definitely want to show you how to do that dark mode how to switch between CSS files just because it's an interesting thing and I know that's a common desire to have a dark mode on a developer page. Is there any questions? comments concerns
Lewis Benson: Okay, so I'm going to start the 10 minute timer then we get back. I'll do that little bit of a demo and then we can finish out a week with catching up on assignments and working through just some practice getting your whiteboard stuff set up and I'm gonna go into that application. And kind of explore that a little bit with anyone is interested in what was that bly and the one I put in the October to cohort so if anyone's interested in that we can explore that and see how to get it all set up and running again. It's very very new but it's very powerful.
Lewis Benson: And everyone here at coded codex is pretty excited about it because it'll make the job hunt a lot easier for the students just because it'll match you based on what you're doing which kind of gets in line with what you're interested. because you typically will build what you're interested in and if you start doing open source, you'll be working on things you're interested in mainly very powerful tool very cool So there's no questions. I will get the 10 minute timer going. And I will see you in 10 minutes.
01:00:00
Lewis Benson: All right, welcome back. So we'll get into some. Solutions here for JavaScript to switch between CSS just an easy way to implement a dark mode without I'm having to create a whole bunch of classes for it. I don't know if it would be considered the best practice later on just because It does use a lot of space because you have multiple CSS files with a lot of code in them. At least with bootstrap. It would be a very bulky solution. But if it's a lightweight application that's probably fine. But if it's a massive application and you need to really watch your storage space you may have to do it in another way where you create multiple classes and you toggle between those classes. turn them on and off.
01:05:00
Lewis Benson: I'll kind of show both solutions for that.
Lewis Benson: Let me get my review week folder opened up.
Lewis Benson: That is the same. repel as I've been working in. I'll just create a new file in here. and work in that so we'll call this file. dark mode Dot HTML
Lewis Benson: And close that readme sample. So the HTML file I'm going to bring in my boilerplate
Lewis Benson: We'll put in. title
Lewis Benson: we're given an H1 make sure everything's working. And I'll bring in a JavaScript.
Lewis Benson: Called Dark mode.js use script.
Lewis Benson: And get our Proof of Life.
Lewis Benson: And we're already live. So I just need to go to dark mode.html.
Lewis Benson: Get rid of that query and go to dark. mode.html
Lewis Benson: Okay, looks like it's working I don't have my console.log because I didn't wire that up. So that's one of the reasons I always do that check.
Lewis Benson: Because sometimes I forget. And then I'm working in JavaScript forever and I'm like why is nothing working? And there it is.
Lewis Benson: And what is this?
Lewis Benson: So I'm going to bring in this bootstrap men dot CSS file just because it's already here.
Lewis Benson: And I believe this file is already a dark theme.
Lewis Benson: It's already a dark themed. CSS so I should see that there we go. So we have our dark mode. What I'm going to do is I'm going to go to boot Swatch. And I'm going to find a light mode. Just pick this first one here. And I'm going to download instead of the men file. I'm just going to download the full one that way it has a different name.
Lewis Benson: And I will drag that right into the CSS or into the
Lewis Benson: there we go. So I just dragged and drop that out of my download folder right into my vs code. And I'm going to call this dark. bootstrap Dot CSS So all we want to be able to do is just switch between these two files depending on if we're in dark mode or enlightened. So to do that, I'm going to go to my dark mode.jss. And I guess we need to actually have button some sort of button that would toggle it. I'll grab this for my uantified just to show you this side again, too. I Quantified art design.
Lewis Benson: I mean about that. and browse icons
Lewis Benson: And I'll search for a moon.
Lewis Benson: Let's give her one of the sun too.
Lewis Benson: Yeah, something like this.
Lewis Benson: I put this in our file. I'll bring in the script first.
Lewis Benson: Or that at the bottom underneath of my dark mode script. And then I can bring in the actual logo. And I'll put the logo on the right. And on the left, I'll put an H1. I'll get rid of this H1.
01:10:00
Lewis Benson: And this site is going to be for it's a shot.
Lewis Benson: And then because we're using bootstrap I can use. class D Flex and then I can say
Lewis Benson: justify content between
Lewis Benson: and that should put it as a part for me. Yep, we can see the little icon way over there. Next thing we want to do also is add some margin to this.
Lewis Benson: To get it off the edge and I want to make that a little bit bigger with I quantify you can add a width and a height attribute. And we'll say 50. and height
Lewis Benson: 50 that looks pretty good. I'm going to add.
Lewis Benson: a div around this I can select it there. They have their custom element there. I don't want to try to select their custom element through a class, but I will select this div so that I can put a click listener on it.
Lewis Benson: dark mode button
Lewis Benson: so what I'm going to do here is Select this button in JavaScript using this dark mode button. I'll make This dark mode button Another thing I'm going to do is I want to make my cursor have a pointer. So I'll add a CSS file for that.
Lewis Benson: and we'll just say
Lewis Benson: start mode button
Lewis Benson: cursor pointer
Lewis Benson: and I want to link that in. One thing to note whenever you're creating a custom CSS file like this. And you're doing this dark matter thing. You have to be careful about colors. In your custom one because it's not going to change to light mode unless you set that up separately.
Lewis Benson: So now I get my little pointer. So it looks like a button. It doesn't do anything yet. We still need to wire this into vaScrip So in my JavaScript now. What we all need to do is just change. this link to use the other one here. So what I will do then is put an idea on my link. So I can select it. And I'll just call it S. You can call these whatever you want. I'm just doing something that kind of makes sense to me. And now I want to just select all of my elements needed in JavaScript. So we'll do plants CSS equals document dot it element by ID and I'm just going to pass in the string CSS. Yesterday I used query selector and we had to put in a hashtag.
Lewis Benson: Where you get element by We do not have to put in a hashtag and it gives us the same result it grabs the item by ID. Just wanted to show both versions again. and then we have
Lewis Benson: we'll call it the mode and I can't put hyphens in my variable name use camel casing for that. And then I want to make sure that I actually spell that correctly. So I'm just going to copy and paste it out of here.
Lewis Benson: And I can put hyphens in my ID name because it's a string. document.get element by ID pass them to get dark mode button. So what I want to do now is change the CSS when the dark mode button is clicked. So I need to determine when the dark mode button is clicked. So to do that I will add an event listener to my dark mode button. So I'll say dark mode button dot adding it listener. And this requires a callback function? I do not need any parameters within my callback function, but if I wanted to I could put an event in here. I don't need it. I'll just throw it in there just for good measure just so you remember that it can go there. I'm not going to use it too. So it's going to say that this This would be for your event prevent default and your event.target.name dot value when you're in forms.
Lewis Benson: the event happens on every event listener. I missed one of my parameters here. Does anyone see what my parameter that I'm missing on my ad event listener?
01:15:00
Lewis Benson: The Advent listener has two parameters. Let me make this back to one line. It might make it a little more obvious.
Lewis Benson: So we only have one parameter in here and it's actually the second parameter. if I remove the Does anyone see it?
Lewis Benson: So the first parameter is a string. That goes right here. too slow Ryan. If you see it your job though.
Lewis Benson: And I'll put that back in there. So yeah, we want to track a click event. So We're adding this click event. And then that's our first para The second parameter of the method is a callback function. And inside the Declaration of this callback function. We just want to change the CSS. So we'll say CSS Dot href because that's the name of the parameter. We want to update. Let me see here. The href is currently bootstrap.min.css. And we want to change that to the dark mode. So we'll say equals I'm going to put a slash here actually.
Lewis Benson: And then I'll put in the file name.
Lewis Benson: I don't need the slash. I was just trying to think because I'm on localhost and it'll typically set your href up with your url. I don't have to worry about that at the moment, but that will be a problem in a little bit and I'll have to address that.
Lewis Benson: So if I click on this now, it's switching from dark. But when I click on it again, it can't switch back because we just sold it switch to dark every time you click on it, but it's partly working. I do a refresh which is back. So this is one way to implement a light mode, but we need a little bit more logic in here to make this work properly. So we need to first check. Which one Are we on light mode? So we would say if CSS brought H Ralph. equals This is the part where? There could be a bug and I'll show you why. You would think that you would just put dark mode or dark top bootstrap. Not If it's dark don't CSS, then switch it to the other one. I'll just copy and paste this one and then remove the beginning. And then we could say else.
Lewis Benson: Do it the other way around.
Lewis Benson: So whenever I do this Watch What Happens now? it's completely broken.
Lewis Benson: And I'll show you why it's broken. if I do log CSS href
Lewis Benson: look at our href here. It's actually slash localhost colon 5500 / bootstrap.min.css. So it's my current URL. But it's not including the dark mode.html here. So as soon as it tried to apply it it actually broke it.
Lewis Benson: And I click it again. And we can see that the current.
Lewis Benson: there's actually a typo here. So it's not completely broken, but it's not going to continue to work the way we want it to.
Lewis Benson: just because the href has that pull URL but what we're actually checking is the ahref. Boot Dash dark dot CSS, we don't have the whole HTT localhost colon 5500 slash that might fix it. Localhost let me just copy this out of here.
Lewis Benson: And then we have boots topman.css open that I need a Strictly equals I wasn't doing an assignment operator if statement so that wouldn't work. And then we only want one set of parentheses there. That's another Just packed full of bugs right now. Local has 5500 if it is the minified version. This is our current dark mode. Then we want to switch it to this one. So I actually need to swap these around.
01:20:00
Lewis Benson: So it's working correctly now, but as soon as I deploy it's going to break. Because this URL is going to change on the deployed site. So this wouldn't work on GitHub pages. Because we're no longer on this URL. So what you could do is go in here and change this to the URL for your deployed one. it would technically work, but then it's not going to work locally and that's not good behavior for an open source project or for a project that you want to show off to somebody else if somebody downloads it? It's going to be broken when they download it. It'll only work with your repo and work with their repo. You want code to be robust and be able to work across multiple machines. So this solution is not good. Instead of using this strictly equals here.
Lewis Benson: What we can do is CSS dot href dot ends with
Lewis Benson: and then we pass this in it's a method.
Lewis Benson: And let me just bring this up. I want to make sure I actually got the correct method.
Lewis Benson: So this is a string prototype method called ends with so I spelled it correctly. That's good. and it returns a false depending on if part of the string is at the end of the string so
Lewis Benson: This works pretty straightforward here. So we just want to know does the href end with n.css one thing to keep in mind if you're using two files. That end with The same thing if this was dark Dash bootstrap dot men dot CSS, then it would always match no matter what this would always be true and I'll show you what I mean. I'll just rename this real quick. If I had to minified files here. This would not work. Because they both end in the same thing. If you look here we have bootstrap.n.css and up here. The whole thing is bootstrap.n.css. So those are both matches.
Lewis Benson: So that wouldn't work. So that's one of those things you got to kind of keep in mind with this type of thing. You might want to rename these files completely so that they're completely different and you don't run into that type of bug mine one of them's not minified. So this will work. So let's make sure. That it does. And there we go. We got light mode. We don't have data persistence. I refresh it goes back to what it was. And that's where we'd want to implement something like local storage is where it stores a JavaScript object in your browser. And it would store it in here and I actually have one from a previous application because it's based on your URL and I'm on local has 5500 because 5500 is what I use for all of my applications.
Lewis Benson: Then I have a whole bunch of stuff in here. But what you can also do is just right click and clear. And then as they're all gone. Now if I hit this I can actually end up adding that to local storage. Let me actually bring that up to documentation for local storage.
Lewis Benson: So the local storage is on the window. And to read only property. And it allows you to access the storage on the document. It does say it's read only what you can add to it. You can delete from it.
Lewis Benson: so, let's see if we can find the syntax here. So here we have local storage dot set item. And then it has a key. And it has a value so it doesn't look like a JavaScript object whenever you're setting it. But this is how you actually set your keys and your values. So I'll show you the comparison here. If I have an object.
Lewis Benson: Called my cat. And I make this an object. We would do. My cat as the key. And Tom was the name. So This is a key. And this is a value it just slightly different syntax because this And the method requires two the first parameters going to be the key of your object. And the value is going to be the value of your object. So I just want to make that really clear that this is a key in a value whenever you're setting it out item within your local storage.
01:25:00
Lewis Benson: Next thing is retrieving an item for local storage. It uses a method called get item. And it just stores it into a variable. And then remove item actually deletes it from your local storage. And there's also this method which clears everything from your local storage. You want to be careful with this one because you could accidentally delete your session or things like that. If you're just trying to remove random data. I typically like to remove things one at a time. But if it's safe to delete everything go ahead and delete everything. It'll only delete it for whatever web page. You're currently working based on the URL. So this one is Local Host 5500. So when I clear my local storage, it'll only delete the local storage for 5500 and the data you're seeing in here coming from iconophy. It just tells it how it gets its data and it tracks which one you're using what the height and width is and all that.
Lewis Benson: And it makes it load faster. It's the idea. So let's go ahead and Implement a little bit of a solution for that. So the first thing we'd want to do. is check if there we're gonna make a function first and we're going to want to check if there is anything currently in local storage for this so. We'll call it. check storage
Lewis Benson: and the check storage function is just going to access local storage and try to get an item. And if it does get an item it can return the item.
Lewis Benson: so let me go ahead and put that in. I do Ponce dark mode state equals local storage dot get item
Lewis Benson: and we'll call the key. dark
Lewis Benson: dark mode and then what we want to do is check to see if it exists. so we do if
Lewis Benson: state Dark mode and what we actually want to store is the name of the file. That way we know which one it's actually using. So that's what I'm going to check here. If it has a dark mode State, then we're gonna say CSS Dot. Href equals whatever is currently in Darkwood state. So I'll just say that. the first we're checking local storage. And then I'm just going to go ahead and invoke this function immediately on page load.
Lewis Benson: So if it does have it, then it's going to retrieve it. If it doesn't have it then we don't have to worry about it because it's not going to actually set anything. It's just going to move on with it today. I'm also going to throw a console.log here just so we can track what's happening with this object.
Lewis Benson: This is our dark red state. And then the next thing we want to do is actually Set Dark mode to local storage inside of our quick listener. So whenever it gets toggled we want to update that. So whenever this one gets toggled we're going to say local storage dot set. item And we want to pass in the key of dark mode because it has to match this up here. That's called Dark mode and then the value is actually going to be. This string here.
Lewis Benson: The reason I'm doing it this way is so that this variable is going to be assigned to this value so I can just set my atrev. To that variable up here without having to do any sort of Otherwise, I'd have to do nested logic and see are we in true or we in dark mode If it's true, then do this if it's false do that. You could do it that way that logic makes more sense to you by all means go for it. This way works as well. If you don't want to include your file names in here, then you could go that route and maybe I'll show that as well just both versions of it. Just you can see the difference and decide for yourself which one you want to use. And then this one will be that one. I'll put it after the assignment just so it's the same as above. So that should work. Let's go ahead and switch it to light mode.
01:30:00
Lewis Benson: I seen the dark mode got created here and it is assigned to dark Dash bootstrap dot CSS. I press refresh. We're still in Switch the dark mode. It is now bootstrap.n.css, which is our dark mode CSS file. I press refresh and it stays so we now have data persistence. one thing to note Is by default this page does Of the dark mode first. So if you saved it as light mode if you watched the Very closely. You see it flash. I don't know if the stream is picking that up, but it is flashing sometimes. That's because it loaded the dark mode for a split second and then the JavaScript notice that it's not supposed to be dark, but it's supposed to be light mode and it's switched it over. So this solution does work.
Lewis Benson: However, there is that little bit of flicker there Let me refresh again. Yeah, so there's that on initial page load You might not want that behavior. There is a solution to that. You could load a kind of a modal that's temporary. And it would just overlay your whole page and have a logo in the middle. You've probably seen that before you visit a web page and it just shows their logo in the middle of the page for two seconds and then it fades away and it goes into the actual page. You could do that with CSS and JavaScript pretty easily. And that would give time for the page to load into the correct mode. It would also give time if you had any apis to go and retrieve all that data. It's a very common use case. I actually implemented that on my own portfolio at one point just because I thought it was cool.
Lewis Benson: It does take a little bit of setup. show that real quick. I'll show you what that looks like so you can see what I'm talking about. So if I go to my portfolio page, it has my logo there and then once it's done loading everything it'll actually load into the actual page. And this is the same template that I showed on the other one. But this one was built in a framework and it has a little bit more functionality to it than the other one this button makes it scroll down things move and they're popping up. This is an old portfolio. I'll have to go in an update that one eventually but it just gives you that kind of functionality where you don't get that flicker. That's one way to solve that.
Lewis Benson: So if I refresh and you don't like that, you can Implement something like that. It's not too hard to do but it does take a decent amount of code to actually make it work. Right. Does anyone have any questions though about this?
Lewis Benson: I'm in the wrong file here.
Lewis Benson: Sorry this local storage implementation and how this works. So we're setting items and we're getting items. Probably the hardest part about implementing a solution like this. is just knowing how to and implementing the logic is pretty simple setting the item that makes sense, but knowing to get the item before you even load your page. That's something that like it kind of comes with experience. It might sound like common sense just because I'm saying it out loud, but I'm telling you when you actually go to write this stuff. You're gonna be like, wait, what do I do now? It's the only reason I know it is because I've done it recently. Yeah, know. it's just the way coding works.
Lewis Benson: You need to kind of think through the logic by piece. You could use a flow chart if that helped you I've seen that work for some solutions. But usually it's a lot of trial and error. As far as local storage goes though. You want to try to retrieve any local storage first? And see if you have any data. This is typically your user settings and things like that. So if you have a dark mode you want to store that in there anything that would make the page load faster check all that first and then after you check all that then you can go on with the rest of your stuff. So in this case we're checking. Do we have a mode In this case. Yeah, we have a dark mode set the CSS to dark mode. And then we just call that function immediately before anything else happens.
01:35:00
Lewis Benson: Something else we could do here. Which might speed it up a little bit. Let me see if this actually works. I'm going to remove that function import. And then I went to the wrong file inside of my HTML. I'm actually going to put this dark mode script into the head of the document but underneath of the style sheets. so the only thing that we actually really care about we do care about the dark mode button. But we mainly care about these style sheets. I might be able to invoke the function here. Let's see if I say script.
Lewis Benson: I should be able to call that function. Hopefully it exists. Things don't load in the wrong order.
Lewis Benson: The add event listener. I had a feeling that was going to happen.
Lewis Benson: I might be able to defer it though.
Lewis Benson: this one's not defined because it's loading this first.
Lewis Benson: And you can't defer before you do your code. So I guess the only other possible way to This is a function declaration. And maybe I'll just move this script down a little bit.
Lewis Benson: To be under the button.
Lewis Benson: That's still not going to be good enough because this is happening first. Yeah, so it was worth a shot bring this down, too.
Lewis Benson: And then we're back to the beginning. But what the flicker?
Lewis Benson: So yeah, you can invoke your functions like this. But what was happening there is my script was being read. Before this button that I have an event listener on existed. So if I put my script above it it tries to add an event listener to the button, but the button hasn't loaded yet because it reads this from top to bottom. So I try to adding defer which means load to page first, but when I do that this function doesn't exist. And this script gets read. And then it comes up and reads this script. So then now this is undefined. That's why I was having that issue. So the order things happen in your HTML does matter I can actually just leave this like that and put it at the bottom of my body and that would be fine as well.
Lewis Benson: If you wanted to invoke your function and your actual HTML that is an option, it would fully load this script first and then it will invoke the function. The only problem with that is it might make it slower. So that flicker might be more obvious and actually check storage. Isn't being found so all because I have to further.
Lewis Benson: So if I refresh I think the flickers worse. Because it has to load the rest of the page and then come back and invoke this function. So I'm gonna go ahead and put the function back in that file.
Lewis Benson: I think it'll be more performant that way.
Lewis Benson: Is there any questions at all about this implementation here?
Lewis Benson: So that's two things. we did get those out of the way now so I can cover other things during the 30 minutes of class on Capstone week. If you want to implement something like this on your project go for it. I think it's a pretty cool thing to do again. This isn't the only way to do it. I did want to mention that too. Another option would be I'll just kind of do this briefly. I'm not going to go through and create a class for every single item. This is the more common way. You'll see it though. I'll remove all of this If anyone wants to screenshot that go ahead. I'm going to remove all of this and then I'm just going to show the other way you would want to. Implement a dark mode using classes instead of changing out the entire CSS file. It's the more performant and more accepted way of doing it because
Lewis Benson: you're not using a whole bunch of space to create these massive files. So I'm going to go ahead and do that. I'm actually going to leave the dark mode button alone. Just delete the CSS. And then we're gonna use this css here. So what we'll do is we'll create a class called Dark mode.
Lewis Benson: And the dark mode class will have a background. color of black I'm going to change this to be not so dark though. We'll go like A slate maybe I'll go a brown with it over here.
01:40:00
Lewis Benson: Let's start with update.
Lewis Benson: That should be good enough and then we'll do color.
Lewis Benson: Go a real light color with this. You can do hashtag F4. So like an off-white.
Lewis Benson: So you don't have to put a light mode in here. You just have to have a dark mode that will override all of your normal Styles. So you want to make sure this class is at the bottom of your file. So that any other colors you put in here, I'll just do a normal background color now. Sorry, I do. my body. Background color will be blue.
Lewis Benson: That's probably not the best. Here we go. Do a light blue.
Lewis Benson: Wow that I just did that.
Lewis Benson: There we go. And we'll do black
Lewis Benson: so this is how you would do this. ar We look at the page. We have the light blue color on the body. The dark mode hasn't been applied yet. so then in the Javascript file, we can say Dark mode button dot add eventlistener this time. I'll put the click on it. I'll put in the Callback function.
Lewis Benson: And whenever the click happens, we actually want to select the body. So I'll do a const body equals document dot we don't have an ID on the body. So I'm going to use Query selector here. And just pass in body. And that will select the body. And then we do a little body class list dot add and we're going to add dark mode.
Lewis Benson: This will just change it to dark mode at the moment. So that worked but it's not going to change it back. So now to make it change back we want to check to see if the class list contains the dark mode so we'll say if classless
Lewis Benson: our DOT Let me see what it actually looks like here. I'm going to log at first. To make this a little easier to manipulate. a body dot class list
Lewis Benson: And we had it looks like an array so we just want to check to see if it contains it. So, let's see what we have for.
Lewis Benson: methods
Lewis Benson: we have a contains. So we'll use that contains function there. So let's take a look at contains an mdn.
Lewis Benson: And contains another null node. That doesn't look like what we're looking for.
Lewis Benson: I was looking to see if it contained there's a contains method for the string so we may have to actually access the string. By iterating over it.
Lewis Benson: I'm going to do a quick stack Overflow search on this is a good opportunity to see how that would work.
Lewis Benson: and we'll say Does an element tain? in class
Lewis Benson: So this is what I thought it would look like. using the contains method Has element class name? And then they're returning.
Lewis Benson: Which class name would be in? There's a j Solution I'll give it a try. We'll see if that contains works. I'm not sure why this class. Isn't a string.
Lewis Benson: Let's just try it out. plus list Dot and pains and then I'll pass it on dark mode.
Lewis Benson: And We get true. All right, so that does work. So that's perfect. So say if There was a good option a good opportunity to see how that worked on stack Overflow and got 1600 answers illness or upvotes on this and this is what they said to do. So I tried it and this is how you basically develop on a data-day basis. If you don't know exactly how to solve something you check stack Overflow. There's some other tools too that we'll get into. So we see that it contains it. Let me just copy this logic out of here. And put it statement. We see that return to true and false. So if it contains dark mode. What we want to do then is remove dark mode.
01:45:00
Lewis Benson: So we'll do body class list. dot remove
Lewis Benson: and we'll pass in dark mode. And we'll put an else. If it doesn't contain it, then we'll add it. So let's try it.
Lewis Benson: And it's working.
Lewis Benson: So in order to implement local storage, you'd have a very approach to that So all we're doing here is we're checking the class list. Does it contain dark mode? It does remove it. If not at it. We have our style set up in here. So one thing to note is If you have a lot of different elements, you may have to create multiple variations of them. So you might have to do. This is typically how I would do this to say dark mode.
Lewis Benson: Yeah, dark mode header and then I put my colors in there for the dark mode header. Let's just use the same ones for This is a class. And then I would do dark that thought mode Dash body. And I'd have the colors in there for that but underneath or above this I would put header and I'd put my normal header colors here. And the reason I have these above is because I want the dark mode to override the current header. So for this one I would put my light mode colors and then in my header, I have my header with light mode and then I have my header with dark mode. And then all you have to do.
Lewis Benson: You don't have to remove this class. All you have to do is add this class. because this one is lower than this one in the CSS. This gets overridden by this because remember whichever ones on the bottom is the one that takes priority. So you don't have to remove header. You just have to add anything that says dot dark mode. So in the reason I follow this format is because it's really easy to set up using JavaScript. you have this dark mode minus string created inside of your JavaScript and you just concatenate it to every single class. That you want to use so you create a whole list of classes. That you're adding everything to you select all those items through JavaScript and then you just take that same name and concatenate this to it and you can do that for Loop. It probably 15 lines of code total or so to do it that way.
Lewis Benson: That's my preferred way to do it. It's very lightweight version but it is a lot of code. You're duplicating a lot of stuff here. But in the end it does work out you could also do this as a separate file. You can put all of your dark mode colors in a different file. And then have all of your light mode colors in the file and then just make sure when you import them. the link for the dark mode is underneath of the light mode that way the dark mode overrides it or vice versa if you're going the other way around. So back into JavaScript. I will throw in the local storage here. So we want to first check is this dark mode? So before I do that though, I need to actually clear my local storage. Because I already have this in here and it's not going to update if I don't. So I'll just right click and hit clear. And then I'm going to make a function.
Lewis Benson: And it's going to be called check local storage or dark mode.
Lewis Benson: I like to use Long Function names to describe what they do. It's a good practice try to adopt that if you can. You don't have to go too crazy. You don't throw a whole sentence, but this one isn't bad. All right, so we're gonna check it and we're gonna say local storage Dot. Get item. And the items gonna be called Dark mode. and we'll say if
01:50:00
Lewis Benson: dark mode
Lewis Benson: then we'll just body dot class list Add dark mode.
Lewis Benson: We don't need to put an else in here. Because if this is false, then this won't run and it will be in light mode. So once you have it getting the item and checking it, we're going to invoke that function.
Lewis Benson: We'll do that immediately after The reason I'm doing this in a function. because that's best practice. I could eliminate the function and do this outside and Global scope. I'll show you that just undo it afterwards. You could do this. This could still work. It is better practice though to put your Logic, that is all see if you have multiple lines of logic that are all related. It is better practice to encapsulate that within a function just a group it all together and make it more modular. And then you can just invoke it here or I've also seen where people will put their functions at the bottom of the file like this and they'll invoke all their functions at the top of the file. That's also fine. As long as you're using the function keyboard that will still work and let me add in the Dark mode here. So we will say.
Lewis Benson: local storage Dot I set item.
Lewis Benson: dark mode and make sure the capitalization is correct. and we will set the second parameter to
Lewis Benson: believe I can make this a Boolean. True like that. I don't think it has to be a string. If it does, I'll just change it not a big deal.
Lewis Benson: And then here we would say false. Or did I got that backwards? I think I got that backwards. Yes, I do.
Lewis Benson: Here we go. So it's false here. We're removing the dark mode. It's true here. We're adding the dark mode. So let's make sure that works. Refresh we're in dark mode. We're in light mode refresh. It didn't work because I didn't put any logic in. No, I did. This is a Boolean it says at a light mode refresh
Lewis Benson: Light mode refresh or back to dark but I think these are inverted.
Lewis Benson: It doesn't seem to be changing immediately. dark mode false if it contains remove Dark mode defaults else. Add dark mode Set Dark mode true. All that logic looks good.
Lewis Benson: I could. Tell it to check but I don't think that matters.
Lewis Benson: So we're telling it it's in dark mode That's correct. I switches to false. It refres back in dark mode. So for some reason we're in dark mode by default. Did I not add it?
Lewis Benson: Where's my function that down here?
Lewis Benson: I had the class dark mode.
Lewis Benson: I'm going to log that. Here's the problem.
Lewis Benson: I forgot to put the same variable.
Lewis Benson: That makes sense. This would always be true for the string because strings are truthy. Yeah, so I need to make sure I put this in a variable past the variable if statement. Because the variable returns a true or false now, I don't have to put any other logic in there again. We just need to see if it exists anyway. So dark mode Falls refresh.
Lewis Benson: Park red false refresh. We're back to dark mode.
Lewis Benson: So it does change it correctly, but for some reason it's not updating it correctly.
Lewis Benson: Let me do a log of dark mode here. I love getting bugs during demo. This is a great way to see how to debug things.
Lewis Benson: Especially a little things like this. We are getting a Boolean false and I will confirm that it is a Boolean using pipe. of
01:55:00
Lewis Benson: and this tells us what the data type of this is. And that's a string. Okay.
Lewis Benson: So that's good to know. That's why this isn't working. So the type of is a very powerful thing even though we're passing a bullying in there. It's turning it into a string. So now that we know that we can say prickly equals. through
Lewis Benson: if dark mode strictly English true add dark mode.
Lewis Benson: I just want to make sure I didn't put it in here automatically already. I did not okay.
Lewis Benson: And refresh we're in light mode switch dark mode refresh. We're in dark mode. So it is working correctly. that's all it was. I passed a bullion in here. It looks like a bully in here and even looks like a bullying in my console.log when I checked that but for some reason at the string and I could check that again. I don't have access to that variable. Because it's inside of a function But again, I'll console.log that.
Lewis Benson: work mode looks like a Boolean but as soon as I put type of in here.
Lewis Benson: We can see that it's a string. So very interesting.
Lewis Benson: Wouldn't have expected that but that's what it is. Are there any questions about the class version of the dark mode implementation?
Lewis Benson: Anyone have any comments or anything before we get into our breakout Rooms Today? We're going to be doing more catch up time and I'll show some. Projects we can look at for review. I want to bring up the game again for those who want to practice some of that stuff as well. For those who are caught up.
Lewis Benson: Nobody has any questions. Okay.
Lewis Benson: So let me show some resources that we can use for review.
Lewis Benson: First I'm going to go to the W3 schools. And we'll see what we haven't looked at on here yet. I believe we went over actually all of these. So feel free to dive into any of these that we've gone over so far. We have the HTML CSS JavaScript and bootstrap. They're all on here. If you haven't had a chance to look at any of these check them out bootstrap one, I think is probably the coolest one. Because it actually gets you looking into documentation. So work through if you want. These exercises here. There is a quiz as well. Not sure how valuable the quiz would be. We'll take a look at A container class. I did look at this before. This is false.
Lewis Benson: container fluid Yeah, so this is which contextual classes used to create an orange text color. That would be text warning. Yeah, Pretty straightforward little quiz. It's not a bad one too, because you can look up a lot of these on the Zebra stripes, I think they deprecated this. So this one might be noticism privacy. So it must still be That would be class at the image to a circle actually, not sure I think it's image rounded.
Lewis Benson: It's not giving meaning live feedback.
Lewis Benson: There is no such class that used to be the Jumbotron, but they got rid of that. So I'm hoping that that's why they asked that. But yeah, I'm just gonna hit next on all these and see if it gives me a score.
Lewis Benson: Because I'm curious about that one question now.
Lewis Benson: Also, this one's not fluid. It's just container apparently.
Lewis Benson: Rounded Circle that's good to know.
02:00:00
Lewis Benson: Hours the Jumbotron. Yeah, there is no such class. So they did update that to the new one. I used to love using the jumbotrons. I wish they hadn't got rid of that.
Lewis Benson: Okay, And there's these resources here. The one I wanted to show again. We went over this during get week is I'm just going to get game. And it's called learn get branching. For anyone who's caught up, I highly advise going through all of these levels. having all of this complete is it'll really get skills to the next level basically and they're pretty challenging. And they do translate directly over to how you would use these Ingot. It's a very Advanced technique with get stuff. So Check these out. I'll do the remote and the main.
Lewis Benson: If you have time for this maybe work through a couple of these a day, if you can again, this is really good to just really ramp up your get skills. This will really show you what you can do with get for example, some of the version control stuff where If you were to actually show in figma here just because this is Kind of important. So you have your commit here. You had a bunch of code you make another commit and let's say in this code here. You have a bug. And then you have some more commits. And then at this point you need to roll back your code. But before you do you realize that you fix the bug right? So This one would have the bug as well because it carried over this one you found the bug and you got rid of it. It's gone. And then you do another commit.
Lewis Benson: And then at this time you realize that you need to roll back your code. So You're Gonna Roll it back to here. And when you roll it back now, you have the bug back in your code and you have to go back and fix that again. Some of the things you can do with get is you can actually do your commits you get your bug in your code. And you keep on going you don't notice the bug yet. and then when you get to this point You realize there's a bug in your code, but instead of fixing it here. You actually roll your code back. You fix the bug here. And then you merge your code forward and it gets rid of the bug here and here as well. And that's what they're referring to with this cherry picking thing. There's a lot of other stuff like that as well. Very Advanced Techniques where you can manipulate your entire get history through this.
Lewis Benson: The benefit of this for one it's a really good resume booster having that much experience with get and being able to demonstrate that maybe through some projects or something or even you could put it on your portfolio and just show your progress on here as well. You can just screenshot of this on there somewhere saying that you are Advanced and get it would look really good. So this is something you can work on as well work on wireframing if you haven't got a drawing application yet put one together. So this is the learning git branching the CFS Diner another great toll. For your selectors. I know another one too. It's a CSS flexbox game.
Lewis Benson: I've seen this one. This one isn't bad. This isn't the one I was thinking of though. This one you would like maneuver the Frog around using flexbox content. So this one would be Flex end. And I spell it wrong.
Lewis Benson: So that one got the Frog over there. You just go take the whole command in. then we can hit next and so that's something you could do too. If you wanted to practice your flexbox commands and getting those down. The one I was thinking of was actually a Power Defense game.
Lewis Benson: Might be flexbox defense. I actually don't remember.
Lewis Benson: Yes, this is the one I was thinking of it works the exact same way. you practice the commands the frog This one looks good. Whichever one you want to play with you can use those to work on those and get to his commands down. This little games are pretty good way to do that. Some other things too. I would definitely use YouTube as much as you can for getting the latest tech news. There's some really good resources out there. I'm actually bring up YouTube here and just show you some of the ones that are really well we have web dev simplified
02:05:00
Lewis Benson: this channel here is absolutely phenomenal what I like about this is most of his videos are short. You can see here. We got there's a 15 minute one. There's a couple later a little longer. He does some longer. I code a long type stuff JavaScript shopping cart tutorial for beginners. great stuff on Here we have sequel Json. So she wanted to get it an update on that. They're learning SQL in 60 minutes. it's just a way to go over the syntax. Really. All kinds of great sources on here great teacher follow him on here just because he also posts a lot of videos.
Lewis Benson: That say here's a new feature coming out and CSS. That'll be out in the next three months. It's not out yet. And then this is how it all works and then he'll show what the support is for it or here's a new JavaScript method. It just came out this year. I guess a lot of videos like that as well a lot of shorts and stuff. I think actually has these here. Yeah, so no just released this amazing feature new typescript. All this new CSS. Margin feature is a huge quality of life. So all the changes that are happening to web development. This guy's got it So great resource for learning highly recommend him. Another one is Kevin Powell. This guy is brilliant at CSS. So let me This is him here. Believe this is his channel. It looks a little different there than the picture Yep. This is him.
Lewis Benson: He's another one that does a lot of this is new something coming out things like that. Master the CSS layout this guy is a great teacher highly recommend him for CSS for So check this out if you haven't.
Lewis Benson: he has a lot of code along stuff too. He has a lot of more advanced stuff a lot of simple stuff. And look at the podcast if you're into podcasts and listening to Tech while you're doing other things, here's a great source for that. I haven't actually listened to his podcast but from what I've seen on his videos, he's really easy to listen to
Lewis Benson: improve your CSS keeping it dry. So here's some talking about some meth practices. HTML and CSS Core Concepts, so a lot of good resources to get brushed up on these are some older videos here six years five years, but the fundamentals are all still the same. Here we have web dev Battling Kevin, so there's a interesting video there. and then I think it's Firebase. I'll just put Firebase CSS. We'll see if I don't see the video Fire Ship actually Firebase is a database platform by Google buyer ship is the name of the YouTuber
Lewis Benson: here it is.
Lewis Benson: He has a lot of different content on here, but some of his styling stuff is great. He has some stop AWS on here. This guy's a great developer with a lot of good content. So if you just needed something to watch 10 JavaScript changes you missed in 2023. So here you can see he's releasing latest changes that are happening in JavaScript. So another good resource for that as well. So those are the three resources. I just wanted to share so Fire Ship web dev simplified and Kevin Powell. Great resources on YouTube so check those out. If you haven't been using this resource highly recommend you do this do code along projects do
Lewis Benson: Do whatever you can to be practicing code because that's what this is all about. The more you practice the better you get and it never ends. You want to make sure you're doing at least something every day, whether it be an hour even 10 minutes of coding just do something in code so that you don't forget the stuff you learned and maybe learn something new.
Lewis Benson: Does anyone have any questions about these resources? Is there anyone interested in other resources that you want me to bring up maybe some sort of specific toll that you're interested in?
02:10:00
Lewis Benson: All right, so it's got some time left. So I'm gonna open up the breakout rooms. I'm gonna stop to recording here in the breakout rooms just practice these projects. If you have any assignments that you don't have at least a 16 out of 20 on redo those assignments and resubmit so you can get this points. We're going to need those end not before the Capstone, but it would be nice to have them before the Capstone the sooner the better on that but at least the following week after the Capstone, I would like to see all of the assignments that are missing turned in that If it does take you a little longer, that's okay. But keep in mind until your assignments are in you won't be able to continue into level two.
Lewis Benson: So we'll have to address that if that is the case if you show your unable to catch up reach out to me on slack and we can discuss it and see what your options are for that there might be opportunities for pausing your learning it temporarily and then enrolling back into another cohort. There are other starting up soon. So if that might be an option for you, just reach out to me on slack and we can discuss that. So let me open up the breakout rooms and we can get started and you can get working on assignments and just practicing these Concepts in general. Feel free to work on planning out your Capstone as well if you're caught up on everything. If not, and I do ask that you do catch up. So that end the recording here?
Lewis Benson: and the transcripts
Meeting ended after 02:11:45 👋