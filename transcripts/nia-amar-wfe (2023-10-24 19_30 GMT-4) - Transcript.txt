nia-amar-wfe (2023-10-24 19:30 GMT-4) - Transcript
Attendees
• M a t c h a M o c h i i •, Chantrice L, Daniel Perez, Elgin Sharper, Gregory Robertson Jr, Ike Steoger, Iris Coats, Justice Miller, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Ryan Arnold, TRACY JOINER, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: Hey, welcome to wake week 2 day 2. We're going to be talking about CSS some more. Specifically we'll go into fonts borders and a little bit more the Box model and we're going to start diving into external styling. Up to this point. We've only been using internal and in line styling. So you'll get to see what that looks like and we'll have a little bit of a new workflow when we're creating our files with an external style sheet. Let me start the presentation.
Lewis Benson: Okay, and I'm in my projects folder. So I'm going to start by creating a new folder again. Have a nice clean place to work from And is the 24th? May open up my vs code.
Lewis Benson: and access that folder
Lewis Benson: there We're in the new demo 10244. So I'm gonna start off like we have been I'm going to start with creating my index.html.
Lewis Benson: And now that we have the indexed HTML, I'm going to put my boilerplate in. And we'll call this. Yes external.
Lewis Benson: demo And I'll just put a little bit of content inside of my index so that we can get our proof of life and make sure everything's working. Start with the header. H1
Lewis Benson: or Proof of Life message and also just put a main. article
Lewis Benson: section And a paragraph with some Laura minute. Just so we can see all this nice content on the page.
Lewis Benson: Okay, so I just got a basic layout for the start of an article style page. Let me go live.
Lewis Benson: For the load. We'll bring that over here. Okay, so everything seems to be working. So now I'm gonna get into the external styling. Does anyone know what it is anyone looked ahead on this yet?
Lewis Benson: Okay, and that's perfectly fine if you haven't yet. So basically everything we've been doing in the head with this style element. Can be done inside of its own file and I think I told you before that you could have multiple Style Elements here. So if I wanted to say all my header styles could be in here. And I could say background color red. And then I'll put my main Styles here. And save background color blue. I'm gonna quick look at what this looks like. And sorry if I'm moving a little faster, I'll explain this once I get it up. So my header is red. And my main is blue. And all I did was I I created two Style Elements inside of my head and applied these style separately. That way they're separated from each other.
Lewis Benson: this is valid you'll see this sometimes where you keep things separated like this so that it's easier to keep things organized. But instead of using these internal Styles, what I actually want to do is use external styles. and I'll demonstrate the difference and the benefit over external once I show you how they work. So I'm going to create a new file we're going to call this Styles dot CSS. And this is a pretty common name for your first style sheet or you are what they call the global style et. This would be all of the styles that you want to have across all of your pages. So if you have a page web application. And all 10 pages share the same navbar on all 10 pages, then you definitely want to put all of those Styles in one place.
Lewis Benson: So Styles dot CSS is what we'll call it and again you can call this anything. It doesn't actually matter the part where it does matter is where you link it up and I'm gonna delete these Style Elements. So that's about cluttering up our head notice. I'm still inside of the head. And we're going to use an image shortcut to bring in this style sheet. So I'm going to say Link and we see the option for CSS right here. So when I type in the word link, I get link colon CSS. If I click that, Notice the href here. I called mine styles with an S. It's calling it style If you want to call your style without the s. That's perfectly fine because this is the Emmet Autocomplete more commonly you'll see people use styles with the s. So that's the reason I'm using that here, Whenever you're using a plural, make sure you put the SN so that it has the correct file name.
00:05:00
Lewis Benson: and this works a lot like, A anchor tag. You put in the file name. So if I had this in a folder, maybe I have a CSS folder like this and I'm going to undo this. So you don't have to follow along with this part. So, my styles are inside of the CSS folder. so if I would access that it would be just like when I'm linking two pages together, And then I'm actually going to remove that for now just so it's not overly complicated. I just wanted to show that. the href works the same As an anchor tag href.
Lewis Benson: Okay, so we have this link, let me get that lined up with everything else. We have this Ariel, this is required. Whenever you have a style sheet, it stands for relationship, I believe or relation. It's just yes relationship. And this is just something that you're always going to include with your link on a style sheet. It won't work without it and it actually has a little bit of a tool tip there. It says it names. The relationship to the link document to the current document. So for example, this Doctype up here, is telling the browser what type of document is coming in this case HTML5. This link is telling What type of document is linked In this case, style sheet So, we have our link.
Lewis Benson: Are rail and our style sheet and that's all there is to getting this wired up. So if I go back to my Demo. Here all my styles, I deleted are gone. So just show you that what that looks like. Now I'm gonna go into my styles and I can just start writing CSS right here. I can do body. If I can hit the curly bracket, Background color. And we'll do. Just a black. So it's really obvious.
Lewis Benson: And And if I highlight, there's all my texts Let's make that. Not so black. We'll go a dark gray. There we go. And then I'm going to change the font color to something a little lighter so that we have a little bit of better contrast here. With that, we can go with an antique white.
Lewis Benson: And there we go. So this is all wired up and it's already letting me apply styles. Does anyone have any questions to how I got to this point?
Lewis Benson: So I'll do a quick recap on everything I just did just to make sure we're all Krystal clear on how this works. So I created my index.html. I put some content in it so I could see the styles taking place. And instead of using the style element, I'm using the link element. And whenever I type in the word link, It gives me the option for CSS. So I click on link CSS and it provides this href with css by default and I change that to Styles plural so that it has the Correct file name, it has to match whatever file you called this.
Lewis Benson: And when I format that'll put that slash in there that was missing. And then I have the new Styles dot CSS file that I created using the new file button. And in here I just started writing some CSS.
Lewis Benson: are there any questions about any of that so far?
Lewis Benson: Okay, so I want to talk about the benefits now of having external style sheets. So if I have a lot of styles in here and I'm actually going to create some more on this I'm going to say margin zero padding. I'm just going to throw some random Styles in here so that I have Kind of some work done. padding 0 we'll do something with our header. we'll say
00:10:00
Lewis Benson: we'll give this up just a background color for now. Just so we have something on it. This one we blew. We'll do our main. And we'll give this a background of yellow
Lewis Benson: and this probably isn't going to look all that good, but we'll see what we have and there it can't even read the text there, but the styles are applied and that's the important thing we can see that it's working. So I'm going to create another HTML file and show you the benefit of having this linked externally. So this one is going to be called second dot HTML. And I'm just going to throw in some sample text. Just demo for the title. And then I'm also going to give this a header. H1
Lewis Benson: This will be a hello world. And we'll have a main.
Lewis Benson: And inside the main I'm going to put a couple paragraphs with form up some.
Lewis Benson: Okay, so we have our second page and I haven't applied any styles yet. But let's take a look at the second page.
Lewis Benson: And we can see that the styles aren't there. So, if I wanted all of the same styles for my index to my second, can anyone tell me how I could do that?
Ryan Arnold: make A link with the relation style sheet and…
Lewis Benson: Exactly. …
Ryan Arnold: the href would be styles that CSS.
Lewis Benson: the link Style. And I'll put the s there for styles. And now when I look at my page, all those styles are applied, I'll show you what the alternative would be using internal styles now so we would have all of this. I'm just going to copy and paste this. Now I'm going to remove the link temporarily and I'm going to put in the style element and then I have all them styles here. And I'm going to copy that over. And I'm going to replace this link with that so you can see where I'm now repeating a lot of this code. So if I wanted the same background color the same everything across all these pages. I got to start duplicating my Styles across each page and that can get very tedious and it can also get very bug Crown. You might have a navigation menu that doesn't work for some reason on one page and it's because there was a typo
Lewis Benson: in one of your style elements and you'll have to dive into your HTML to try to find where that bug is at. So this can get very tedious and a little bit cumbersome and it's not considered best practice to use internal or even in line Styles, especially when you're doing multi-page applications. There are some times where you may find that an inline style is required, especially if you're using some sort of external library for components. You'll see. That your style sheet doesn't seem to be applying anything. it's not working and then you can use the inline styles to get that higher specificity and make sure that your styles are applied. So I'm going to go ahead and put these I didn't delete them. I'm just gonna put my links back in.
Lewis Benson: And we'll do link and I'm gonna make sure I don't accidentally auto complete early because it doesn't give me the href. I mean, I guess I could but I like to just click on the CSS to make sure that it gives me the start at href and I messed it up.
Lewis Benson: So it's always a good idea to read your imet shortcuts here because we have some other stuff too. we have this favicon link. So if you did have a link to a picture that you wanted to be in your browser tab, that's how you could do that. Usually you would want a DOT ikeo. That's something we're not going to really dive into right now. But if you want to explore that to have that little icon, I'll show you where that would be. In a second. And put my link back in CSS put my SN.
Lewis Benson: There we go. So this little Globe at the top of my tab right next to the word Dima. That's the favicon. And you can just include A quick Google search will show you all kinds of different sample favicons that you can download and you can link those similar to how you link in the CSS. You just type link. Click 5:00. And then for the href, this is where the file goes for the favicon.
00:15:00
Lewis Benson: But go ahead and explore that on your own if you want again, that's kind of outside of today's scope. So does anyone had any issues with anything so far for those who are following along? Anyone have any questions about anything we've done? Maybe Curiosities about best practices or anything like that.
TRACY JOINER: I have to catch up on an appointment with the TA tomorrow evening. So I'm trying to catch up.
Lewis Benson: Okay, that's perfectly fine. Hopefully that'll go well for you tomorrow.
Lewis Benson: so that is pretty much everything. We need to know about linking an external style sheet. Next I'm gonna talk about some best practices in here. So when you're actually doing your selectors, and who can tell me what a selector is?
Ryan Arnold: it's any of the things that call back to the body or the header or anything that calls back to an element or a class or an ID. So right there basically everything that's in the green text right there.
Lewis Benson: exactly
Lewis Benson: Yeah, all the green text. These are all my selectors and if I had a class I'd put the period. And then I would say class name if I had a class called class name for some reason. And then this one's purple because it's a class name. And I believe IDs are blue. I remember right another also purple.
Lewis Benson: And there's some other selectors too that we'll go over the pseudo selectors a little bit too today. So with this Linked UP
Lewis Benson: Let's talk about some topography stuff. Does anyone know what typography means? Is that a term that you've heard before in the relation to web design perhaps
Lewis Benson: So Topography is basically anything that's text related. This would be your font families text ign. something's italic bold anything that changes how your text looks considered topography. So as far as the best practices go and I'm jumping around a little bit here. I like to put some typography in my body or in my root and there's two ways to do the root so you can say root like this. These are actually the same selector because if you remember back from our week one, I believe it was day We said that L the element if I look at my index that's this element right here.
Lewis Benson: Is the root of the document and now we can see that inside of CSS with this The reason it's a pseudo selector is because it has a colon in front of it if we do pseudo selector It's the same as doing L root. I prefer HTML just because it's a little bit more clear on what it is, but I like to put my default font size Within. My HTML so I could say 12 pixels is a good starting point. My actual preference a lot of people use 12 pixels. I like to use 10 pixels because it's easier to count by tens than it is to count. by 12 and that's just a preference thing. It's not something you have to follow. You can come up with your own methods and tricks. But I'll get into why I use this in a little bit.
Lewis Benson: But notice I have these in a certain order here as well. If I'm actually gonna split this, it just button here at the top right of my VS code. There's this split editor and I can have my styles on the right. And my HTML on the left. So I can view these at the same time and I'm just going to show this temporarily like this, because this can be a little bit confusing to look at I just wanted to show you my HTM Is this HTML here? And then here. And then it's here. Notice that they're all in the right order. As I read the CSS top to bottom, it's how I read my HTML top, the bottom. So you want your selectors? To have some sort of structure to them and be in the same order.
Lewis Benson: As your HTML and it wouldn't necessarily matter. just move my curly bracket. If I move my main element up above my body, it's not going to affect my styles. I still have that yellow But what it will do is make it harder for you to find where your selectors are. And now I have a main selector above my body and let's say, you have a hundred lines of CSS and you come in here and you're looking for the main and expecting it to be underneath of the header. It's not there. So you create a new one. And then you create a new background color and you set it to something different. And as we know whenever you have things, pop, the bottom, whatever ones on the bottom is going to be applied. So now, we have this aqua background color, instead of the yellow, And this is kind of a dramatic issue here.
00:20:00
Lewis Benson: where this could actually turn into a problem, is, let's say my main had padding all around pixels and I didn't realize that it had any padding on it. So let me see what this looks like now so we can see that we have that padding there. Down here. say. I don't have enough padding in my main. So I'm going to put 10 pixels on this thinking that I don't have any currently. And when I look at the page now it went in the wrong direction. And where'd my background? I just deleted the background. I'll put that back up here.
Lewis Benson: So you could see how this could become problematic so I have padding 10 here. This will actually delete the 50, it'll override it. It'll give me 10. So I'll show that again a comment out this one. And we have that 50 pixels of padding and again, Hypothetically. I'm looking at this and say I need some padding on this. I don't have enough. I want this to come in a little further. So I'm gonna try 10 pixels. So I apply this down below thinking that I don't have a main selector because it's up above my body. and now I have less padding than I started with and that could be a very confusing bug because you put 10 pixels of padding on it and you lost your padding. So that's just one of those things to kind of keep in the back of your mind whenever you're working and it's also a really good time to use your tools here and see what's going on. so if we look at the
Lewis Benson: let me actually select the main.
Lewis Benson: We actually look at the CSS over here. We can see this 50 pixels of padding was crossed out. And what's interesting is if we At this text this might just look like a lot of gibberish at first, but it's actually useful. It's a Styles dot CSS. And then there's a question mark and then there's a whole bunch of let me close that I didn't mean to open that.
Lewis Benson: There's a whole bunch of numbers here and then a colon and a five. What this is actually saying, I'm not sure what all these numbers are used for. It might be some sort of location in memory. I'm not 100% sure on that but what I do know is this colon five? It's telling me a line number. And one thing to keep in mind if you're on a Mac, sometimes these line numbers don't line up perfectly. I've seen where they're off by a few and I think that might have something to do with how Mac reads it but it can still give you a general idea of where this is that so let's take a look at line 17. of my CSS, let me Close this we're on one page. So line 17 is showing this selector here, Main. And then showing this 10 pixels. And then we see the other. Five the selector main here. So it's showing me in my Dev tools.
Lewis Benson: This one's online five. And this one's online 17 so we can use our tools to find out what's going on. And we look here we have this Whenever you see user agent style sheet, that's the default browser Styles. So by default main is set to display block. So make sure you're using your tools. And looking at our tool here, we can also see that this HTML selector is online one of the styles.css. And again, this is very useful, especially when you're dealing with 15 20 style sheets and 40 HTML files. It can give you some information on where to find where things are going wrong. Does anyone have any questions about that?
Lewis Benson: Yes, Elgin.
Elgin Sharper: so when I try to use but that was the fujillo.
Elgin Sharper: the link you say that was you.
Lewis Benson: This here.
Elgin Sharper: the other one where you said about Putting a picture. And fit favorite photography the time. Okay. yes,…
Lewis Benson: all the favicon
Elgin Sharper: and I got a picture from And splash and it's still not working.
00:25:00
Lewis Benson: So when you have a picture it needs to be converted to a DOT Iko. And since we do have a little bit of extra time, I'm actually a little bit ahead. I'll just show that real quick. Convert image to dot Iko. so I can't remember which of these I used previously but I think this one on top looks promising. Yeah, so you just uploaded here.
Lewis Benson: It'll convert this into something. You actually be able to use. Yeah, so we have our different file types.
Elgin Sharper: Okay.
Lewis Benson: These are compressed like a zip file. But yeah, you just upload it into here. It'll convert it. And then I believe you can just download it from there. This isn't the one I use previously. Might have been this one.
Lewis Benson: Yeah, this is the one I use previously. So you just the choose file hit the upload and then you can download the Ico. And then once you have an Ico and you link it in. You want to make sure that I go is in the same folder? as your HTML otherwise, you'll have to display the path to it. So if you have a folder, let's say you have a folder called assets and then Within. I have a condo Iko initial actually work because it's an empty file but if I were going to link to that now I would say Link, I'll click on the favicon and you can see it has the fava condol Iko in the href, but it doesn't have the ets folder. So I'll type in assets. And then click on favaconda.lyco and that would be linked there and I believe that's kind of break.
Lewis Benson: let's take a look and see what actually happens when you have an empty file. Yeah, it's just the same. And I don't have the air in my console. It's actually interesting that it found the file and it's not throwing that 404 anymore. But it's still just a globe.
Lewis Benson: And I believe you can also just search for sample. avocon's
Lewis Benson: and just download these. So here's a whole bunch of different favicons you can get. You want to make sure you're getting the dot I goes because they typically work the best.
Lewis Benson: And we can see we have some Platform stuff here if you wanted to display stuff for different users.
Lewis Benson: Yeah, that's a good question. So next I want to talk about font sizes. and more specifically I want to talk about the units. So we see the pixels here. You see me use this a few times. So whenever I set my font size to 10 pixels. I like to refer to this as hard coding. My pixels. I'm not using anything dynamic. Whenever it's 10 pixels, it's 10 pixels, that doesn't change. It's always going to take up the same amount of space. notice. even though I set the font size to 10 pixels, If I zoom in on my browser, it's changing my font size.
Lewis Benson: And all I'm doing is zooming in and out. So that's something to keep in mind, even though I have it set the 10 pixels, that can be changed. And also if you go into your browser settings, you can actually set a default font size so that you could have larger fonts to look at. So that could be problematic from the development standpoint. because if you're expecting your content to have a certain font size, And users are changing that font size on their browser. It could break your entire website. Luckily, there is a fix for that. Yes, Krystal, you have a question.
Lewis Benson: I can't hear you if you're talking, I see you unmuted.
Lewis Benson: I don't hear you at all if you're talking Krystal.
Lewis Benson: You might want to check your mic settings while you work on that. I'm gonna continue then just let me know whenever you have it. You can just shout out your question. Don't be afraid to interrupt me with that if you can get that working. So I want to talk about we have this 10 pixels font size here in my HTML. So now what I'm going to do is in my body, I'm going to set my font size again. But this time I'm going to use a new unit and it's called the REM and it's the root m. Does anyone know what m stands for and in terms of typography doesn't ever heard of the M's.
00:30:00
Lewis Benson: Invite m em. M.
Lewis Benson: So the m is actually referring to Old School typewriters. It was the measurement of the letter M on the keyboard a capital letter M. So they would measure to the top of the letter M. And that was one M. That's how they determined the M size on a typewriter now we use it and a little bit different context. So let's take a look at this font size to REM and see what that looks like. Let me zoom out to 100% So here is two REM. Now I'm going to comment this out. And bring that back up again. And now look how small it got. Let's take a look at our tools.
Lewis Benson: And we can see our font size is set to 10 pixels right now. So let me enable this.
Lewis Benson: And now our font size is set to two REM. So the reason This is to our two REM as twice the size of 10 is because I set my root font size to 10 pixels. So each REM is now equal to 10 pixels. This is going to be based on your root font size. So if I go to four REM, can somebody tell me how many pixels that is?
Lewis Benson: exactly 40 pixels So now I know exactly how much one REM is and that's because I like to use 10 pixels on my HTML. And again, I see other developers though use 12. So now this is four times 12 instead of four times 10, so it's not hard math. It's just a little bit more thinking and I just find it easier just to use 10. But the reason you want to use these units rather than pixels. Is because of users changing their font size see how everything's kind of scaling together as I zoom in and out. It's actually changing these fonts, even though you can't see it over here changing. It's actually a different font size because I'm zoomed in and then if I were to go into my browser and change the default font sizes. The root size of my browser will be changed and it will cause the entire page to scale.
Lewis Benson: with that said if you're using Rems for that reason. Then you need to use Rems everywhere. So where I have this 50 pixels of padding that won't scale whenever the user changes the page size. So I'd actually have to use five REM here. If I want to maintain 50 pixels of padding. So I have my 50 pixels and that 50 pixels will continue to scale with it. Does anyone have any questions about that?
Lewis Benson: Okay.
Umar Z: So the padding five REM is taking reference from the font size, which is 10 pixels.
Lewis Benson: Yeah, it stands for root M. And it goes off of your font size. So whatever your HTML font size is set to this is where this gets reference to by default HTML font size is 16. So if you don't set the font size one REM is going to be 16 pixels. So if I remove this, I'm actually just gonna comment this out.
Lewis Benson: And we'll see everything grew because by default I have a 16 pixel font size in the browser. But again just for Simplicity of math. I typically will change this to 10 pixels and you don't have to do that if you don't want to. you don't really need to know necessarily how many pixels something is once you get to hang of using it? You could just try trial and error you could say five rem's not enough. Let's try 10. REM not see what that looks like. And let's try a hundred RM, see what that looks like, and I'm actually not seeing any changes here.
Lewis Benson: I'm being overridden down here. Let me actually fix Then there's that bug I was talking about or I'm expecting things to change And everything's gone because I did that. So yeah, if I say 10 REM. Then that's not enough. Let me try 13 REM and This is a normal process when you're doing CSS. You're just gonna alt tab. 14 now 15, that's kind of the workflow whenever you're working with this type of stuff. You just keep trying different sizes until you find what you like. Unless you have a wire frame that specifies exactly the font sizes. You're going to be using most of the time. It's just going to be trial and error until you get to hang of how much space is
00:35:00
Lewis Benson: once the more you work with it the better you get at it. yeah, Umar.
Umar Z: So we're using four five six, but can it be 1.5 2.5 5.5. it's 2.8. These values can also be used and…
Lewis Benson: Yes. Yeah,…
Umar Z: they're gonna work.
Lewis Benson: you can use floating Point numbers. So if I put 10.5 we can see that that changed. I don't know if you can see that live. But if I remove this and then switch quickly it is moving.
Lewis Benson: it's moving very subtly though, because it's only five pixels. So point five is five pixels 0.6 would be six pixels. Yes, you can. I don't know how many decimals you can include. I never did more than one. I assume you could do more than one but I've never actually found a way to test that to see if it actually matters. because
Umar Z: But that change who sort of actually because it's decreasing. So 10.59 or 10.5. 8 let's suppose it's gonna be very very small change.
Lewis Benson: that's if your display can even. See the difference between the amount of pixels. Not if you're on a TV, you might not have enough pixels available to actually display everything. And it might not render all of that.
Umar Z: So in that…
Lewis Benson: But yeah.
Umar Z: if the display is not scoring that number of pixels. So which value is going to take preference? Is it gonna fall back to 10 or round it up to 11 of any idea?
Lewis Benson: I don't know. I would assume that it would round down in that case if it doesn't have enough pixels to support, but if it's close enough, it might round up. It's not going to be able to do I don't think you can do half a pixel unless you have some sort of a retina display. They can handle half pixels. an what are those called the iOS laptops? I believe they can support half pixels. But as far as the default monitors go. I don't even know if you'd even be able to tell the difference between a half a pixel and one pixel.
Lewis Benson: Of honestly, if you get value out of a half a pixel and it rounds it up to a point where it works for you. You can try that. I don't know if there's really a best practice. I see people use decimals. I never see more than one decimal though at a time just because of the whole it's not going to be that accurate based on different display types. but I do see decimals occasionally, especially with Rems because 0.5 is five pixels. And that is fairly significant. Krystal did you get your mic working? If not, you can type your question into the chat here as well.
Lewis Benson: If you still have a question.
Lewis Benson: Does anyone else have any other questions?
Lewis Benson: So currently I have my font size on my body set to 4 RM I believe on this index. I have a section. I'm going to use that section and I'm going to do a little bit of manipulation here. So we'll say section. And I'll do font size.
Lewis Benson: And again, whenever I do font size notice I get this larger medium small. I'm not sure what these actually translate to but I never see anyone use those. And I don't know how much control you have over them because of the whole. root element sizes So, I'd advise just using actual numbers rather than trying to use these large larger medium small. Just keep in mind like what the default font size is and then just go from there. So your normal default size is 16 pixels for font size. So I'm actually gonna set this to 16 pixels. Because I reset it to 10 pixels in my HTML. But I want my section to be a little bit larger font size. I have my body set to four but this should override it. So let's take a look at that.
00:40:00
Lewis Benson: Okay, so I want to actually inspect just to make sure that these are being applied correctly. And I see body is for rem. and notice inside of this paragraph, here, we have these ems instead of and we have em this works. Similarly to an Aria and I'll show you an example on how these work, but they're not based on the root font size. They're based on the current font size And I'll show you what that means. So our section is 16 pixels. And I'm on second. That's the problem. I'll switch this back to index.
Lewis Benson: Here we go.
Lewis Benson: So my section I set the 16 pixels. Now, I'm going to go into my paragraph.
Lewis Benson: And I'm going to set the font size in this paragraph and I know this is getting a little bit confusing because I'm setting the same font size on multiple things in multiple places. I'm just bear with me for a minute here. And what I'm going to do is I'm actually going to set this to 4em.
Lewis Benson: what would you expect this font size to be? on my paragraph element how many pixels?
Lewis Benson: So if this was an RM, it would be Show you the difference here real quick. We're actually bigger than 40 right here. If I go into this Fourier em here. And I'm actually going to override this by doing font size. I want you to watch the text on the left and watch it change when I switch it to 40 pixels. So that was actually instant we can see that.
Lewis Benson: So we're actually larger than 40 pixels and I have this set to not our em. So can anyone take another guess of what our font size actually is how many pixels?
Umar Z: So is it four times of the default size?
Iris Coats: It's,
Lewis Benson: It's four times the current font size. So let me show you I set my section to be 16 pixels. And this paragraph element lives inside of this section. So the current font size is 16 pixels times four is my actual font size which puts us at 64 pixels. So this is a little bit of a confusing part of the different font sizes and these different units And don't worry about it. If you don't fully grasp I know a lot of developers who have no idea how a lot of the stuff works and they're still doing okay, they just trial and error and they get their way through it. So if you don't fully understand how this translates not a big deal, but there are some use cases where this is very handy. So I currently have my font size up to 40 pixels. Let me uncheck that.
Lewis Benson: And so we can see the difference there. Let me switch this to 64 pixels just to show you. And we shouldn't see a difference now when I check the nun checklist. So for REM is exactly the same because the current font size r e M's are based on the root font size. Does everyone understand that distinction?
Lewis Benson: cool So a use case I want to go over why would you use an em over an RM? Because you get so much control over the REM and one of my favorite use cases for this is in a button, so I'm going to create a button element here. And I'll just do button. And I'll say click me.
00:45:00
Lewis Benson: a couple explanation points in there for Style and I'm gonna select this button now.
Lewis Benson: And I'm going to do font size is two em. Can anyone tell me what my font size in pixels is for that button? Let me show you the index before we go too far here. So it's not inside of this section. And then I'm going to show you Here is the CSS. So that's that section that it's not currently in. So can anyone tell me what the font size of my button is.
Lewis Benson: in pixels
Umar Z: So I'm really confused. So you said this burn is in the section.
Lewis Benson: It's not in the section. I'll show you again. It's inside of the mean but it's outside of this section. Remember, I set the section to 16 pixels. That's why I'm bringing that up. So it actually lives here at outside of the article.
Lewis Benson: So in order to determine the pixels on this button what the font size is we have to first determine. What is the font size of our mean? So if I look at my styles again, what would the font size of the main be?
Iris Coats: I,
Lewis Benson: This might affect it here though.
Lewis Benson: Let's take a look and see what it looks like.
Lewis Benson: So it is 20. and I wasn't actually a hundred percent sure if using an em would actually affect the font size. This is one of those tricky ones where sometimes the font size is inherit other times they don't so you just kind of have to play with it. But yes, it is 20 pixels on the font size of the button. So where this comes in handy now? Is I have to click it because it says click Sorry. what were this comes in handy is with padding. So whenever you change your default font size.
Lewis Benson: it did go to 80, sorry about that so that one did inherit I had that typed in That everyone see that mistake. I made there. I originally had this as font instead of font size, so our body font is taking effect on that.
Lewis Benson: There we have 80 pixels. But again, I wanted to show you where this is useful. I'm going to switch just to one am. and now this would be let's take a look 40 pixels. per one em
Lewis Benson: I'm sorry if this is confusing for you, but if I put padding in our em. And we're going to say one em of padding, which is how many pixels.
Ryan Arnold: forty pixels
Lewis Benson: Yep, So we have that 40 pixels of padding. And if I could get this to scale, which I don't know if I can crush the button, but if I were to change the default route font size on my browser, it would actually scale this button with that. It would actually scale my padding to the new font size. But if I did it with Rems, it's going to maintain the same amount of padding even with the different font size. So it could cause the text to encroach on the border a little bit. And this is one of the few use cases for the em. Is whenever you have padding around a font size that's using an REM. So hopefully, that makes sense.
Lewis Benson: If it doesn't, it's not a big deal. It's not. This is one of those little niche things, where the more you practice with it, the more the stuff will start to make sense, but I did want to show this. so we can understand the differences between em. REM. Pixels. And there are a few other units we can use.
Lewis Benson: But these are The main typography font sizes that you would go with. Does anyone have any questions about any of this? And I do apologize about that, where I had that type of there.
Lewis Benson: So hopefully that didn't confuse anybody. Confused me a little bit. But yes, because the four rem on the body is affecting the button here.
00:50:00
Lewis Benson: Okay, so yeah, those are our main typography units. Yep.
Umar Z: one thing please so if we take this button font size all the way up right under the AC ml then it's gonna take reference from 10 font size. I mean
Lewis Benson: If I were to remove this here. You mean?
Umar Z: No, just take it one step up and put it right under HTML because it takes preference in descending order, right?
Lewis Benson: That's a great question. I've actually never tested this before. It seems that still sees this here. Let me affect this. I'll set that to nine REM. And it does I believe it's because it's rendering the page first it is calculating all these values Before it actually applies. So for the cascading is what you were referring to where if something's near the bottom then it's going to overwrite what's above it. It looks like. Yeah, I think it calculated. the body before it calculated the button even though this is written above the body.
Lewis Benson: I still think it calculated the body first whenever it's reading the HTML specifically so it'll go down the line in the elements. It'll say what's the body and then it goes into the CSS? It scales. I'm not a hundred percent sure on this. I'm just kind of speculating right now because I've actually never had that question before that is really interesting. You'll notice some stuff like that, too. Whenever we get into JavaScript where it's supposed to be reading from top to bottom but there's times where things on the bottom are being read and you can use them on the top. There's some particular use cases for that later on. Yeah, that's a great point. I'm glad you actually brought that up. that goes there. Let me put the button back down so that it's in the correct order.
Lewis Benson: But yeah, so Even if it's above it. It's still references. Whatever font size you place on it. If we wanted it to be 10, we'd have to remove it off the body. Or instead of using S. We would have to use r e M's. And if I put an REM there instead now, it's going to be based off of the HTML. And now we have our 10.
Lewis Benson: I'd say more often than not I'm using Rems instead of S. I rarely use the M's unless it's for the put padding on something like a button where the content of the element is text. And the font size is going to affect more than just on the element and that's kind of a more advanced thing that you I've kind of pick up on as you break your site and what I mean is whenever you build a web application you're going to want to test it and try to break it. So. If I go in here, you can see how I'm zoomed way in. This might not be idea The way this looks right. Now this is all hanging off that we don't have our background color. I'm technically breaking the site right now and you want your web applications to be able to handle situations like this. You don't want them to break ever. So if you're zoomed in you want to be able to handle that situation?
Lewis Benson: And that's where this tool here comes in handy where I can hit mobile s so we can see all that breaks. So I'd want to design this site to handle that and we'll get into how to do that. I think Wednesday or Thursday. We'll start on what are called media queries. Which is basically conditional CSS. And what I mean by that is if you're on a in this case, here 320 pixels wide, then you'll apply styles A. But if you're on a screen size of 900, pixels and you'll apply styles b, if that kind of helps clear up what I mean by that. And that's more of an advanced thing that we'll get into. it's really cool. And don't worry, there are tools to help with the media queries. So I'll show that when we get there.
Lewis Benson: Okay, so I want to go over a few other topography things. One of you might see, let me get out of this Dev tools here, so we're One thing you might notice is something called textaline and maybe you've tried to use this already. so, I'm gonna go to my main and I'm gonna go to my header. I'm gonna say text align center. Does anyone know what this is going to do?
00:55:00
Ryan Arnold: It's going to move the text in the header to the center of the page or the center of the container.
Lewis Benson: Right. Why did it move it to here?
Lewis Benson: So It's to the center of the container. if that helps with the y,
Lewis Benson: so what I mean by that, if you're not quite following what I just said there, because that's kind of a weird thing to say, what I mean by the center of the container is Whenever we look at the header, this H1 is going the full width of the page right now. So that's naturally going to be centered on the page. But if I make my header, Width. Of 50. I'm gonna go VW, Does anyone know what VW stands for?
Lewis Benson: So the VW is view width and this is referring to my monitor size, the width of my monitor. So what I'm telling the header to be is 50% of my monitor So let me take a look at that. And now notice this text is no longer in the middle of the page. But the text is in the middle of the blue see how it's not pushed all the way over to the left. And that's because It's just the element isn The text is centered within the element and I hope that clears up what I mean by that. So does anyone know how I could center element this with the 50% width?
Lewis Benson: Also notice when I change my screen size here my view width on this bar at the edge here is actually considered the edge of my screen. So it's actually shrinking that down.
Lewis Benson: This is what we call a fluid design. So if I wanted the center what I could do is I think I'd have to do it in the header since it's taking up 50% width. I could say margin. Auto let's take a look. So whenever you set margin to Auto on something that is supposed to be a block element. But it doesn't take up the full width. It will actually take the remaining space and divide it evenly to actually Center it so it's kind of a cool little trick there. And this only works because the header is set to Display Block. If this was an inline element, it wouldn't know what to do with it. So this way, it can divide up the remaining space. With the margin auto.
Lewis Benson: So now we have a highlighted h1, we have a nice button there.
Lewis Benson: And so that's the So we have a few other options with text align, you've probably could guess some of these But here I could do center, I can Left. And start some of these might sound like the same and in a way they kind of are the same. If we do justify see what that did. It moves it over to the left?
Lewis Benson: If we do Moves it over to the right.
Lewis Benson: And those are probably the main ones you would use and then you also have right and left if you wanted to use those instead. Because you could technically reverse the element to where the start and the end or on opposite ends. That's something that we'll get into more. When we talk about flexbox and you can actually flip your elements around using CSS and then your start becomes your finished, Basically, if that makes sense, it's a weird concept, but it's a valid. that could be useful if you have a list of items and you want to sort them from ascending to descending you can do that with S. By just reversing the elements.
Lewis Benson: So it could be a use case there for you. We talked about font family yesterday.
Lewis Benson: Let's talk about line height. Does anyone know what line height is? I'll put that on my paragraph.
Lewis Benson: So we have all these different units in here what I'm gathering just looking at this is wanting a normal. Number and unit. So I see Zero pixels here zero PT. I see dvw this means Dynamic view with there's no kinds of different units in here the pick from but this is telling me that we actually want a value. So let's put zero and see what that does. We just lost all of our line height now everything's on top of each other. Let's set this to 20 pixels. And we can see that it's still kind of stacking on top of each other. I'm not sure what the default line height is. It's probably around 50.
01:00:00
Lewis Benson: I'm gonna set it to a hundred. And this is where you can get this kind of interesting double spaced Formats. And you might have a use for this maybe in a hero image where you don't want your text pushed up against each other, or you're just trying to take up more space with your content, but line, height is a very useful tool. You can leverage this to do, some other cool stuff. Where you can manipulate your content where you have, maybe some blank lines, that you're pushing things down, if you don't want to apply padding, things like that. So it is one to keep in mind. Let me take a look at Mdn online height.
Lewis Benson: And we're gonna take our break here shortly. Just want to check and see what kind of units, they have here. So normal is the default. And it looks like we can also just put two 2.5 and two would double the line height 2.5 is two and a half spaces. We have our em unit there 150% So this would be 50% increase. I believe that you should be 1.5.
Lewis Benson: Yeah, those are the same. And then 32 pixels.
Lewis Benson: so there's not too much about this here. We have our Global values whenever you see this inherit. This is a property you can use if your parent element has something already applied to it. Then you can say line height inherit and it will look at the parent element and it will grab the value that's already set there so that could be useful for you.
Lewis Benson: You can revert to reset it. But don't forget to leverage your documentation if you're not a hundred percent sure on how one of these work.
Lewis Benson: I was hoping they had with the actual default was.
Lewis Benson: In pixels, so I'm not guessing at it.
Lewis Benson: But yeah, we can just use that line height to Get Double spaced. And that has a pretty nice look to it there as well. Does anyone have any questions about any of these topography type of properties? Yes, Omar
Umar Z: Yeah so I'm concerned about font size so let's hope we say 12 pixels or Same size. why we use 12 pixels here in this documentation instead of 12 points?
Lewis Benson: so the pixels have to do more with your display type and the points are More of a set size. And I believe a point is one was a 170, second of an inch or something like that. And a pixel they're slightly different. I think it's 196th of an inch and 170. Second Let me double check that. one point versus one PX but the reason we use pixels mainly is because it's something that the browsers can understand. Yeah that's 172nd and 196th of an inch so they are slightly different But we use the pixels because that's what the browsers are reading and this pixels you could use points if you want, but it is widely understood as pixels.
Lewis Benson: as points or sorry points aren't as widely understood as pixels. So I mean to say, Especially from a designer standpoint. You might receive instructions on how to build a site and everything's going to be in pixels. So hopefully that answers that question.
Umar Z: Yeah, now that I see even the size and all the same, there's a difference between it's 196 of an inch, whatever it is. So it's a size is not the same. Exactly.
01:05:00
Lewis Benson: Yeah, it's very slightly different, but I don't think your eye could tell them apart if they were side by side, unless you were really zoomed in on or something. Because that's a very subtle difference.
Lewis Benson: Okay, let's take our 10 minute break. and then when we get back, I want to show you how to import some Google fonts. That's a really interesting topic there. And we'll also get into some pseudo classes. And we'll talk about some more width and height Concepts. All right, so I'll see you in 10 minutes.
01:15:00
Lewis Benson: Okay, welcome back everybody.
Lewis Benson: All right, so starting off in the second half now. I want to talk about Google fonts before I do did anyone remember the site that I was on yesterday that showed. The percentage of CSS fonts that are available for the operating systems.
Lewis Benson: Bring that up real quick. It was the CSS font stack.
Lewis Benson: So we click on this we can see all these different fonts. that for example, this Geneva font. I don't have access to on Windows. But there is a way that I can use these fonts and it can also be accessible for everybody else as well. And I'm going to show that now. And this is using Google fonts. There are other fonts out there that you can use, Google fonts is free. So, it's a really good source for finding new fonts, So, just type in Google Fonts. And it's our top result, Fonts.google.com. And it's already giving us some options here. There should be a way to browse.
Lewis Benson: Let me zoom out. Maybe that's what Normally, I got these cards. They must have changed the other site. Looks like a little bit.
Iris Coats: Research fonts at the tops of juiced.
Lewis Benson: I'm sorry, what was that?
Iris Coats: That there were searched fonts. Is that what you're looking for?
Lewis Benson: Now they normally had these instead of being in a list like this, they had them in cards so that you could view more at a time than this list.
Iris Coats: Yeah. I would.
Lewis Benson: So it looks like they changed their page a little bit and that's okay. We can still go with this. If I look here though, we have this Geneva font. I want to search for that.
Lewis Benson: And we don't have a result. Its fortunate. That means it's not available on Google. But what if we wanted to we could find something similar to that so if I actually on It actually zooming in that well.
Lewis Benson: Where's that Geneva? We could find something very similar to Geneva. Just looking through these and using the filters here. We can see that Geneva is a Sans serif font. So we'll click Sans serif. What else is it? It's kind of mono. We could click the monospace. that maybe not let's try display. I got a Halloween looking font there. let's grab this one. This is probably something that's not available on any operating system. It's called nosfer. Let me see if that's even listed here.
Lewis Benson: Yeah, it's not even listed in this site. So this is the one we're going to grab. So if I click on it. We have some options. so
Lewis Benson: this would only has regular 400. That means we don't have a bold font available. This is the only one available, but I'm going to go ahead and add this. And then if we look on the right here, it popped up. It's kind of a cart. whenever you're shopping it gives you this little side thing over here, which This is the cart this hide selected families. So we have a couple ways we can do this. I this is if you were going to import it into CSS, and this is if we're going to import it into HTML. I'm just going to leave it on the default importing into HTML. And then I'm going to click this copy button here. This one is valido. You can use this you just gotta leave off the style. Elements, you can put that right in your CSS file. And actually I'll show you both ways so you can decide which way you prefer.
01:20:00
Lewis Benson: So let's go into my HTML. And I'm going to go underneath of my current style sheet. and the reason for that Is because I want my style sheet to load first and then I want to start loading my fonts.
Lewis Benson: Okay, so we have our stylesheet. And this is everything they just came from Google. That's where I got that from and I'll show that again. And I click this copy button. And this is the font that was included. Now I'm going to change my header to use the new font.
Lewis Benson: So if I make a new line in here and I need to go back to the Google and we actually have the CSS roles to apply here. So I'm just gonna click this copy button for that and it's telling me font family is I don't know if you can read as very small print. I'm sorry about that, but there we go. As font family nosfer and it also says sam-serif so it'll fall back to a sans-serif. If for some reason this doesn't load but it should load for everybody now because This will be downloaded to your browser when you visit the page temporarily. So let's click here. I'm going to paste that in. And then let's see if we got results. And we have that new font.
Lewis Benson: Yes, Ryan.
Ryan Arnold: can you show where you pasted that first bit of code, the links
Lewis Benson: Yeah, I actually pasted it directly underneath of my CSS sheet. So inside of my head. The Three Links I put them just right underneath of this link.
Ryan Arnold: Okay, thank you.
Lewis Benson: Yeah, and you could put them above it if you want. I always put My primary style sheet first and then I put everything extra afterwards. I've found the least amount of bugs doing it that way. But you technically could put these anywhere you wanted in a file and again, I've seen some people actually put them down here for some reason. They think that's a good place for them. It'll still work the same. But typically you put all of your links in the head. And I'll put that back so that's in the right spot.
Lewis Benson: So I don't actually know how these actually work behind the scenes under the hood. I like it. I see that it's using this Google font API. It looks like it's our connecting to it. And then it's downloading their style sheet with the far already installed on it. So
Lewis Benson: It just works and that's good enough for me. You put in the font family you put in the font that you go from Google. So I'm gonna go ahead and grab another one and I'm gonna show you one that has multiple. Font weights and we haven't really got into font weight yet. So this would be a good opportunity for that. Let's go back to our fonts.
Lewis Benson: We'll go with something that looks kind of professional easy to read. Let's see we got to do our filters We'll stick with Sans serif we don't want to use handwriting. I'll just show you some of those look like just so you can see that. Here's some different handwriting fonts. You can pick from but we're gonna go with monospace. And I'm gonna go this some type of mono. So when I click on this. And I scroll down now we can see we have these different font weights. We also have an italic version of available. So that's another thing with that header that I put on there. It didn't have italic. If you're not planning on using italic. You're not planning on using bold or anything like that. Then don't apply them because it's gonna hurt to Performance of your page because it has to download those so only get the ones you're actually going to be applying.
Lewis Benson: So regular is the non-bold standard font. We're going to skip metallic for now. We'll get regular bold 700 is the font weight anytime. You have a font weight of 700 that's considered bold anything above that is just kind of like an extra bold. I believe you can find fault weights up to 900 on some fonts so you can get really thick looking text. And then here we have the different available fonts. And then it also shows some samples of what this stuff looks like for what we have currently selected. So let's open up our little drawer here and then we can see that we selected regular 400 and bold 700 and I would copy and paste these directly into the head. I'm going to do this real quick and I want to show you how to do it with the CSS.
01:25:00
Lewis Benson: So I would just place these right here. Notice, these are the exact same as the ones above. So I could leave these off. But it doesn't hurt to have them you can just leave them there. It's not gonna hurt anything. But if you wanted to exclude them just so you're page a little planner you could just do this. And you'll have the same results because they're already included up here. but I always just copy and paste everything, it gives me I'm just in case But I said I wanted to show you how to do this with just CSS. so, I'm actually going to remove all of these And we're going to go into the CSS now, and I'm going to go above the HTML. Want to go to the whole way to the top. And I'm going to go to import.
Lewis Benson: And you could just hit this copy button but you don't want these style elements, it also includes those. So I'm just kind of select in between the style elements and copy that.
Lewis Benson: And then I'm just going to paste that right there at the top of my file. So we have this at import and then a URL and it goes to that API. And that tells it which font it says we're getting the 700 so technically you could just type this end manually and get this every time you don't actually have to go to Google Fonts to download it. So if You could have a text file on your machine locally somewhere and just save all of these import files. And you'll be able to import your favorite fonts, very quickly, that way without having to actually revisit the page every time. So that is an option. So I'm going to apply this to my paragraph elements So again, we'll have to take a look at the CSS rules. And it has both of them in here because I have the nosopher as well. So, let me actually remove. nosfer from here just so that we only have
Lewis Benson: this font family some type of mono in my coffee string here. So whenever all I did was I went up to the top and just removed that extra one. Now I could paste that right here. And let's take a look at. And there we have our new font. because this has bold available I am able to make a section of this bold and I'm going to use a span to do that. so that's a good. thing to bring up to So, I believe I showed you this in the first week where you could say strong. And you could put a piece of text in here.
Lewis Benson: And then we get the piece of text as bold. You probably shouldn't do that. Unless you want to actually add extra emphasis an example of that could be a warning. maybe you have an aside right here and then inside that aside you could say. strong
Lewis Benson: this site me pause headaches something like that. This is a good use case for strong because you're bringing attention to a possible hazard. and we can't even read that because it's
Lewis Benson: if I zoom way and we can see it.
Lewis Benson: that would be a use case for the strong Museum. Yeah, this is a bit much.
Lewis Benson: So instead of a strong I'm actually going to put a spam.
Lewis Benson: And I'm going to give this span a class. And I'm just going to call the class bold. This is a pretty common way to get around the problem with not using strongs because you don't always want to bring special attention to something, just because it's bold, you may just want to have it to be pulled text. So in this case, I'm going to say I'm actually gonna put this near the top, we're gonna go under the body but above the header.
Lewis Benson: and the reason I'm doing this is because this is going to be a reusable class that I could apply anywhere throughout my file, I don't want to go below or above my body because this is the root, but this is also A pretty close to that. Let me set this back to two so that's not as obnoxious out there. And then I'm going to use font weight. And does anyone remember the font wait for bold? What the number value of that is?
01:30:00
Daniel Perez: the value
Lewis Benson: Yeah. 700 you could also do is just set this to 900.
Lewis Benson: And it'll work the same. What it will do is it'll go to whatever one it has, that's the highest. So if it doesn't have anything above $400 downloaded, then it's just going to set up the 400 if I set it to 900. And the highest it has downloaded a 700, it'll set it to 700, but if you do have a higher font weight downloaded, it will apply the higher one and I might make it hard to read. So, I'm going to use 700 for this. so though it will default to the highest that can get to. Okay, so I have that applied. Let's take a look. You can zoom out. This is a little bit more manageable now. And where did I put that span that I apply that? Should be this one here.
Lewis Benson: We have the class bold. And I called it strong. It should be bold. There we go.
Lewis Benson: How did you see how I used my tools to see what was going on there? I looked at my class name here inside of the elements. And I seen it this says bold and then I looked inside of here and seen that that said strong. That's how I was able to determine where that little bug was.
Lewis Benson: So yeah, now we have a span which is an inline element that allows us to select a single piece multiple pieces of text without breaking the paragraph apart. And I applied a class called bold. And then in my CSS. I selected the class called bold and I applied to font wait to 700. And now I can just start putting random bold throughout my paragraphs or anywhere in here. So, if I wanted to put bold on This which it won't work because the Font, I have downloaded right now. Doesn't have it available. But, I'll end up changing this to one that will work. And then we will just say class bold, and now we have bold text on the word life.
Lewis Benson: And we have a space there and a space there. Because these need a space in between otherwise, this is all one word. Let's take a look at that, make sure that that still looks good. And then I'm gonna switch this font out with just something different. I just to show you another example of how to use Google fonts to find what you're looking for this time, I'm going to use a handwriting font So, we'll go to filters.
Lewis Benson: Handwriting.
Lewis Benson: And what does this cursive font?
Lewis Benson: Let me clear out what I currently have in here.
Lewis Benson: And then I'm going to add this one. So we'll just do regular. And I'm going to do bold too because I added that class. And I'm going to add import. And we'll just select those.
Lewis Benson: I'll put that at the top of my CSS again, you can use whichever way you prefer if to The links you can copy those into here. I'll show that again. There's come from right here. Those three links or you can use the add import and then grab everything between the two Style Elements. It has the same performance. It's just a matter of how you organize your code. I personally prefer putting them in my CSS because it just makes more sense to me to have my topography all in one place instead of searching my index trying to find these links and then also if I have my links Inside of my index. I might have to start including these inside of multiple files. And I don't really want to have to go through all that. So I just put them in my CSS.
Lewis Benson: And now we have our font family on the header. I'm going to change that to whatever. It tells me to use here. Dancing script and then it will default to any cursive. If it can't find it.
Lewis Benson: So, we'll place that in. And this is actually a really important, use case for the fallback. Because if this goes down, or if they remove it from their database, you need it to default back to something similar to what you currently have. So make sure you always have your fall back there. Because these imports could fail.
01:35:00
Lewis Benson: And let's take a look at our demo. And here It's a lot smaller now. Let me increase that. Font size. Also, I want to make sure that Class bold. On life, so that should be bold. I think it is, but it's really small. So, I can't tell I'll go.
Lewis Benson: Font size. For rem.
Lewis Benson: Yeah, I can't actually tell if I bold or not.
Lewis Benson: but it says that I can look inside of my styles here and it looks like it's not
Lewis Benson: that makes sense. So I applied The old class to my H1, but by default h1s are already bold.
Lewis Benson: So, I'm actually gonna change that real quick.
Lewis Benson: And I'll do. Font weight. 400 by default.
Lewis Benson: And if we look at our It's actually getting crossed out.
Lewis Benson: I think that's because I'm There we go. so, since I have a font way to bold coming in still
Lewis Benson: It doesn't look like mine applied. because I put it on the header. Not the H1. So it's going to default to bold. Still, it's not going to inherit that. So I need to actually select the H1 and say font. Wait, 400 to make it not bold by default. And now we can see that's crossed out and our font weight as where's that style sheet?
Lewis Benson: I don't have it selected.
Lewis Benson: But we can see that it's actually a little thicker. We zoom in if it makes it a little more clear. So that did apply and those are some of the things that we'll run into. Unless you're using a reset, and that gives us a good. Transition into that topic. So does anyone know what a CSS reset is, or what would be useful if anyone heard of that?
Lewis Benson: It's also referred to as a normalizer.
Lewis Benson: And it's something I mentioned once before. Basically, what we want to do is search for CSS reset.
Lewis Benson: And we have this tools reset CSS. So if we look in here we have this little code block here. That's already filled out for us. And it also has a comment here at the top. Make sure you whenever you use their code you leave this because this is not your code. anytime you copy. Somebody else's code. You want to have their attribution? So that's how they wanted this to be. So we're going to leave the comment at the top. And I'll just do a quick demonstration on how to set up a CSS reset. So all you do is you search for CSS reset and that's not the only one out there. Here's another one available and they actually have a little way to copy here. Let's see we have another one here. And you can come in here and just copy everything out here. This one even has some media queries added in so it's a little bit more advanced.
Lewis Benson: This one's on a dot EU site
Lewis Benson: So we have lots of options for resets and I don't actually see all they have a here it This one's through npm. I'd have to download the file in order to see it. Maybe I can get to their GitHub. Yeah.
Lewis Benson: So on their GitHub, they have a file here called normalized.css and then in here I can get access to it all that way. If you're not familiar with Basically GitHub is a place to store folders and I'm gonna go real high level with the definition of what github's used for right now. So basically you create a folder on this cloud and then within that folder you just put all of your files. So when I came into here the reason I knew where it was just because I'm looking for a CSS file. So I just kind of scanned through these until I seen one called something. in this case normalized.css. And that's one of the two names that you would call your reset. So if you ever get on a GitHub site. And here's a pretty good resource. their readme explains how to use all of this. But if you're not familiar with everything on here,
01:40:00
Lewis Benson: you can just look for the files that you need in this case. It was normalized.css. But I'm going to go with the top link that we got on the Google search. Let me go back to that. And we're just going to use this one here. This one's a pretty simple one. We can see some of these styles that I was using before collapse border spacing zero and it just sets everything to a default value. And you might think when you first apply this that it's creating more work for you. But actually it's going to save your work. So we're going to create a new file in here. I'm going to call it reset dot CSS. So now we have two CSS files. And I'm just going to paste that in.
Lewis Benson: And I formatted it and it's just a lot of stuff being selected in here at once and then we make sure I keep our attribution here at the top as a comment. Does anyone have any questions about how I Created the file or paste it on the other end.
Lewis Benson: So I showed lots of different ways to do it. I'll just review one real quick here how you would do this? So we're going to Google search S And the top length CSS tools, we come in here and we just copy all of this code. And then we create a new file called css and paste that code in. That's all there is to it. Now, I'm going to import that into my Index.css. This part is very important. it has to be the very first style sheet. That's ed. It has to go before your styles.css. Can anyone tell me why?
Iris Coats: Doesn't take over the whole. Formatting everything in the page that you're doing. Anything else you add?
Lewis Benson: Exactly.
Iris Coats: Afterwards will do your page.
Lewis Benson: You're So as you said, if I have the second Then anything I put inside of Styles.css will be overridden by the reset. And I'm going to show you again real quick. What some of the stuff's doing in here. so, let's look at There should be an here. This H1 is All of these are selected, simultaneously. They just put a comma there. So that they can select them at the same time. It's just a shortcut for that. So all of the heading s the element selected. Let's take a look and see what they actually applied here. They said margin zero padding zero border zero font size 100% font inherit vertical line Baseline. that means Any Styles, I apply outside of this.
Lewis Benson: Are going to not apply. So if I try to add margin to my paragraphs if I try to add margin to my nav, it's just going to get set back to zero if this is not first in my links, so that's really important. We can see there's some other styles down here. They're setting the list style To None on our uls and O L's so it gets rid of the bullets in the numbering. They're setting the block quotes to zero on the quotes. I don't know if you've messed with that Q element, but that will actually add a little bit of styling there. But yeah, everything is just kind of being set to nothing. Let me show you what that looks like with what I currently have.
Lewis Benson: And it's not too obvious. What happened here? We can see that this got a little bit smaller. But one thing you might notice is everything's tightened out of the edges of the page. This is all the way to the top. There's no empty space between that and if you remember back to week one when I tried to create a little navbar and I had that little bit of space at the top a reset solves that because it padding all that extra margin. And it gets rid of everything on the side. So I no longer have that margin on the sides. but I do want to show you a side effect. This is where it might feel like. We're creating more work. Let's go to our second dot HTML.
Lewis Benson: Okay, and on our second HTML? I'm going to create a bunch of headings. H1
01:45:00
Lewis Benson: I'm just going to copy these down.
Lewis Benson: H2 H3
Lewis Benson: for H5. And each six.
Lewis Benson: And let's take a look at that. So notice how small they are.
Lewis Benson: That's because the reset is setting everything back. To a 100% font size. So it's going to be based off of the root font size. Now,
Lewis Benson: so this is where it might feel like we're creating more work because our headings are no longer. Large by default. So normally remember the H1 was really big and it's really clear that that's a heading. Now it's just creating it as a semantic container similar to a section, how your section doesn't have any predefined styles with a reset. Neither does your H1 I still seems to have the bold applaud to it. You can see that on the H2 h3, we removed it on the H1 earlier. So it's no longer being applied, some resets will get rid of that as well. So, whatever styles are applied our styles that you applied personally, not things that to brows are applied. And that's the idea behind a normalizer or a reset is that you're in full control of how everything looks? The browser has no say in anything.
Lewis Benson: Does anyone have any questions about that reset?
Lewis Benson: And as you look through this you don't have to fully understand everything you see here, but if you do have any questions about any of this. You can always refer to mdn such as vertical align. Let's take a look at see what that says. if you ever run into a property, you don't know just look for it on mdn. So here's our vertical sub and text line and I believe this is referring to the kind of the line height where this is going to be. Up and down on the line height.
Lewis Benson: Yeah, and it's containing box. It's going to move it up and down.
Lewis Benson: and that's all you have to do. If you're not sure about any properties maybe This is actually setting everything to inherit the font size from its parent. That's a nice little touch too. So we'll pass down things from your HTML. And yeah, that's the reset.
Lewis Benson: So if there's no questions about that, I do advise using this it's not a requirement for your Labs or your workshops to use a reset.css, but I do on your own just putting this in here so that it's a lot easier to style. It's one of those things where it will save you time in the long run, even though you're having to apply more Styles because you might be relying on some of the default browser Styles already and you'll have to put those back in again. If you wanted things to be laid out the way that it is by default. So that might seem like a little bit of work up front. But I promise you it'll save you work in the long run. Because you'll run into bugs so many times because of the browser's default stuff.
Lewis Benson: So this let me recheck my notes make sure I hit everything that I needed to for that.
Lewis Benson: All So I want to go into the pseudo classes now. Specifically, I want to talk about hover. So, let me find This is my index. We have this big button that says, Click Me. Let's take a look at that on the demo. That's on At HTML. There's my Click Me button and notice When I hover the button, it gets a little darker. Everybody see that. And that's actually the hover pseudo class. So let's actually select that and take a look at it.
Lewis Benson: So we have a lot of default styles already on here. These are all pre-applied by the browser and notice, our resets, not getting rid of all of these. It's just getting rid of the stuff that's actually gonna cause issues down the road.
01:50:00
Lewis Benson: I don't see the hover in here.
Lewis Benson: and that's okay, we can still Bring that up. Yeah, it doesn't show it inside of our Dev tools.
Lewis Benson: It's unfortunately I actually thought it would.
Lewis Benson: But we can show that inside of the CSS now. So I'm going to go to the bottom. So here's our button element. If I select my button again. And I press a colon. This is going to start applying pseudo classes. And we have a whole bunch of here with double colons. We have before a Content. These are some of the common ones you might see These will actually generate things on your page. So if you have an after pseudo element, it will create a second clone of that element. And then it'll just show up as an after that's not something I'm going to get into right now, but what we're looking for. Is hover and here's some other ones too. it has I believe there's also a knot. Yep. I'm not.
Lewis Benson: I'm not selector so you could say that doesn't have a class of mold so you can say button not bold. But again, we're looking for hover.
Lewis Benson: So once you have hover selected, whatever styles you put in, here are only applied whenever your mouse is hovering that element. And I have it on button right now, so let's do background color. And we'll see that take effect. so when I hover the click me, it turns blue and that's happening as soon as I hover it. A lot of times, you'll see the cursor turns into a pointer whenever you hover a button and I'll show you how to apply that. So you just type cursor and look at that. It's already given me. it knows what I want cursor pointer. And then I hover it and I get that little hand telling me I can click on it.
Lewis Benson: I'm going to show you something else with this. It doesn't matter. What styles you apply. They always get applied on hover. So if I change the font size to 10. Rem. Let's see what that does.
Lewis Benson: And it gets really big. I notice. The padding is growing too. Can somebody tell me why the padding would be growing?
Iris Coats: because it's part of the button between
Lewis Benson: Yeah, it is part of the button. Let me select the button.
Lewis Benson: I already have it selected. Where's my box model?
Lewis Benson: I lost that's over here.
Lewis Benson: Yes. Ryan
Ryan Arnold: Could you show just one more time, how to make it the cursor, change to the pointer when you hover? I didn't quite catch that. I was writing.
Lewis Benson: Yeah, you just type in cursor and you should get the auto complete for pointer. Yep. So the reason my padding is expanding with My font size. I have it set the 10 rem, so that's going to set it to 10 times Which my root is set to 10. So that'll be a hundred pixel font size. But if we look up here my padding is set to one em. Which remember the EM is referring to So my current font size for the button. would be looks like we're Sue. It's not in this section.
Lewis Benson: Let's see if I put it somewhere else to REM. So it's 20 pixels on my button currently. So my padding is 20 pixels, but when I change my font size on my button to 10 that's gonna change my pading. To be relative to this new font size. And this is that example I was talking about where if the user changes the size of the default font size you want that to scale with it? Let's see what happens if I set this to r e M's.
Lewis Benson: how that doesn't expand. I'm losing space now between the C. And the edge of the button and this exclamation points almost touching the edge now. I'm going to switch that back to em.
01:55:00
Lewis Benson: And watch that scale. so, we're gaining padding because the fonts growing So, that's a really useful. Example. of when you would use em, instead of if you want your padding to grow with your font, You might not always want that at night, not be behavior. That is. Useful every time for you, but it does have a use case here.
Lewis Benson: Okay, so this isn't the best looking button. I'm going to remove the font size here. I'm actually going to increase the font size here, so it's a little bit easier to see. There we go. And it still does that little blue hover? I'm going to put a border radius on this.
Lewis Benson: and the cool thing with border radius is you put in each Of the border and that'll make sense here in a second. I'm going to say five pixels. Zero zero zero.
Lewis Benson: So what did that do? Let's zoom in on that. Maybe I should make that a little bit more. So, I don't know if you can see that this corner is now Let me go to 50 pixels. So it's more clear. So, there We said make this corner 50 pixels. So I did 50 pixels and then this corner was This corner was zero and this corner was zero. So let's change this one to be 50 pixels. And we can see that that transformed and we refreshed when I did that so scrolled me out. So now we have two corners at 50 pixels. So you kind of see how that shortcut works for setting your border radius. I have 50 pixels 00 what happens if I just put one number in here?
Lewis Benson: we get four corners all at once. So that's the same shortcut as our margin if you remember from yesterday when I showed how you can manipulate your margin on the bottom and the left by putting in four different numbers. It works the same. with the order radius All right. So those kind of extremely set this to 10 pixels. I usually use eight pixels. I'm gonna reduce this padding a little bit, too. set this to I should reuse it. And I'm going to reduce this font size a little bit more, too. There we go.
Lewis Benson: Okay, so that's still not great looking. But one thing we can do is on our hover. We can change the size of the entire button. There's a couple ways to do this. We can say scale. And we can say 1.2. And then when I hover it'll actually grow it a little bit. That kind of gives it that. All to action click me whenever you're hovering it and that's one way to do it. I'm gonna go into something a little bit. Outside of the scope but it's still just kind of a cool thing that I want to show you. And this is how you can make the button kind of hover a little bit. so we can say transform Translate and we're going to translate the y axis.
Lewis Benson: And we're going to go negative 4. And let's see what happens when I hover now. I guess like I say pixels.
Lewis Benson: so we can see that it's let me Zoom way in on that. It's moving it up for pixels. But it has that kind of weird looking behavior when I do it too and it's actually kind of hovering over top of this site may cause headaches. Whenever I do that, but you can make things move like that.
Lewis Benson: in this one, I'm gonna say transform
Lewis Benson: Translate Y. Minus 2 pixels. I just see how that responds a little differently now.
Lewis Benson: So now we're just moving it to pixels and we don't really need that. I just wanted to show you that you can place multiple movements. Across them but this is kind of the cool thing. we can say
Lewis Benson: animation no transition and I'm just going to say all that means all of these properties the cursor the transform and the background color will all be transitioned. And we're gonna do this over point three seconds. And again this is kind of a stretch goal thing. So don't worry. If you're kind of lost on this part right here, I just wanted to show you this. If you're interested and we're going to say ease in, this is the type of behavior that's going to happen when it transitions. And then if I hover that we can see that it gives it that kind of animation there.
02:00:00
Lewis Benson: So it's a pretty cool little effect. You can put on things if you want to have I'm sort of a smooth slide from where it's kind of slides up. It's changing blue, it' it's changing all kinds of stuff all happening on hover.
Lewis Benson: Does anyone have any questions about that?
Lewis Benson: So, the way this works is I'm transforming it up. And I'm translating the Y axis, minus two pixels because it's using the Y axis, it's negative to go up and it's positive to go down. It's a little weird if you think about it, but it makes sense. If you draw it out on, the little XY chart and watch how it moves, And this transition property will transition all the properties because I said to do all of the properties. So it's going to transition all of these over point, three seconds and ease in. I think it's called Bezier graph.
Lewis Benson: Busier curve.
Lewis Benson: This is it here?
Lewis Benson: This isn't the right resource, though. Here it is. So this is what it actually does. this is how these work. And you can just hit go and it shows you how these actually behave based on which ones you choose. And again, this is something that's a little bit more advanced as far as stylings go, but I do want to just kind of give you a brief high level overview on this stuff so that you can explore this type of thing. Here's our linear. And you can see how this can be compared with each one, and you can make your own custom ones as well too, and use this cubic azir property inside of your CSS. If you wanted to instead of Sorry, I went to my vs. Code instead of this ease end you can put that in there. With your own custom versions of it. So transition is used on things like hover. You can also change this I believe to click.
Lewis Benson: Focus would work I don't think click actually works Focus would be the one you need for that and this would make it. So whenever I click on the button, let me do that real quick. That's when the transitions are applied. Because now if I press tab, it should unfocus it and I click on it again. And then it's just kind of like highlighting it that way. You've probably seen that with forms where you're pressing tab to go through the different form elements. But yeah Focus can kind of give you a click effect. We're going to switch this back to hover. But again this transition property can only be used with pseudo classes like hover.
Lewis Benson: It has to have something that's going to change based on its state and this current state would be am I hovering the button or not? If I am hovering the button then I want you to transition all of these properties over 3 seconds. And again, this is a little bit more advanced and it's kind of out of the scope of today's lesson, but I know some people are definitely interested and using transitions. So I do like to introduce it now. I'm so that you can explore that because it's not something we dive too deep into the CSS In fact, we hardly scratched the surface of everything that can be done with CSS. It's actually incredible how powerful CSS is. But it's also changing.
Lewis Benson: Quite often too. So a lot of stuff that you see in the documentation could change within the next year or two some of the ways you do your selectors and stuff. So keep that in mind. This is one of those things you're always going to have to be learning. Does anyone have any questions?
Lewis Benson: Does everyone kind of understand how this hover Works? Does that make sense? I'm actually gonna just to show you. Kind of another example of it you can put this on more than just buttons, too. So you could actually put this on a peel all of our plans we can say hover.
Lewis Benson: And we'll just do something dramatic. I'm going to scale. three
Lewis Benson: just to show you that you can do this. And then whenever I hover any of the paragraph elements Everything grows huge.
02:05:00
Lewis Benson: So this can be used for a lot of different use cases.
Lewis Benson: We can do something a little less dramatic. Let's do background color here set at the gray. And then our P element highlights when you're hovering it so you could do something where you set up a bunch of spans inside of your paragraphs and you could make it so that you're just kind of hovering along with your text and you could have some sort of placeholder type.
Lewis Benson: placeholder type application where you have a span for lorem. You have a span for Epsom you have a span and each one of those would highlight the text that you're currently on. So maybe that could be useful for you. If you have some sort of blog or you can just do the line. You could highlight each line. I'm using the hover effect like that. And then we could also add a transition here as well. And I'll show you the difference between transition all. Would have transition and I'm going to transition my background color.
Lewis Benson: And going to that We'll do one second. And I'm just gonna say ease this time. I usually just pick these at random because I can never tell them apart. I don't have an eye for that.
Lewis Benson: And there we go.
Lewis Benson: and because I applied the transition to background color I could also put something else in here line height just for something dramatic. So that's a two and you'll see that happens instantly.
Lewis Benson: I just made me into a liar.
Lewis Benson: Some reason that's not applying.
Lewis Benson: Let me try a different one. We'll do the scale again.
Lewis Benson: There we go. Yeah, just to show you that the scale happens instantly. But the background color is transitioned. So I just wanted to kind of show that the difference between transitioning all and transitioning a specific Trait one thing to keep in mind is you can only have one transition on your element. You can't put two Transitions and select two things. But you can put multiple so I could also say scale here as well. I believe that's how that would. I can't remember the Syntax for multiple. it's with a comma.
Lewis Benson: So you comment separate all your different properties that way? But again, you can only have one transition. So if you needed separate times, there's actually a different solution for that and it's not transition and that is Much more complex than what we've shared so far, and I don't want to dive into that rabbit hole. So does anyone have any questions about anything that I've showed here?
Lewis Benson: Yes, Omar.
Umar Z: Yeah, so I was thinking you applied these effects to the whole paragraph right so that when somebody hovers over individual lines of this paragraph and then they change the effects, like become bored or change the background color or it's not possible because it's one paragraph and all the effects are being applied on the paragraph as a whole.
Lewis Benson: Yeah, so that's where there's a couple ways to approach that one thing you could do. And this would be kind of hacky in a way is use multiple paragraphs per line. So if I wanted this to be one line, then I would put this in a paragraph by itself. Oops, I selected too much. And then move this up. so that it's on its own line if I look at the page that line is by itself. And then the line underneath that was everything else still. So that's one way you could approach that. whoops another way would be to use spans, but the problem with spans is as my page size changes. Also we're here would be a problem because this is not two lines and it's going to highlight both of them.
Lewis Benson: You'd have to probably implement a JavaScript solution for Something that's like watching the word rap. And then applying these Styles dynamically. So I don't think you could do that purely with CSS where you have each individual line unless you did something with multiple paragraphs like this It definitely wouldn't be an easy solution.
02:10:00
Umar Z: so Yeah, so basically this is not done with the S is beyond the scope of CSS with some other Software the programs are there to help us with this thing, right?
Lewis Benson: Yeah, so you would actually write the logic out for that using JavaScript and you can have your JavaScript basically sit here and watch your HTML. So whenever things change different line numbers, it can change the whole structure of your page. Dynamically.
Lewis Benson: One example would be if you look at this navbar right here. Watch the links. I'm actually gonna change these links dynamically based on my screen size. Now the Links are gone and we have this little menu here. That was JavaScript at work. That's what did that and then if I click on this element doesn't exist until I click on that menu. That's also JavaScript at work. It's creating these elements when I click on that button and then I click it again and it goes away again. that's JavaScript listening for me to click on that. Let me drag this up. So. JavaScript can see your screen size and it can determine what to do with that.
Lewis Benson: But yeah, it is kind of outside the scope to do a perfect implementation of something like that. Let's take our 10 minute break, and then I'm going to get into the assignment. I don't want to push our time too far here. So we have time to work on today's assignment. Let me get up my timer.
Lewis Benson: And I will see you in 10 minutes.
02:20:00
Lewis Benson: Okay, welcome back everybody. So if you were following along with me today today's assignment. Should go pretty smoothly because we pretty much went over. Everything in here for the most part. This is kind of a Sandbox assignment. It's very open ended again. So it won't be too difficult to earn all the points needed for this. Basically, what you'll need to do is create your file structure. That's going to have an HTML file. And a CSS file and we're going to use the names index and styles or style if you prefer without the S. That's okay.
Lewis Benson: And inside of your index.html, you're going to have it set up like you did previously basically just put some content in there. It doesn't have to be anything specific. You can use filler text for the content just so you have something to work Generate probably five or six different HTML elements that you can Style on. Yes, Elgin.
Elgin Sharper: Last night, I heard you see that the same thing about the filler text. What do you mean by Phillips X?
Lewis Benson: lauram Epsom Yeah,…
Elgin Sharper: So we can use the law.
Lewis Benson: you can use the warm for this.
Elgin Sharper: All right. Thank you.
Lewis Benson: You can also just make up random stuff. It doesn't really matter What's going to be more important is understanding the CSS that we're working with. and one of the things about this assignment Is this Workshop is your time to experiment and try out new things? I want you to maybe leave your comfort zone a little bit and go outside of what I taught today and maybe try some new ways new layouts anything like that. That way you can explore this and try to learn because that's what this is mainly about is learning how to use these styles. So in the index We're going to use external styling. So you're going to be using a CSS. Don't use internal or inline styling. Make sure using a CSS.
Lewis Benson: External Style Sheet. So you're going to have to link that in and you're going to set the Mess with the font weight, font size width, height margin, basically use all the material we learned today. And try to style three different elements on the page in different ways. Once you have some elements generated on your HTML, I want you to experiment with the box model and what that means is change the padding, the margin change, the width and the height on things and see how that actually changes on your box model. And once you are feeling pretty comfortable with how all that works, then I need you to take a screenshot of your Dev tools. And you're going to screenshot the
02:25:00
Lewis Benson: box model. So you should know where that's at now inside of your Dev tools. And once you screenshot the box model, you can put that screenshot inside of the root of your project. So that'll be in my case. If I were going to let me go to the folders, if I go into my projects, if I were going to zip this. And submit it. I would put that screenshot inside of this folder, if that makes sense.
Lewis Benson: And that's it for the assignment. you'll basically just go over them. Let me go over the rubric real quick just so that there's no questions about how this is going to go. So, we're going to have. The file structure set up. With a minimum of three elements on your HTML.
Lewis Benson: And a screenshot of the box model, inside of the project folder, that's part of this block on the rubric as well. So, Yes, Elgin.
Elgin Sharper: All right, one more thing. my what three elements do you prefer?
Lewis Benson: It doesn't matter just as long as their elements that you can add styles to. So you could use Articles, sections. Anything we've gone over in the first week. any of those elements? That could also include the body. Is one of those elements, just a minimum of three. I would expect probably that you would use more than three to actually do experimentation. You can mess with even images. If you want an experiment on changing, their sizes and widths on whatever you're comfortable with again, feel free to step out of your comfort zone. We'll have About a half an hour to work on this assignment. and then integrated the majority of the CSS elements learned today, you don't have to put in transitions or anything like that. Mainly the topography changes, so I would expect to see
Lewis Benson: You apply some bold text somewhere. change the font size and throw in as the hover is actually not required, but go ahead and attempt the hover and see if you can get that to work again. It's not required. let me just bring my neutral quick so I can give you something a little more concrete on what we covered here.
Lewis Benson: Sorry about the delay.
Lewis Benson: or we go
Lewis Benson: other than the day two somehow. Sorry day three. So yeah ont size font weight font family throw in a text line.
Lewis Benson: And if you want to use line height you can use that too but try to get those Mainly the font weight font family and text align. That would cover the majority of the topics we covered today. And then, you can also throw in border radius. We covered that today, as As long as you have at least four things we covered. So you could do border radius with We didn't cover height, but you can put that in there. Just try to have at least four. Properties inside of your styles. So There's three.
Lewis Benson: so, the more you include the better, And then make sure you have a screenshot of your box model from your demo page for your Live Server page. Does anyone have any questions about that?
Lewis Benson: Okay, so hopefully if anyone does have any questions while you're working, feel free to ask. and if you do find you're having trouble with any particular. Properties, just go ahead and bring that up. And I can point in the right direction.
02:30:00
Iris Coats: Can you show the start of your code again,…
Lewis Benson: Yes.
Iris Coats: where you started? Creating the styles to put in your index page.
Lewis Benson: Yeah. I can.
Lewis Benson: You're talking about the styles.css.
Iris Coats: Yes.
Iris Coats: Okay, that's what I was missing.
Iris Coats: Thank you.
Lewis Benson: Yep.
02:35:00
Lewis Benson: Yes, Tracy.
TRACY JOINER: Is there anybody we can talk to during the daytime?
Lewis Benson: did you check the calendars to see who was available?
TRACY JOINER: if not, I can do that.
Lewis Benson: Yeah, I think they are available during the daytime.
TRACY JOINER: Okay, that's good to know. I'll go check it.
Lewis Benson: Yeah, just open up both links because they probably have different availabilities.
TRACY JOINER: All right. Thank you.
Lewis Benson: Yeah, no problem.
Meeting ended after 02:38:30 👋