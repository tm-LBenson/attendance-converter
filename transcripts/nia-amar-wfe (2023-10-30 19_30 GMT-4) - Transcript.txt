nia-amar-wfe (2023-10-30 19:30 GMT-4) - Transcript
Attendees
Chantrice L, Daniel Perez, Elgin Sharper, Gregory Robertson Jr, Iris Coats, Justice Miller, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Reece Renninger, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: Okay, welcome to day one of week three. We're going to be getting into bootstrap this week. And bootstrap is a powerful CSS framework. Does anyone know what a framework is does anyone heard that term before?
Krystal Jefferson: I have but I really wasn't sure exactly what it was.
Lewis Benson: Okay, that's okay. This is one of the most popular CSS Frameworks. Basically a framework is a bunch of code that somebody else wrote and it's ready for you to use but it allows you to build from it. So if you have the frame of something you can put multiple. Things on top of that frame to get different things we think about if you're in no much about Automotive, you'll have a truck frame and they can put an ambulance body on it or they can put a Truck Body on it. They could put a van body on it and it's similar to that a framework is the frame and then you can put something else on top of that in order to build out your application. and bootstrap is
Lewis Benson: CSS so we've dove into a week of CSS. So we should be pretty familiar with some of the properties and some of the things we can do with CSS. but bootstrap basically takes a lot of that work away from us somebody already wrote the CSS. We just have to add it to our HTML now. And there's a lot of different templates and things we can use let me get their documentation up. So with bootstrap, the most important thing is their documentation. You cannot use bootstrap without bootstrap documentation.
Lewis Benson: there's just so much content on their page. If you download their actual CSS file, they have over 12,000 lines of CSS, written styles that you can access. So without some sort of navigation or some sort of book to reference. There will be no way to actually Implement that in an efficient manner. But luckily they're documentation is really good. So was I searched for bootstrap and Google. And I'm going to just click on this top link where it says get bootstrap the most popular HTML CSS and JavaScript library. And that's another cool thing about bootstrap is it has JavaScript functionality built in and we don't even have to know how to use JavaScript yet because somebody else already wrote it for us. So this is what they're landing page. Looks like we're on get bootstrap.com.
Lewis Benson: And I'm going to scroll down a little bit. I'm going to show you some of the more important things they have this right here at the top this npmi bootstrap at 5.3.2. This is something that we can't use yet. We'll get into this more once we start using node.js this is for node.js it's not for the browser. So when we start working with JavaScript Frameworks, react that's when we'll start using a link like this. So just kind of ignore that if you see anything that has npm at the beginning of it just kind of ignore that for now. And we'll find the one we actually need so on your landing page. I'm going to scroll down.
Lewis Benson: And we have two options here. We have this npm install which is the same as up above. They just use an eye to shorthand it again. We have to ignore this and then they also have this gem install and again, we don't have gems so we'll have to ignore that as well over here on the right where it says include vs CDN, you can see there's an element here. I see HTML That this is how we're going to add bootstrap to our applications. We're going to use this link and if you could tell this is a lot like just a regular CSS. File that you would link into your page if we scroll over we can actually see this path leads to a bootstrap dot men dot CSS file. And a CDN stands for Content delivery Network. What this does is allows you to access a file from anywhere and the world basically.
Lewis Benson: they have CDN server set up everywhere and depending on your geographic location. It'll pick the whatever one's closest to you and it will download this file whenever somebody visits your page. It'll automatically download to their browser so that they get all the styles. So this is a really convenient way. It actually can make the application run faster. because instead of downloading it from let's say They're located in New York. If you have the CSS file being served locally from your machine or from your server, then it takes longer for them to download it from across the country like that. But using a CDN. They can access a more local version of this then where you're currently at. So this is why we want to use these cdns when possible and again, we have this rail style sheet. They have another.
00:05:00
Lewis Benson: Property on here or attribute called integrity. It looks like some sort of encryption key. This is something new that they've just added recently. I'm not sure what this is used for but whatever they have here is required. So just throw it in there and it will work and then this cross origin Anonymous it allows them to access this file from your application If you don't have this set on here, it won't allow it to download so you have to have the cross origin. And then this one down here is a script. We haven't seen this element before. But again, this is HTML. And we have an SRC equals and then another CDN link and then we can see this is a file that ends in dot JS. So, this is a Javascript file.
Lewis Benson: We don't know how to use JavaScript yet, but I do recommend including this into every project because some of the components that we're going to use on bootstrap will require JavaScript functionality. So even if we don't know which ones that is, maybe we're planning on not including any functionality and you accidentally add a component you want to make sure you have this So these are the two main things you need on their landing page is the script and this link. so if we keep scrolling down, there's a lot more information here. They start talking about SAS. This is a different version of CSS. It's actually called a preprocessor. it's kind of its own CSS language. We're not going to be using this until developer level two or three. I have to check the roadmap and I believe it's level two we introduce SAS.
Lewis Benson: don't worry about that for now. Here they have some examples on how you can change some of the build-in Styles. This is something we'll show a little bit later this week how to use this. They have a component API. They're showing how you can customize things. Again. This is something actually the API. We're not going to get into. This is more of an advanced version of it. I believe that will come and
Lewis Benson: front end level three. We'll start getting into the bootstrap utility API. But everything also on here is kind of just like their sales pitch here. So I'm going to scroll back up to the top.
Lewis Benson: And we have this link here that says read the docs. I'm going to click on that. We also have it available up here in the navbar just says It's the same link. So here's what they're documentation looks like. So they have an starter thing here A little bit of boilerplate code if you weren't using the Emet shortcut, you could copy that out of here if you wanted to. and this one here, they have this a second copy of it, but they're including the link inside of the head of their document. You see that's really long. This will actually be multiple lines whenever you put it in your vs code and they have the script. I'm going to go back to their home page and just copy the two from there just to show you where to put these. So I'm back on the landing page. I'm scrolling down to these two links. And now I'm going to open up vs code. I've already created my folder demo 10-30. So I'm going to start with creating just an index.html
Lewis Benson: So in my index.html I'm going to do my boilerplate. And this will be bootstrap.
Lewis Benson: Demo has anyone ever heard the term bootstrap before in relation to code or anything related?
Lewis Benson: So that the term is commonly used for boilerplate code or code that you repeat often. That's kind of where they got their name from is that idea? They have a lot of stuff that you would be repeating often and they wanted to make it so you would just already have everything pre done for you and you can just plug and play. And that was the idea here. All right, so in my head I want to put that link to their CSS file and it's using their CDN. from side So that's this top link here. I remember the link goes on the top and the script is going to go on the bottom. I'll show you what I mean by that. So here in the head I put the link. And when I format this should clean up a little bit. So all of my attributes are on their online. And then in my body is actually where I'm going to put the script. So I'm going to put an H1 in here first just so we have some content.
00:10:00
Lewis Benson: And at the bottom of my body it will be the last item in your body is where you put the script tag. So let me grab that out of the browser.
Lewis Benson: And I'm going to hit this copy button. And I'm copying this script here. And I'm going to paste that along 17 because that's my end of my body. It's still within the body element if I double click on body, Where we go there we can see the opening and closing and the script is contained within the body. all of my content though is going to go outside of this script and I'm going to collapse this because once We have it. We no longer need to see what's in it. And I just hit that little arrow there to collapse it. Once it's in we don't want to accidentally change anything. So It's a good approach for that. I'm going to do the same thing with the link as well. I'm going to collapse that so that it doesn't take up as much space. So those are included one nice thing about bootstrap.
Lewis Benson: it comes with a built-in reset so we don't have to worry about including a reset anymore? That's part of the bootstrap Styles right out of the box. So let's take a look at our H1 on our page and see what it looks like now.
Lewis Benson: And we can see that I'm actually in a Sans serif font, which is not something that I said to do anywhere. It's just because I told bootstrap to come in and we could see that fonts different. Let me comment down my link and I'll show you the difference between the two. Let me make this a little bit smaller so we can see the change happen live. And I'm going to comment this out. And then there is the default H1 style and there's the bootstrap H1 style. So they already start adding new styles in. I want to show you this file this bootstrap.n.css. I'll show you with their actual CSS looks like and it can be downloaded here. I got to find the link to it. They moved their stuff sometimes.
Lewis Benson: There should be a download. What was that It might be in their documentation. So let me go in there.
Lewis Benson: So here's their Quick Start.
Lewis Benson: also include separately
Lewis Benson: I'm just gonna do a quick search for it. There we go, and then I'll take me to it this way. So CSS and Jr. Someone hit download. And we'll take a see what these look like.
Lewis Benson: This is a CSS so they have multiple files in here. This top one is the one that I'm looking for and I'll show you the difference between a minified CSS and a human readable CSS.
Lewis Benson: I'm just going to hit open. So this is the bootstrap CSS file, they start by selecting the root, which would be the same as selecting HTML and they're actually declaring variables. this is how you do a variable in CSS. So if they want blue to be this color, they can type in dash blue and assign it to Blue. So there are three defining all of their colors ahead of time. This is similar to when you're selecting colors inside of vs code and it automatically populates a color but here they're actually declaring what those colors are specifically. We don't have to worry too much about that at the moment here. We can see they have some of these things called breakpoints. That's something we'll get into later this week as well. That's referring to responsive design like media queries.
Lewis Benson: Here is part of This is actually something that is you could add to any of your CSS files. It's a really good. Reset property to add I noticed this one isn't in our current reset just an optional thing. But if you're using bootstrap, you don't have to worry about it as you can see it's already included here. And I'm gonna quickly scroll to the bottom and just kind of show you how much is in this file?
Lewis Benson: So word line 3000 still going. 4,000 5,000
00:15:00
Lewis Benson: there's the bottom of the file here where I believe it's about 12,000 lines. So this one only has So we have 10,000 lines of CSS in here. All of this stuff is just done. and the way this works is you just apply whatever class you want and it applies those styles. to your page So again, this is a huge file. It's not something we really need to ever open up and look at especially when you're using a CDN. You won't actually have access to it. As far the hard file you'll just use the Remote Link and access all these styles that way. Let me show you the minified version.
Lewis Benson: And that would be this one here. So this is the exact same code but everything is compiled into one line and I just wanted to show you this so that what this is. This is not human readable. There's no way you can differentiate what's going on in this file right now. So, this is Line 6. And line 7 is the end right here. So everything's in one line. They just remove all of the empty space and you can see there's 10,000 lines of code all condensed into one line. And again, I just wanted to show you what this looks like that way here ever using the files instead of the CDN, which there will be times you'll want to use file so that you can customize or create your own themes and things like that. this is what the CDN looks like. It's not something you're going to be able to go into it at very easily. Just because everything is in one line. Does anyone have any questions so far about bootstrap?
Lewis Benson: Hopefully a lot of the stuff will start to make more sense once we actually start diving in and writing some code. I know this is a lot of stuff in here. So just don't worry about what you see in here. What matters is what's in the documentation? All right. So There's our script. Let me collapse this link.
Lewis Benson: And we'll get back into the documentation. Yes, Omar.
Umar Z: Lewis can you please just do a quick recap on these two links inserted in the index story HTML5?
Lewis Benson: Absolutely, I'll show you the two places you can find them right here is one of them. I'm in the docs right now under introduction. And you can see them here in this piece of boilerplate code. So if you wanted to instead of using the Emmett shortcut, you could copy this and paste this into your empty file. I'll show you that real quick. Copy and then we'll just delete all this out of here. And we can just paste that in and it adds a title called bootstrap demo and it adds an H1 that says hello world. And then I'll go ahead and collapse these down and I'll show you It's the location where I more commonly grab these files from whenever I'm using bootstrap. Get back into the browser and then I'm going to go back to their homepage. I'm going to delete all of this out of here and go back to get bootstrap.com. And I'm going to scroll down just a little bit.
Lewis Benson: And here, we include via CDN. This is their content delivery Network and we have the link to their CSS on the top and we have the script to their JavaScript on the bottom. And I'm going to place the link inside the head of the document and that's what I did. It's inside my head. And I'm going to put the script at the very bottom of my body. So if I have a lot of content in here, let's say I have five sections and each of those have Laura in it times two doesn't work like that. I forget how to make it so automatically populates, but if we have Lauren times five here, so we have all this content. You're always going to have your script at the bottom body. That's because you want all of your content to load.
Umar Z: Okay.
Lewis Benson: before it loads your scripts
Lewis Benson: and I had to have these collapsed in my vs code. So that doesn't take up that extra space and get kind of messy looking. So I just click this little arrow to make it smaller. But yes, you want the script at the bottom and you want your CSS Linked In The Head?
Umar Z: Okay, got it. So basically your copy pasting from there, the links you are just bringing by the copy you're pasting them here right if I'm not wrong.
Lewis Benson: Yes, 99% of the stuff you're going to do with bootstrap as copy and paste. Yeah, so their documentation is a whole bunch of just code Snippets and it kind of gives you an idea of what things look like and I'll show you a Component we'll go down to a button. This is a good place to start. So here's the code for the button and HTML. And then this is what it looks like when it's rendering and this might look a little weird right now because I'm in mode in my browser. Let me see if I can switch just a light mode. So it also goes with the current mode you're in that's interesting. I'll leave this in dark mode. And then here's the different colors. You can get with the buttons that come preached out and notice. They have a little bit of a hover effect, too. You see how the color changes when I hover those.
00:20:00
Lewis Benson: This is all pre-done. You don't have to add a hover. You don't have to even write any CSS to use this at all. And then here is the HTML that represents the above example, so Secondary, each of these correspond with what's above it.
Lewis Benson: And then these are the different default colors. So if you want this red color you use the class BTN Danger and it will apply that red color and I'm going to show this more in depth here in a little bit. I'm just kind of giving the high level overview of what this is for the moment. So they have two classes on here one is BTN. This is the default give me the round corners. Give me the one pixel solid border and give me the hover effect. And then BTN Dash info fills it in and gives it to color and I can tell that because when I scroll up here This has the class of BTN only and this is what you get. It's popping my folders open for some reason again. This is what you get here. You get a button. with no styling other than That rounded Corners in the shape of it and the amount of padding it has.
Lewis Benson: So this is the base class BTM. And then BTN primary gives it the blue color and the hover effect. And even when I click on it, you can see it changes even darker. So I'm currently just clicking on that and I don't know if you can see that or not. It's a very subtle change. But there's a little subtle changes make for a really nice detailed. And a very nice looking web page.
Lewis Benson: Here's some other buttons they have and all of these are in set to primary. They're just showing some more. Things you can do with it. This is using button tags. So we have button submit type reset.
Lewis Benson: Here's some outline buttons. And when you highlight them they give you different colors again. These are all just pre-styled components and I can just plug them into my page and I am going to show that in a minute. Let's take a look at. placeholders
Lewis Benson: so over here on the right is the placeholder. This is kind of like a spinner. If you're familiar with the idea of a spinner whenever your page is still loading and it doesn't have the content. Let's say you have an image and it's taking a while maybe three four seconds to download that image plus the text. You can set something up like this and you can see my cursor changes to a spinner. So that it shows the loading effect. And then we actually have a spanner here if I click on that.
Lewis Benson: And you've probably seen these before at some point when the page is still loading. It'll show the spinner. And then we have the span. And you can say loading whenever the spanner isn't visible as well.
Lewis Benson: So you can use this to rotate things. if you just want something rotating on your page or you can use it to Actually, load elements that are taking a while to load whenever we start getting into apis databases things like that interacting with apis, which an API is an application protocol interface what that means is your computer can go talk to another computer. For example, if you wanted to have a weather website, you're not going to Or whether data on your computer or on your website itself. There are lots of different agencies out there collecting all this weather data. And they store it in a place that you're allowed to access it and you access what's called the API?
Lewis Benson: But it can take three four seconds for your computer to retrieve that data and then during that time you can set up the spanner to load. Until it's loaded and then the spinner goes away. We'll get more into apis later. I believe that is front end level three. That's when we start to get into full stack actually, so that'll be a pretty cool change. I'll show one more component here before I start writing code. is The card element this one has a button built-in as a little heading here. So if I take a look at this we have this div. And it has to class of card on it. And then that's the outline here. That's what this border is. And then we have an image next. They're just showing a sample image with the three dots. And then they have a class of card image top.
00:25:00
Lewis Benson: So this is one of those things where you'll just have to come into the documentation because you're not going to remember all of these different class names. I would be impossible. And you'll have to kind of look at what you're looking for as far as design goes. And then you just plug and play these classes.
Lewis Benson: So let me start with a button. I'm going to put this on my page. And I'm gonna grab.
Lewis Benson: Just grab these top three here. And this is basically how bootstrap works you come into this code snippet you find what you want. That's up here and you match it up in the code and then you just copy it. And you just paste it right into your file? So this is type button. It has a class of BTN and it has a class of BTN success Our secondary and primary so we have those three buttons. Let's take a look at our browser.
Lewis Benson: There we go. I got two browser tabs open. That's why I didn't load out of the box, I have these three buttons and I'm zoomed in quite a bit. I'll notice we're all the way over to the left of the page. That's because I have it included any margin. yes Krystal.
Krystal Jefferson: Where did you go to get that again? I'm on I can't seem to find it.
Lewis Benson: to get the buttons
Lewis Benson: Are you on the documentation for the bootstrap? Did you click on Docs? So I'll just go through it real quick. I clicked on docs. I'm on get bootstrap.com. And I clicked Docs. And then I'm scrolling down and I'm looking for the heading called components. I see that's right…
Krystal Jefferson: 
Lewis Benson: And then under components I found buttons.
Lewis Benson: And then I'm going to scroll down until I see the different variants.
Lewis Benson: And then I just grabbed the first three buttons out of here. You can grab all of them…
Krystal Jefferson: Okay.
Lewis Benson: if you want to. It's just kind of playing around with it at the moment just to try to see how this stuff works. I also have a dark mode button there, but I'm already in dark mode.
Lewis Benson: Okay, so I'll go back into my code. And then I just pasted in those buttons. And all it is again. It's classes just like whenever we assign classes and I could even put more classes in here. I could say. primary Button, something like that, and then I could apply custom styles on top of this if I wanted to. There is some issues with overriding bootstrap Styles and that's something we'll get into later this week how to do that because it's not as easy as you would think. So for the moment, we have BTN. and BTM primary classes assigned we don't actually have to copy and paste the buttons If we don't want to what I can do. Is I'll do it right now. I'll say button. And then I'll just say class the most important thing about this is that we're using the correct class names this type button. Isn't necessary for this to work.
Lewis Benson: It's just adding an extra attribute to be more SEO friendly. So I'm going to say button and BTN warning.
Lewis Benson: And then I'm going to take a look at my browser.
Lewis Benson: And here's that orange button. I didn't give it any content. With the button is there so let me add that in. And I'm just going to kind of follow what they were doing and put the color as the buttons content.
Lewis Benson: And there's the warning button added. Does that make sense?
Lewis Benson: Does anyone have any questions?
Lewis Benson: And again, this is mostly copy and paste type stuff.
Iris Coats: You should.
Lewis Benson: We're going to learn how to lay out.
Lewis Benson: Yep. Go ahead.
Iris Coats: I'm sorry,…
Iris Coats: will you show that again For warning, where you inserted it?
Lewis Benson: Yeah, absolutely. So all I'm going to do is create an element and I'm gonna create a new button again. And I'm just gonna do this the way we would normally do it with plain HTML and CSS. And then once I have the button created I'm going to give this one a danger content. So I'm just creating the word danger in here because that's the color I'm gonna make it and can you call us whatever you want. I'm I'm gonna make a cancel button. And then I'm going to give it a class name.
00:30:00
Iris Coats: Okay.
Lewis Benson: So I'm going to type class as an Remember attributes go inside of the tag. And then I'm just going to type in BTN space.
Iris Coats: right
Lewis Benson: BTN hyphen Danger
Iris Coats: And that's the color. Okay.
Lewis Benson: That's the color. This is the base class. This it's kind of like the primer before you paint. And then this is the paint if that makes sense.
Iris Coats: Yeah, I understand that.
Lewis Benson: Yeah, and you can put more classes on this too. And there's other bootstrap classes we can add to this. We could have a whole string of classes and I'm going to show you that in a minute. So there is our cancel button. Yep. Okay,…
Iris Coats: Okay. Thank you.
Lewis Benson: so this is the buttons. Let's take a look at button group.
Lewis Benson: Yes, Elgin.
Elgin Sharper: Yes, I did it the copy and paste but The color is not active.
Lewis Benson: Do you have the import the link right here?
Elgin Sharper: Okay, no. No, I don't have that link.
Lewis Benson: Okay, I'll show you where to get that. I'm gonna go back to the landing page. someone get bootstrap calm I'm going to scroll down. And we include via CDN right here. It's this link here. This goes into the head of your document and then make sure you also put this script before the closing tag of your body and I'll show you in my code where that is.
Elgin Sharper: Okay.
Lewis Benson: Right here is the closing tag. And if I uncollapse that we can see the whole thing right there. And I just collapsed these so that it's easier to see what's going on in the page.
Lewis Benson: It's not actually like removing the content and it's just hiding it temporarily you can see the little three dots. They're telling me it's still there.
Lewis Benson: Yeah, no problem.
Lewis Benson: So I'm gonna open this up just a little bit we have some room. And I'm going to go back to my button group. So I'm gonna back on the landing page. I'm going to click on Docs. I'm going to scroll down to components.
Lewis Benson: So here's components and then I see buttons button group. So we have this div and it has a class of button group. It has a role of group and here's this thing called an Aria labels are very very useful tools. This is for accessibility. It works heavily with SEO and Screen readers. But as far as diving into how these work. it's a very depth topic. So normally what I do is I typically just use my semantic elements on whenever possible and it covers a lot of the stuff that Aria labels do so whenever you're not using semantic elements. And in place of semantic elements you can use an aria label.
Lewis Benson: Does anyone have any questions about that?
Lewis Benson: Do you have a question Krystal? See you unmuted.
Lewis Benson: Nope, guess not. Okay. Yes, Iris.
Iris Coats: The Aria refers to the text type, correct?
Lewis Benson: No, this is actually a whole Subject on accessibility are it's Aria labels.
Iris Coats: Okay.
Lewis Benson: I'll just bring it up briefly.
Lewis Benson: And it goes into the success ability article here on mdn. And it basically allows screen readers and…
Iris Coats: 
Lewis Benson: SEO to be able to navigate your page. But there are so many different Aria things. So we have an aria label clothes Aria hidden true. There's just so much to this topic.
Iris Coats: Okay.
Lewis Benson: It's something that would take months of learning to actually understand all of it. And it's not that important anymore. It's still In some cases, but for the most part if you're using semantic HTML, you don't have to worry about including Aria labels and all of us Aria stuff.
00:35:00
Lewis Benson: I would say though if you do want to know it if you start working in older code basis, there's a lot of videos on YouTube explaining how all of this works. But again, it's a very complicated subject and you can see on the left here. We have a whole lot of different Aria properties that there's a lot to it.
Iris Coats: Let's see. All right. Thanks.
Lewis Benson: Yeah, no problem. Again just use semantic HTML and you don't have to worry about it. So for example here I have this div. I can actually use a section and put the class button group on it. And that's what I'm going to do. So I'm gonna put a section here. And that's one of the things you'll notice about bootstrap 2 is a lot of the elements are non semantic or they're wrapped in on semantics. So you may have to update some of that stuff on your own but that's why we go over a lot of the HTML semantics first is because we want to be able to identify those types of situations. And I believe it was BTN Dash group was the class name and I spelled that wrong. And I just want to double check that before I move on. Yeah, BTN Dash group. So this is what I'm like 99% of the time looking at is the class.
Lewis Benson: But you're also want to kind of look at the structure and see how things have parent and child relationships when you're looking at bootstrap for example the card.
Lewis Benson: If we look at how this is laid out. They have a container here called With a class of card sorry and then they have a direct child of an image and they have a direct child of a div. And then this div is including heading a paragraph and a link and then this link has the button class on it so notice this isn't a button element. It's actually a link element so you can make other elements look like buttons just by adding the button class and then adding the button primary so you have your primer and your paint there again. So you could do that on a div if you wanted to you could actually have a div look like a button. So let me open that back up. And we have our button group set on this section. So I'm going to view the code on the browser.
Lewis Benson: And now everything is tied together. It gets rid of all that extra space in between it. So the buttons are now grouped does everyone see how I did that? Just by wrapping them in a section. And you can use a div if you Just use whatever elements make sense. And if you're not sure what element makes sense, if you don't really know how to describe the content then the correct element is probably a div. For example, if this isn't a nav area if you're in your nav bar, you probably want to use a nav if you're under your nav, but you're above your heading and you're not sure what to put then just use a div. That would be perfectly fine. Because if you're getting that specific with it, then it's probably not going to get much benefit out of it And that's one of those things that'll just kind of come with time the more you build it the easier it gets to figure out which semantic elements to use.
Lewis Benson: It also depends on who you're working with if you're working with Developers. That require a certain structure then just follow whatever guidelines you're given. I'm not too particular about how you structure it. As long as you're using some semantic elements to describe it such as your main at minimum have maybe an article and some sections? But you don't have to use semantic on every single piece of your page just the stuff that makes sense. Does anyone have any questions about the button group and how I got this to go together? I'm actually going to talk with us off real quick just to show the difference. Let me just comment that one line out that fixed it. So now there's space between them. They're not combined together. And then I'm going to put that back in. the class button group on the container and they're all pushed together now.
Lewis Benson: So it's pretty cool. You can do a lot with bootstrap as far as styling goes. So for anyone who loves the front end styling stuff, this is going to be a good week for you.
Lewis Benson: Okay, so there was another component I needed to show let me look my neutral quick. the containers So the containers are pretty cool I believe they would be. Under layout. Yep.
Lewis Benson: So that's the thing that the way they categorize this stuff is based on what it's used for. We have this grid you can use bootstrap Grid in place of CSS grid and it comes with preset media query so you don't even have to use media queries that will just automatically lay your page out for you. And that's something we'll get into this week as well. We have our Z index a utilities. So we have this thing here called container. And if we just read the documentation here, it says it sets a Max width at each responsive breakpoint and then down below. They actually give an example of what that looks like. So this tells you the size that it's going to be on different screen sizes based on those classes.
00:40:00
Lewis Benson: So here's our default container. And here is all of these so I'm just going to copy these Just to show you what these look like on the page and I'll probably have to apply some background colors to these.
Lewis Benson: that way we can actually see how they get laid out. So I'll place them here.
Lewis Benson: And let's take a look at the page. Yeah, so I want to put it background color on them so we can see them. Whoops. I didn't mean to alt tab.
Lewis Benson: So let's just search for background. color and this little search bar up here is a great tool if you're using bootstrap, and you're looking for something specific. There's so many tools on here. It's so hard to find everything. So we can use these as our background colors. So what I'm going to do and I said I was going to show you how to add multiple classes. This is that time. So we'll start with this one here. We just plug that in. And I'm going to look at the page now.
Lewis Benson: didn't seem to actually work what I do wrong. I put a dot There we go.
Lewis Benson: So we have that blue. whenever you're copying the class times make sure you don't include the dot or it won't work. I'm going to Let me know if this is too small to see I'm going to split my screen up right here. And then we'll close this with B. Maybe bring this over like that.
Lewis Benson: That should be okay for the moment just to kind of show how this works if you're on Windows 11. you can do the same split that I just did you just drag your window up to the top so There's a little bar that shows up. I just drag it up and pick my size. I believe that comes default on Mac. You don't even have to do any after worry about it. I don't think that works on Windows 10, though if you're using Windows 10 Maybe it does. I don't remember. I haven't used that in a while. so let me grab the class names. We'll do BG primary subtle and this is a little bit harder to read. I apologize for that but having the browser on one side and the vs code on the other will be helpful here for this. little demo all right, so Whoops. I don't know what I just did to me undo.
Lewis Benson: okay that
Lewis Benson: Okay, so there is my subtle.
Lewis Benson: And I just got to be careful not to grab the periods. I only want the text.
Lewis Benson: BG secondary
Lewis Benson: And then BG success.
Lewis Benson: Okay, and then I checked the demo and there's all those colors. So this is where this gets pretty cool. I'm gonna inspect. And I'm going to put my tools on the bottom because it's gonna get hard to see with everything side by side. I believe were Let's close mobile. And then I'm just going to drag this over and watch these elements change their sizes on the breakpoints. So as they run out of room they just Auto size. So that works.
Lewis Benson: So that's pretty cool. And these are containers again so you can put elements inside of these. And it will start collapsing your content as you run out of room. Let's see what happens if I put the buttons in there. I'm going to put them in this small one since it moves the most. Let me bring this back over.
Lewis Benson: And we'll just put the whole section in there. So I highlight it. I'm going to hold the ALT key and press down.
Lewis Benson: And I make some of the The ALT key and press up.
00:45:00
Lewis Benson: Okay, so my buttons are now inside of my container. So let's collapse that. see how that it puts it on its own line whenever it runs out of room there.
Lewis Benson: So hopefully you can see how this could be a really powerful tool this container.
Lewis Benson: just using the correct one. For example, we have the small container. here. We get all those different breakpoints for free. Let me put this on mobile view and just see if that's easier to.
Lewis Benson: Yeah, so there's a lot of different breakpoints. And we do run out of room for mobile sizes. So we would have to do something a little bit differently there to figure out how to break up these buttons we may have to use a little bit of JavaScript for that. I'm not sure what a better solution maybe a media query can do it.
Lewis Benson: But what we would definitely need to do is make it so that this gets separated out or maybe change the size. I think you could do it with a media query make it change its size.
Lewis Benson: So if we were looking for a solution like that, there's a lot of different ways to approach something like that. Does anyone have any questions about the container? And then how this container small works?
Lewis Benson: And again looking at the documentation as the number one way to get through using bootstrap also the end of this week. I want to mention this now we have the quiz again. Most of the quiz will be solved using the bootstrap documentation. So as you're working on that quiz, make sure you're in the documentation checking for the answers in here.
Lewis Benson: So here's a lot of different background colors already plugged in. Even have a transparent background is pretty cool. And then here is a whole bunch of written texts. So this code block here again will represent. What is above it? So this is if you want something specific here BG warning you can scroll down here and grab the BG warning we notice there's a couple other classes here that we have this P3 class and M2 class. There's also this text emphasis success. So what we can do is actually search for that P. - we'll do 3.
Lewis Benson: And here we see p for classes to set padding. And then here is the actual number. So we could use M Dash three and that's going to set margin and I'll show you how to use this here in a second. And we have 3 which is setting padding. I'm not sure if it tells you how much it actually sets.
Lewis Benson: We might have to look in the dev tools to see that it could be a dynamic thing. Typically when I'm using these utility classes like this, I'm just kind of doing it. Trial and error. I'll throw some padding on and if it ended off I'll add some more and again you can go up to five and then there's also this Auto this would be like if you wanted to Center your element using margin Auto. I believe I demonstrated that a couple times. That's how you would use bootstrap to do that instead of using CSS. So this could mostly replace your CSS. But again, you could use them together and get even more powerful applications because not every little thing you might want is within bootstrap. So the spacing is where I'm currently located, by the way if you're looking for this in the documentation.
Lewis Benson: And this is located under utilities. So there's a lot of different utilities here. We have the sizing.
Lewis Benson: For sizing we could actually set width based on percentages. So if we wanted a container to only take up 25% of the page, we'd give it w25. and P3
Lewis Benson: and again so far today. This is all just high level overview of how bootstrap Works what it is. how to set it up
00:50:00
Lewis Benson: then does anyone have any questions so far? if anyone has been following along? Is there any hiccups you've run into or anything like that anything we can cover real quick to maybe solve?
Krystal Jefferson: The deal how did you? I think I may see it. But I'm not sure if it's the right.
Krystal Jefferson: route
Lewis Benson: As you're talking about in my code here.
Krystal Jefferson: Not that section right directly under it.
Lewis Benson: Me open this up a little bit wider. All right. So under this section this div here.
Krystal Jefferson: Yes.
Lewis Benson: So these I copied and pasted right out of the documentation. And it just kind of shows how this container class works. So we have container MD what I did here was I added these background colors. That's the only thing I changed and I'll show you where I got these in the documentation on that way.
Krystal Jefferson: Okay.
Lewis Benson: If you're following along you can kind of play around with this. Let's set the back button.
Lewis Benson: I'll just go to it. So it was under layout. So if I go to the top of my sidebar here see getting started at the top. I'm going to scroll down to right here's layout and then here's containers. That's where I was working in.
Krystal Jefferson: Okay, I see it.
Lewis Benson: And now I'm going to scroll down. And all I did was copied this right here. Where it says responsive containers, I copied the code block and just pasted it in.
Krystal Jefferson: Okay.
Lewis Benson: And then I added a background color to each div. And I did that using the background color. Where was that at?
Lewis Benson: Wasn't topography.
Lewis Benson: It is lity I believe it was a utility colors.
Lewis Benson: This is text colors. So this wasn't the right one. Maybe just lay.
Lewis Benson: So I'm not sure where it's at on the sidebar. So because I can't find What I'm going to do is go to the search bar. So this is a pretty common workflow with bootstrap. sometimes it comes really difficult to find what you're looking for unless you use this daily. So you can see I had a search for background color here. I'm just going to type it in. background color And press enter.
Lewis Benson: And here we are it's under helpers is where the heading is for color and background. So under helpers if I go over to the top scroll down to helpers. And then it's color and…
Krystal Jefferson: Okay.
Lewis Benson: And here's all these different background colors you can use.
Lewis Benson: It's actually isn't section.
Krystal Jefferson: Okay.
Lewis Benson: I was in a little bit ago either. I can there's so much stuff on here.
Lewis Benson: I want to find that section again because it was really good one.
Lewis Benson: This is where I was so utilities background.
Lewis Benson: And this has all the different background colors. You can apply to any element. So you can put these on your cards. You could put these on your navbars you could put them anywhere.
Lewis Benson: They don't have any questions about how I found background color.
Lewis Benson: So anytime you're using any Frameworks, it doesn't matter if it's a back end. If it's a JavaScript framework. The documentation is your best friend. You have to use documentation. Don't try to memorize everything on here. It'll never happen. This is the main workflow you come on here. And you start using the stuff one thing. I do recommend though is when you're look at these little tool tips here. They're really really helpful. And sometimes they'll also tell you that there's stuff on here. That's no longer in use. So maybe you've been using there's one called a Jumbo Tron I used to use.
Lewis Benson: And it's no longer in. So here it says Dropped the Jumbotron component and it can be replicated with utilities crumble Jumbotron example for a demo. And this is what a Jumbotron looked like it was just a big block as a big card with a huge bit of text on it. If I look at their home page, they probably have one on it. We actually just see if there's one there for an example.
00:55:00
Lewis Benson: Kind of like this. But usually the text is all the heading is a little bit bigger than that.
Lewis Benson: Not a really good example on here.
Lewis Benson: But yeah, it's similar something like this. You just have a large heading and then you have some text.
Lewis Benson: oops, I clicked navigating the documentation again. This is the most important thing I keep saying has over and over again. I just hope everyone is a catching on the documentation is your friend.
Lewis Benson: Is there any other questions before we take our break? We're about at that hour mark.
Lewis Benson: And I do want to just show One More Time how to use that padding. Let me actually bring that up. I'll just type in padding margin and padding. And here it shows Where the property is 1 M for margin P for padding? We also have this t for bottom as for Star e for end and you can also use X and Y for left and right And I'll show you what that looks like.
Lewis Benson: they shot right here, but I'll show it code as well. So if I wanted to put some padding on this button. I'm going to go into my class name. And I'm going to put five on it. so we can see the difference on that. And now I'm going to split my screen again. So this is
Lewis Benson: so the padding was added to that button. and let me shrink that so that
Lewis Benson: I'm gonna take them sector out of this container so that you can see the difference someone that highlight it all hold the ALT key and press up. There we go. So here's the buttons and we can see that the secondary has more padding on it. Let me add. Another class to that.
Lewis Benson: Which button was that secondary button? So there's P5. So let's add M Dash. five and we can see all that margin got added and it didn't break our button group a little bit. It's not supposed to look like this. But if you did have a use case for that there's how you can add marginal around. Now we can also add mt5 and that'll just add it to only the top.
Lewis Benson: If we do mb5, it'll add it to the bottom. Ms5. Or add it to the start. And E5 adds it to the right to the end. MX5 or add it to the left Right and why five adds it to the top and bottom?
Lewis Benson: And see if there was any more that I might have forgotten. blank is all four sides as we see. That was the first one we tried. So those are all the different little letters you can add and when you're looking at this code, it's not the most friendly to read. That's one of the downsides of using a CSS framework like bootstrap. Is we have Secondary P5 M5. If you're not familiar with bootstrap, you might not have any idea what any of this means? so just make sure that if you are working with other Developers. You can do something like this. using reach draft to add
Lewis Benson: button class secondary color
Lewis Benson: padding level 5 and margin level 5
Lewis Benson: If you start doing this in your code, it becomes a lot easier to manage later on. not required for any of your assignments or anything, but it could be a good habit to put comments in your code, especially when you're coming back and looking at it later. again, but does anyone have any questions at all before we take our break?
01:00:00
Lewis Benson: Okay, I'm going to start the 10 minute timer.
Lewis Benson: And I'll see you in 10 minutes.
01:10:00
Lewis Benson: Okay, welcome back.
Lewis Benson: I was trying to press okay, it's gonna do something.
Lewis Benson: All right, so we have some Styles here. I do want to just show you briefly. I added these background colors. primary subtle BG secondary. Let me open up a new style sheet.
Lewis Benson: styles.css
Lewis Benson: Whenever you have your custom style sheets you bring in your CSS. You want to make sure that it's kind of like the reset you want to make sure it goes underneath of your bootstrap link. So here's my bootstrap link. underneath of that. I'm going to put link And I'm gonna bring in this That way The link to our external style sheet is overriding any of the bootstrap styles.
Lewis Benson: And let's see if we can actually change one of these colors. So we have this BG primary. And I'm going to look at the browser split screen again.
Lewis Benson: It looks a little weird that all over the edge. But yeah, so we'll do BG primary So I'm selecting the primary class. Let's see if I can actually override this background change the brown and notice. It doesn't work. Let me show you why. I'm going to open up my Dev tools here and I'm gonna scroll down to let me select that element and I'll scroll down to the styles.
Lewis Benson: So there's a lot of stuff in here.
Lewis Benson: And there's a lot of stuff that's already crossed out too. So this does make it difficult to see what I'm looking for right now is Styles dot CSS. So we have this grid.scss. There's all kinds of styles in here. I'm looking for the styles.scss.
Lewis Benson: BTN primary. Yeah, it's not even showing up in here at all. I wonder if it's got a typo in it or something.
Lewis Benson: so one thing you can do and this is one of the annoying things about boost traffic. Sometimes you have to put in. exclamation point important
Lewis Benson: I can spell it correctly.
Lewis Benson: And it looks like this change Was that working? I just not seeing it. Must be color blind or something. This is actually working. I was looking at the button color but sometimes whenever you put in these Styles, they don't override and you have to use this important.
Lewis Benson: In order to get it to apply what this does is overrides all of the specificity. It inline styling is more important than IDs and everything. It'll override everything. You should probably avoid using this whenever you can. But with a framework like bootstrap a lot of times they're already using this. So you have to override it by using it also. I just wanted to kind of show that real quick on how that would work. and something else I want to show here too is this I'm going to select this here. So this has the BTN primary? So I'm gonna select that class primary and that's going to select this button here because it already has that class name on it. And I'm going to give it a margin, right?
Lewis Benson: Just to show you that you can do this.
Lewis Benson: Sorry margin left for my right today. And now we're not up against the edge of the page. Let me do 115. I just to be a little more dramatic with it.
01:15:00
Lewis Benson: let's try margin Auto and see if that works without it being in a container and I think it will without a width.
Lewis Benson: I'd have to put it on the parent container for that to work, which is BTN group.
Lewis Benson: And the BTN group probably doesn't have a width. It doesn't. So we'll have to give it a width of 100%
Lewis Benson: and now it is taking up the full width. So you can Style with both CSS and bootstrap together. And that's what I mainly wanted to show you here is you can select the same class name that you're using to modify the rap components. So if you wanted to collect all of your bootstrap buttons, you could select BTN and start overriding the Styles. But again, remember if Styles don't seem to be applying you may have to plug in this important keyword and notice this is before my semicolon and after the property name But if it works without it, then don't use it as a last resort if that makes sense.
Lewis Benson: If I look through here, we can actually probably see it being applied in places.
Lewis Benson: I did see it when I had the file open earlier. quite a bit So it doesn't seem like they have it on any of the Styles. I'm currently using so everything should work without it. So I'm just going to remove that.
Lewis Benson: And it's the colors gone, so I do need it there.
Lewis Benson: interesting wonder if I needed here, too.
Lewis Benson: Yeah, so that's all the same. Does anyone have any questions about the important keyword and how that works? What it's purpose is anything like that.
Lewis Benson: So again, you can see it here with the background color. It doesn't apply but the important in now it works.
Lewis Benson: so that is kind of a rough way to show you that you can customize these together. So if you wanted to use your own layout, maybe you wanted to use the grid system.
Lewis Benson: the grid system, then you could use a CSS file to lay out your page. And then you could use the bootstrap components for your buttons. maybe for some containers so that you can make it responsive. You don't have to worry about using media queries. Let's see what they have under borders. So they already have some pre-styled borders that you can add just by adding the top border end and so on. So there's another option too.
Lewis Benson: So I'm just gonna show a quick demo. On how you could build a navbar? This is one of my favorite things to build whenever I'm trying out a new front-end framework. Because it kind of gives you an idea of the complexity of what the framework can do because typically navbars contain so many different pieces of the framework. So let's open this up. And we can already see there's a lot of stuff in here and I do recommend that you actually read don't just scroll down to the code and start copying and pasting you can do that. You can do the trial and air approach, but there is a lot of important stuff in here. So whenever you're using components take the time and just read what it says because it can be really helpful. You can learn quite a bit just by reading these little Snippets. so we have
Lewis Benson: navbars require a wrapping so the wrapper is going to get the navbar class. And then we have the navbar Which uses? responsive collapsing for these different screen sizes
Lewis Benson: We have color scheme classes. I'm going to click on these links after I get down to the bottom here So here's some supported content. We have a navbar brand this is that logo that I've been putting on my pages where I use an H3 or whatever an H1. they're using something called a navbar brand for that and I believe they have a logo if I scroll down far enough. Yeah, they do have a logo here. So that's where that's coming from. It's just a small image. So if we look at the actual code here. They have the nav wrapper. It has the navbar class. They're giving it a background. of body territory
01:20:00
Lewis Benson: I can't say They have a div that's a container and that's including an anchor tag, which has an image nested in it. And then on that anchor tag is where they put the navbar brand so they have a container for their image and this can and when I say container, I mean a parent and the parent is what has the navbar brand. So that's what gives it that nice little small logo.
Lewis Benson: And they have a lot of different examples on Here's a disabled button. so they're just using the disabled attribute if I look down at the code here and it just kind of Grays it out and makes it so I don't have the pointer clicker when I look at it. Because we don't want that one to be used you could use this If you're not logged in you could disable features or maybe you're not on a premium tier of whatever type of web application you built. So you could disable the features with the disabled button that way just to show the user that hey if you get the premium you could have this. or maybe you don't want them to submit a form yet because they don't have all of the form elements filled out. Then whenever that's not complete you could have the button be disabled to submit and then whenever the form is complete. Then you could remove the disabled attribute and be able to see the button.
Lewis Benson: So let's go ahead and build one of these. And let me find one that has a lot of features. So this one here has quite a bit on it. And all I'm going to do is just hit the copy to clipboard. And I'm going to go to my code. Which I'm not used to split screen right now. Let me make this. Come that way.
Lewis Benson: My closed my Dev tools for now. And I'm gonna put this right under my H1. I'll put it above my H1. That way we have the nav above the heading. I paste it in. And there We have the navbar in place. We have this drop-down link. This is one of those features. That requires JavaScript in order to work. If you don't have the JavaScript linked into your file and I'll show you again where that is. If I scroll all the way down to the closing tag of my body. We'll see this script element and if I open that up, we can see that we have the JavaScript linked in there. If I didn't have that this functionality would not work and I'll show you what I mean here. Let me remove that
Lewis Benson: and I click it and it's not doing anything now. So if you include a navbar that has some sort of functionality to it or any element with functionality and a functionality isn't working check your script element and make sure that it is at the bottom of your body and that it doesn't have any typos in it and that it has the SRC and everything. And does everyone know where to get that from again?
Lewis Benson: So the navbar is working and I'm going to show you something pretty cool about Navbar right out of the box. We get the hamburger menu. And again, this is a JavaScript thing. In order for this to be here, you have to have that link. So whenever this gets too small to fit all of the content, it'll just automatically throw in this menu. And then when you click that it gives you this nice little drop down. And then you could have pretty cool functionality without having to do any actual work. It just comes working out of the box.
Lewis Benson: it's weird that flickers like that when I sk I can't shrink that any further. I might have to use. My Dev tools to do that.
Lewis Benson: And you probably can't see it. I know you can't because I can't see it all but it does put the hamburger underneath of the nav bar when you get that tiny, so it even has Flex wrap turned on bootstrap is build on flexbox. I don't know if I said that earlier. But because it's built on flexbox, it has all of those nice responsive functionality features already turned on without having to do any actual flexbox coding like your Flex wrap setting up your media queries changing things from columns to rows all of that's already done for us.
01:25:00
Lewis Benson: So I want to show another container here. So we can see how my buttons here taking up the full width. And I'm actually going to remove this class so that stops doing that.
Lewis Benson: And I want to use another bootstrap class to do the same thing. So that is on my button group. And the class is Container fluid that's nice. I'm getting that autocomplete from it here out of the box. And if I go full screen here, we can see it's taking up the full width of my screen. And if I shrink this down it shrinks with the screen size that way. So there's a little bit of a difference there between regular container and con container fluid is dynamic with your screen size and container uses breakpoints. Does anyone have any questions about that and I'll bring up the docs for where that is located? And again, I'll just use a search here container.
Lewis Benson: fluid
Lewis Benson: so container fluid which is with what at all breakpoints so it just stretches and grows with the page and this would be the same as having the container set the flex grow if you were going to be using flexbox.
Lewis Benson: and then here's this little table that gives us all of the information about it. It shows us how large it's going to be on what screen size and it uses pixels to determine that
Lewis Benson: but does anyone have any questions so far?
Lewis Benson: Can someone tell me how I would change the background color of my navbar?
Lewis Benson: And I find that happy medium on my screen. Wets here. It's hard.
Lewis Benson: Does anyone know where that's at and the documentation to find the way to change my background color?
Umar Z: Will go like BG and whatever color you want.
Lewis Benson: Yeah, so that's what I used earlier was - I'll just type in primary so that it shows the list and here we have. list of colors and again that was under this isn't the right one. This would work. I believe it was under utility.
Lewis Benson: Or was it helpers? Yeah, utilities and background. So here's a list of all of the different backgrounds Iris a question.
Iris Coats: I was gonna say that you got it though is under helpers on the background color.
Lewis Benson: Yeah, so the helpers background is a little bit different. I'll explore that one in a minute. I want to see the difference between the two but the one I was looking for is under utilities. And it has this BG like Umar said and then the color name, so it's just color name. And again, this isn't something I would advise anyone trying to memorize because they also change these from time to time as well. So it's always good to just come into the documentation and see what the new versions are. And I'm just going to use this. color here And I will apply that to. my nav So if I scroll up here's the closing tag for my nav.
Lewis Benson: And here's the opening tag. I got something wrong. There we go. That's fixed now. So we have BG.
Lewis Benson: It seems as that's already applied.
Lewis Benson: But I don't actually see the color on there.
Lewis Benson: And here you can see that That bootstraps using right out of the box.
Lewis Benson: So whenever you're trying to override colors, it's not going to work. Because they're using important so you have to also use important. And there's a lot of other properties too that are like that. Why didn't that apply? Maybe it did maybe we'll try warning just to make it a little more. dramatic to BG warning and there we go. So it must have been working. it must have just be the color that.
01:30:00
Lewis Benson: I'm not sure what it actually means. So it might be coming from my system settings or something.
Lewis Benson: That's a thing you can do with JavaScript is tell it to apply certain colors based on your system theme, so it could have been something like that. I'll change it to this color. So again, you just go in here and you change the class name and I added a DOT which is going to remove that. And then I'll look at that change. So you can really quickly set up a color theme this way. I'm using their colors. So if we look at this we have basically a color palette. That we can use for any sort of layouts.
Lewis Benson: Does everyone be able to find the background colors in the documentation?
Lewis Benson: awesome Does anyone have any trouble at all with documentation or getting any of the bootstrap components to work?
Lewis Benson: So just I want to make sure that we're all caught up with everything here because this can get a little confusing if you're having any sort of difficulties right out the gate.
Lewis Benson: Okay.
Lewis Benson: So I'm gonna go back up to components. I'm just gonna lay a couple things out. Here's a card.
Lewis Benson: This card has a image. I wonder If I just paste that without the three dogs. I've actually never tried it. I always put a placeholder in there. I'm going to scroll down. We'll go under the H1. I'm going to keep these sections in here from now, but we'll put some space between them. I'll just paste in that card.
Lewis Benson: So yeah, it does break the image. So let me grab an image from unsplash.
Lewis Benson: unflash is my favorite resource for these type of free resource images. Just because they don't require you to sign up or anything. You can just come in here and just grab links or download the images and use them. I'll use this car. coffee image address and I'll put this in a SRC.
Lewis Benson: and then for my ALT text
Lewis Benson: and put in a description
Lewis Benson: and let's take a look at that. So there's the card. I already comes with this heading and this text. I'm so this might not be exactly what you want. So this is where you'll kind of have to experiment a little bit. If this card doesn't look exactly what you were looking for.
Lewis Benson: Let me add. the container to my body
Lewis Benson: that wouldn't work. I'm sorry. In a little side track here, but I need to fix this. So this is easier to see I'm gonna put everything in a main.
Lewis Benson: To wrap my whole page in a main except for my nav bar because I want my navbar to span a whole way across. And I was just put my main raid above my Again. The script tag is the last thing you want to show and side of your body. So here's my closing tag for my body. Here's my ending main element. I'm going to double click on this so we can see the opening on a scroll all the way up to. I know I have a lot of elements in here right now, and we're getting a lot of spaces and then right above my H1 is So on my main I'm going to apply a class. of container Dash fluid and that gives us just a little bit of padding there at the edge of the screen. So things aren't bunched up. Yes, Elgin.
Elgin Sharper: yes, I see that you have the image link How did you get it to? Be so short like that mine runs across the whole screen. I have to scroll to the right.
Lewis Benson: Yes, I'll show you that. So here's my vs. Code. I'm going to click this little gear wheel on the bottom left. And I'm gonna go to settings. and I'm gonna type in the word rap. And I have my editor word wrap turned on.
01:35:00
Lewis Benson: And I have it set to 80. per column and I think that's the only settings you need to modify. Let me scroll down. Format wrap line length, this is set to 120 at the bottom. And that should be it. I believe you just have to turn it on. Do you have these settings you able to find these? Okay?
Elgin Sharper: Okay.
Elgin Sharper: All right. Let's tell you I click settings. What's again?
Lewis Benson: I type in the word rap in the search bar w r a p
Elgin Sharper: Okay, turn it on.
Lewis Benson: Yep, and then make sure this is set to 80 and…
Elgin Sharper: and it is
Lewis Benson: then scroll all the way to the bottom and make sure that's set to 120.
Elgin Sharper: Yes, it is.
Lewis Benson: All right, and then you can just close the tab by clicking on this x right next to the word settings. Everything will automatically save. And then you may have to format your page with your prettier or whatever extension.
Lewis Benson: Did that fix it?
Elgin Sharper: Yeah, I did.
Lewis Benson: awesome Did anyone else have any questions about how I did the word rap that everyone see that?
Lewis Benson: and again, if you are watching the recording just go over it one more time to make sure that that was clear because I never did show that in the first week. I probably should have showed you how to do word wrap. So I go to settings. I'm clicking this gear wheel on the bottom left settings. I type in the word rap. And I just make sure it's turned on set to 80 scroll to the bottom. And it's set to 120. And then I can close the tab at all auto save.
Lewis Benson: So I got it pushed away from the edge of the page now because I put everything inside of The fluid container is again because the whole way across the screen, so that makes sense to be on a main if I just make a regular container. We'll see what this looks like. It kind of bunches things up. This may be some Behavior you're looking for. maybe you're going for a mobile first design, which it's a concept that's trending right now and the development industry. I did see there's some people arguing against it saying not to use it in every situation which I guess that makes sense. But mobile first is kind of the standard right now in the industry and what that means is. You would want to have your browser kind of collapsed in. While you're building your web page and you just want to look good on mobile.
Lewis Benson: And then once everything's all your content is on the page and it looks really good for mobile. Then you can use things like bootstrap or media queries and start expanding this out and make sure it looks good on desktop as well. So if you build it good for mobile first, it's easier. To switch it to desktop than it is to switch from desktop to Mobile. So it's just a little bit less work that way. Is anyone have any questions about that concept?
Lewis Benson: And what that might look like too is just putting everything in a column if you think about any mobile application you're on you're typically scrolling with, your thumb and everything is right and reach of your thumb so you don't want to have rows you just want to have columns.
Lewis Benson: Okay, so there's a card it has an image in it. And then again this might not be what you're looking for. Maybe this content isn't matching your design ideas, but you do want to have a card so you can come in here and you can start changing things. We got this card body. Let's put this in a container to see what it looks like with the container. I don't see any difference there. So the card body must already have those Styles applied. Maybe we want to add another line of text under this see what that looks like. So there we can get a two paragraph thing. But we see this is getting kind of tall. So maybe we want to put all this text inside of something else some sort of container. So in order to do that, I'm just kind of showing you the workflow and how you would use bootstrap to solve problems like this.
Lewis Benson: So we're creating our car and we have all this content like this is looking a little ugly right now because there's too much text. I just kind of want to show the text only whenever they're interested in it. So I'll come back into bootstrap. I'm gonna go back to being full screen and tabbing between just because it's hard for me to read the documentation when I'm on such a small screen like that. So let me know if I am going a little too fast with the screen swaps. All right, so I'm back in the documentation and I'm gonna go to this accordion. We'll try this out. So with this it allows you to collapse your text? So I can just collapse it and on a collapse it and again, this is another. JavaScript requirement, if you're using an accordion, you have to have JavaScript imported into the bottom of your body.
01:40:00
Lewis Benson: So this example has three elements. I'm going to scroll down and see if there's maybe a single element. This one has three. This one starts off as always open not what I'm looking for.
Lewis Benson: And now we're getting into Anytime you see this dollar sign going on. This is SAS. It's not something we're using just yet.
Lewis Benson: Okay, so I want to scroll back up. It's not giving me what I'm looking for. So I'm just gonna have to kind of work with it. So I'm gonna grab the whole thing. And I'm going to paste it in there. And this is going to be a little bit confusing. Whenever you're using things like this. It will. Look really messy until you can clean it up if that makes sense. So I'm just going to put it under my H5. Paste it in. And we don't need. This item so we can see there's a thing called an accordion item. So I'm just gonna find this div. And then I'm gonna find its corresponding closing time. So I actually need to format to get this to work, right? And let me scroll back up and find that again. So here's the accordion item and I have this vertical line here. It's telling me this is the closing element. So I'm going to start highlighting All the way up to accordion item. Delete
Lewis Benson: And then I'm assuming this is accordion item it is so I'm just going to highlight that. And again, I want to make sure I have the right one. So I'm going to highlight that. I do I like to start at the bottom and work my way up so that I could find the class name a little easier. So I double click on the div that has the class name. I'm looking for this one has accordion item. So I double click here to highlight And it puts a square around it. And then when I scroll down I find the same one that has a square around it. You can see that little border there. These are all highlighted because they're all divs. But this one is the one with the border. So this is my closing tag for the accordion item. So I'm going to start highlighting here. I'm going to work my way up till I see that element again. and Elite So now I deleted two of the accordion items and if I look at the documentation, remember we had three. So that will leave me with one accordion. Let me just take a look at my card.
Lewis Benson: And here it is. inside of my card this still isn't quite right. So we're gonna have to modify this a little further.
Lewis Benson: Let me go back into my code. So we have some text here. Let me open that back up. Just looks like we have some text here in a strong. We don't need to bold text. We're not using that.
Lewis Benson: we do have the collapse one. That's Accordion collapse and we also have it set I'm going to remove this show attribute. So it's closed by default. And then I can click it to open it.
Lewis Benson: So let me refresh It looks like it's selected.
Lewis Benson: I'm going to have to do an inspect to see what the properties are on that. This is something you may have to do whenever you're working with these type of situations because it's not going to all be in the documentation. So here we see. It's collapsed. I'm going to do a refresh. So we have the class accordion button. And we don't have the class collapsed on it. So if I click it twice? This is what it should look like whenever it's closed and now it has the class collapse. So I know that I need to put that class on it that class. So I'm just going to copy it. I'm gonna go back into my code. And it does appear to be on it by default. That's on the button.
Lewis Benson: It goes right here then. So it wasn't on it by default. This is my button here. Collapsed So now that looks
Lewis Benson: Yeah, that fixed that problem. everyone see how I did that and how I solved that little visual bug that I'm gonna remove it and just kind of show one more time. Just so it's clear what I seen and how I debugged So on page load. This is highlighted with the arrow facing in the wrong direction. Because it thinks it's supposed to be open and the reason it thinks it's supposed to be open is because by default this had the class on it, I believe it was just called open. Or it was something else. Let me look at the documentation to see what it accordion item it had collapsed here. Wait. It was this one I had this one open.
01:45:00
Lewis Benson: Sorry for the fast scrolling. Shell is what it was.
Lewis Benson: So if I put show back on this? And I look at my code. We can see that it's open by the arrowsing up and when This is the default what it's supposed to look like when it's closed. So whenever I remove show from here.
Lewis Benson: And then we refresh it's in that position it's supposed to be open, but it's not actually open right now. And then when I open it. We're in the correct position now for being open because it changed that state and then when I close it, it goes to whatever position it's supposed to be in and closed and the reason this works is because it's using JavaScript to apply and remove these classes So whenever you get it to where it's supposed to look like by clicking on it, that's why I looked into my developer tools and seeing which classes were currently applied to it. So we have accordion button and we have collapsed. And whenever I refresh the page. I only have accordion button and it looks wrong. So that's how I knew that I needed to apply the collapsed. Class to it in order to fix it. So I go back up to my button and I say class we have accordion button on it, and I'm also going to say collapsed
Lewis Benson: so that's just a little bit of the thought process behind the debugging I did there. Hopefully that wasn't too much. I know that was actually quite a bit, but I just wanted to show that because this is some of the stuff you might run into eventually. And finding which class to add could be a little bit tricky. So using your developer tools to assist you is definitely a good idea. Okay, so ion. Now we have This extra text actually is the text. It should be inside the accordion. So I'm going to swap those. I'm going to remove that extra and then put that in there. so this is the accordion body we can see that I got all this different text in there. We have a code element. I want to remove all of that.
Lewis Benson: And I'm going to put a paragraph element in there instead. And then I'm going to find my original text which is here.
Lewis Benson: and put both of them there. I'm actually gonna remove the one I put in and put both of those there instead.
Lewis Benson: Okay, so I open this up. and this is a little bit closer what I'm looking for notice though that it's up against that button. Can someone tell me how to get it off that button using bootstrap.
Lewis Benson: So that it's not touching the go somewhere button.
Lewis Benson: So it is a utility class. It's the one I covered in the last minute right before the break.
Umar Z: I'm going to add margin to.
Lewis Benson: Yeah, so we need to add some margin to that. And what was the class name to add margin?
Umar Z: M.
Lewis Benson: And yeah, I want to put just margin bottom though. So how would I do that?
Lewis Benson: Or I could put margin top on the button either way.
Lewis Benson: And that's perfectly fine. So I'm not expecting you to memorize all the class names. I was just curious if maybe you did remember it. I'm going to look at the documentation just to show you again where to find So Here's helpers. Here's utilities. so when we look at utilities we're looking for. margin maybe spacing again, these are yep, there it is. So I don't have all these memorized I use the search bar more than anything. But here's margin it says use the letter M. And then if I want to apply it to the bottom put the letter b and so to be MB. And then we put a hyphen and then we put one of these numbers. So let's try that. So it'll be number.
01:50:00
Lewis Benson: And let's see what we actually need to put it on. So I'll show you that little bit of workflow. We're going to go into the browser I'm going to inspect and I'm going to click on this accordion item. And we can see it's on the same button that I added the collapsed attribute to. so I can actually do that right here in the browser tools just to see it test it and see what's going to look like I could say 1 That wasn't enough. So I'm double click again 2. I see what it's doing. It's actually adding it outside of here. Let me put a five on there and you'll see what I mean.
Lewis Benson: So, yeah, it's not the correct position to put this. It looks like we have a couple more. Layers to this that I need to be working with so let me remove that.
Lewis Benson: And sometimes that'll happen. You'll be looking at a child instead of the So here is the full parent class accordion. I'll place it here and be five. And it moved it down quite a bit and then I can click that. It opens it up some more.
Lewis Benson: And let me try three. I like three. I think it's spaced out pretty good. So that's what I'll apply to it is mb3 for margin bottom. And it's the third tier and let's see. How much is actually applying to it. Let's look at our Box model inside the dev tools. Let me slide this over.
Lewis Benson: So that's 16 pixels of margin at MP3. Let's see what mb1 and Mb1 is 2 or Sorry 4. So I'm assuming mb2 is probably going to be 8. and be 3/16
Lewis Benson: which would then imply? Mb4 would be 32. of 24
Lewis Benson: thought I had their pattern down. And then 48, So that's the different pixels for the different levels and that might also depend on M's. I'm not 100% sure. I have to experiment with that to Again, I usually just apply. Our number I'll take a guess. and do one through five and you don't want to put much more than that for margin. And then we also have margin Auto for that auto centering technique. But if you're using more than five pixels or five levels of margin, then you probably need to use a different method for layout that would probably be some sort of justify content or align items something along them lines to work with your layout. It could even be an absolute positioning.
Lewis Benson: I wouldn't recommend ever using absolute positioning for overall layout but if you needed the shift this up and down 20 30 pixels, that would be a good use case for absolute positioning. And again that's something we talked about early With CSS. I'm actually going to bring the documentation up real quick. Just remind you what that is. That would be mdn. Now we don't want to lose everything we learned last week with by learning bootstrap, I mean
Lewis Benson: and that is easy thing to happen. So this is a JavaScript alone. Absolutely. positioning
Lewis Benson: So absolute positioning. allows you to
Lewis Benson: find the right place.
Lewis Benson: Here we go. It allows you to move things out of the flow of the document and then change these values to a change the positioning of the item
Lewis Benson: So if you needed to move something just a little bit on the page. You can use absolute positioning for that. So this could be a use case if you needed to move this element up and down left Or maybe this button is not quite perfect and you can't quite get it using the bootstrap items. You could always use absolute positioning to slide it over a little bit. But again, don't try to start positioning all your cards on your body. Use a grid layout or something don't use absolute positioning for that. that'd be really bad on different screen sizes. Okay, so we got our margin bottom our buttons pushed away a little bit. So that looks pretty decent it automatically scales down with the size as we open and close that let's see if we can get this to move left and right a little more. I believe I can play. P0 on that for padding 0
01:55:00
Lewis Benson: and I only change this in here actually didn't change it on my Actual code so let me do that. I forgot about that 3 Okay, so there's my margin bottom three. and then I want to try to put P - 0
Lewis Benson: so it's not stretching that across this is something I would probably have to explore in there documentation to see how to get the solution. maybe with position
Lewis Benson: So they do have their own absolute positioning for bootstrap. Which is pretty cool. You can move things around the same way. But here I could use. a positioning possibly to slide that left and right. Let's give it a try.
Lewis Benson: position absolute and it's now out of the flow of the document. That's not going to scale correctly anymore. So yeah, I can't even use that. It's unfortunate.
Lewis Benson: But again, this is how you use bootstrap. You just come into the docks and you just start pulling things out to use them a big part of this is knowing how to use CSS as well. I should have known ahead of time that that wouldn't scale properly because absolute positioning doesn't allow me to push elements in the documents and I can see that here whenever I'm moving this around it's not Adjusting those other blue items but if I switched this to relative it does adjust them. static So that is good to know.
Lewis Benson: Not 100% sure how to stretch that across. Maybe sizing has something to do. w 100
Lewis Benson: and it doesn't give me that. extra space If I take a look and I don't think we have any margin on this.
Lewis Benson: I might be able to do some. There's a little bit of a hacky way. here we go card body. padding 16
Lewis Benson: That's what I was looking for. And then I would have to add margin each of these to get them off of the edges so that this is up against the edge. And that's why my card body.
Lewis Benson: So if I go to my card body and I do adding X zero that should fix that in Oops. my Discord.
Lewis Benson: Sorry about that. if I go into my
Lewis Benson: and do p x
Lewis Benson: - 0
Lewis Benson: hope this is the wrong element. That wasn't my card body.
Lewis Benson: Now we're all the way left and right with that.
Lewis Benson: And then I just need to move this to the left and right. and this one is my
Lewis Benson: anchor tag and we have a BTN primary. I might be able to use.
Lewis Benson: margin Auto on this
Lewis Benson: so used to press and control s and I try to save my browser.
Lewis Benson: And we could also just add. sorry, it's not. Margin Auto. It's m. - Auto
Lewis Benson: because we don't have a width on the parent isn't going to work.
02:00:00
Lewis Benson: There's something like that. And then we can do the same on the title. So this is basically the workflow. You just keep on tweaking it until you get it where you want it that's not centered. I'd have to go into here and find something to center it with.
Lewis Benson: There I don't want to dive into layout right now. that would be the easiest way to do it. But again, you just have to keep playing with it and that's actually going to be today's assignment. I'm gonna bring that up now. Let's get on screen.
Lewis Benson: so I did put all this week's assignments in here so you can look ahead to see what we have going on petition What's me? After I want to put these in the correct order when I can actually do that with start with this one. move the top
Lewis Benson: or three
Lewis Benson: two
Lewis Benson: Sure, why these weren't in the right order? Yeah, we have all of the assignments already listed here. So you can look ahead and see what's going on. And then we have the quiz here at the end. That's a 20 question quiz again, most of the questions you'll be using the documentation to answer. So let's get this open.
Lewis Benson: And it's gonna start off just like the rest. We're gonna have our index.html and a Styles dot CSS. Don't forget to put in your styles.css. We don't want to do any styling with the style attribute using inline styling and we don't want to use any internal styling with the style element in our HTML and what I mean by that I'll actually show you a quick demo what I mean. I wouldn't go in here and say style equals background color green or anything like that. I would instead use the class names. And apply my styles using bootstrap.
Lewis Benson: Okay.
Lewis Benson: So there is that and then also don't do it up at the top of the head with the style element. So instead of using a link to your styles.css. Make sure you're not using this. to put background green
Lewis Benson: and I didn't actually select anything. Like that, make sure you're doing it inside of an external style sheet or primarily use bootstrap. But whenever you need to add a little bit more, for example, we haven't gone over layouts yet. So if you just want to use
Lewis Benson: what from flexbox or css grid feel free to do that. tomorrow we are going to be going over flexbox grid rows and columns. So it would hurt to experiment with that. if you want to try to start learning that on your own feel free to do that and then tomorrow during class you'll be a little that much further ahead. And that's perfectly fine. But basically just experiment with the bootstrap classes that we did today. And just try to see how this stuff works. As the idea, let me go into the rubric.
Lewis Benson: So we're going to be using. Some of the stuff you seen today, you can use some buttons some containers maybe throw in some padding and margin. That would qualify for both of these blocks. And using an appropriate content to the assignment. That one's pretty much going to be a give me as long as you Are doing bootstrap with CSS? If you build a portfolio that has no bootstrap in it. Then that would not be achieved if that makes sense. So just make sure the content is relevant.
Lewis Benson: Does anyone have any questions?
Lewis Benson: About the assignment about anything at all.
Lewis Benson: Okay, so we'll start our 10 minute break.
02:05:00
Lewis Benson: Before I do actually I want to show one more thing. how many of you have a GitHub account already?
Lewis Benson: Is there anybody in here that has one you do have one? So an alternative method for submission. Will be using GitHub. I'm going to start introducing this reminding each day because when we get into actually submitting things, I believe it starts in week five. We're only going to be submitting through GitHub. So I just kind of want to introduce this now and show you how you can do that. So what you would do is you would take this name right here bootstrap day one assignment. And I'm going to go to GitHub.
Lewis Benson: we can create a new repository here. You can also go to your profile here. And go to your repositories. And at the top you get this plus sign or you can click this new button. And this is where you can create a repository is basically a folder on GitHub. It's a place for you just to store files. and then what you can do is place in Your folder name. So this one's called bootstrap day one assignment. And you want to make sure this is set the public. Otherwise, we can't see it.
Lewis Benson: And then you'll create this with a readme. The reason you do this is so that you can actually add files. If you don't click this button, you won't be able to add files to your Repository. So make sure that's checked and then you just hit create Repository.
Lewis Benson: And then you can go to add file and then upload a file. And then you can just drag your file right here. You could drag your entire folder right here. In fact, and I'll show you what I mean. me open up my desktop
Lewis Benson: and then I can just drag this right onto here like that. Everyone see how I did that. I just came into my folder and I just dragged my folder right on top of that. So I'm no longer zipping it. I'm placing it here. Once they're in there you just hit commit changes.
Lewis Benson: And Here's All my code is on GitHub And then you can grab this link here and just copy that link and paste it in for the submission. And again, I'll show this again. You don't have to submit it this way. I just want to introduce it now so that maybe you start getting used to using GitHub. Also, the more you use GitHub the better it looks on your profile whenever you go to your profile. There is a graph that shows your activity It shows how much you do as far as coding goes you can start to get this streak up. I used to have a pretty good streak going on here, but you can get this streak up and it looks really good for potential employers. This is kind of like a portfolio in itself. It shows all the projects you've worked on. It shows who you're working with shows what you've contributed to and it's just a good thing to start getting into the habit for
Lewis Benson: so I'm going to throw it up to 10 minute timer if you want to take your break, feel free. And then you can get started on the assignment and again to GitHub thing is optional if you want to submit it this way now, you can otherwise continue to submit it with the zip files. Okay. 10 minute timer
Lewis Benson: and I'll see you in 10 minutes.
Meeting ended after 02:09:14 👋