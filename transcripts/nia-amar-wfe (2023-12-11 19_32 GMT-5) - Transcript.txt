nia-amar-wfe (2023-12-11 19:32 GMT-5) - Transcript
Attendees
Brian Kimbrow, Daniel Perez, Elgin Sharper, Gregory Robertson Jr, Iris Coats, Lewis Benson, Lewis Benson's Presentation, Ryan Arnold, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: All So, this is a Capstone week day one so welcome to this today. We're just going to be covering what your expectations are and basically how you're going to submit your Capstone and some of the things that are going to be required of it. So I already posted the Capstone assignment which is where you're going to be submitting the actual final Capstone to and there's a large rubric on here. This one's worth a hundred points. We want to get at least 80 out of 100. So make sure you're hitting most of the criteria on here to actually obtain that this shouldn't be too difficult to obtain As Long as You Follow everything that we've done up to this point. I see no reason why you won't be able to build out a full working Capstone project.
Lewis Benson: So let me open up this rubrics and I'll just go through some of actually look at the instructions first, and then I open the rubric and we'll go through what's actually required. comprehensive assignment, you'll be building a professional website and this will showcase your schools and it should be presentable to potential employers. So what that means is that this shouldn't be a half Bill Laura MIP some template. It should be an actual fully functioning web application that you could sell to a client if you were presented with that opportunity. It should be basically production level ready. Meaning that if you were to publish this site for a client, they would expect their customers to access this website through on what you built. The one thing to note about that. the
Lewis Benson: the URL for the website. I'm not expecting you to configure any DNS or anything like that. If you're deploying this through GitHub Pages the default URL that's generated is fine. If you do want to create a custom URL later for a portfolio. There are plenty of resources and I can share those with you if you're interested in that. you'll be able to create your own custom domain names and have those deployed on GitHub pages. They can be transferred across to other deployment platforms, but I would recommend waiting on that until you actually build an application through excuse me, ar like a framework.
Lewis Benson: Such as a react project before you actually pay for a domain. I believe they're about twenty dollars a year. It is not a big cost but it's still a cost that you probably shouldn't really invest into just at this point your GitHub Pages URL would be perfectly fine to Showcase your skills at this level. With that we're going to build a professional web page. We're not going to be using any placeholder text like Laura mipsum. However, we can use unsplash for placeholder images. I'm not expecting anyone here to be a professional designer or a photographer to go out and get all their own images for this type of project. So you can definitely use unsplash just make sure the images you're including on your application makes sense. For what the content of the application is? So you were to build an application that some sort of.
Lewis Benson: Car sales or pizza or whatever it is. Make sure the images are related to that. And anytime you do use images include the source and you're in your readme file. And I'm going to get to the readme file here in a bit. I'll show you where to download that from I have a template available for this. the website must include semantic HTML CSS bootstrap and JavaScript, so I would expect at least to have a main element. It may be a v ement paragraph elements. I would not expect to see everything in case in only divs with nothing else. You don't have to create an article sections you don't have to go the whole way with this, but I would expect to see at least some semantic elements to make this logical for SEO purposes and Screen readers.
Lewis Benson: And it is important that you use as much semantic as you can as I said, you don't have to use every single possible semantic element available. Just use what makes sense for what you're actually building. So if you don't need an article because you're not going to have an article then don't include an article element, but if you are gonna have main content and that main content's gonna be broken into multiple sections then use the corresponding elements to represent that Does anyone have any questions about that with the semantic?
Lewis Benson: Alrighty, so you will include a readme.markdown file. And in that right read me. There's going to be a spot for The Daily Reflections. I would expect that you do fill these out daily. If you do fall behind you could catch up on it, but it does get kind of difficult to keep track of what you did over a week. So it's kind of like a journal just saying what you worked on what any blockers were just a couple sentences to explain what you did. It doesn't have to be an essay or anything like that. It's just a few sentences that explain what you did you can put in the amount. time that you worked on certain features this
00:05:00
Lewis Benson: Really beneficial for later if you were to say build a blog post and talk about your time building your Capstone project. You would have notes to have that blog post be published. And the reason I bring that up is because a blog is a great thing to include on a portfolio employers love blogs. Whenever you're teaching code. It looks really good blogs are a great way to teach code. And finally, I would like to see this it's a requirement that this is deployed on GitHub payment Pages or a similar platform so I briefly went over netlify. I will show that again at some point how to deploy an application through netlify. But at minimum this does need to be alive deployment so that we can see your final project and whenever re going to be We'll do one-on-one code reviews each day.
Lewis Benson: I'll be coming around to the breakout rooms and you'll share your screen with me and show me what you're working on. If we're having any issues with bandwidth, we may have to resort to screenshots and the slack Channel whatever the result is. we'll figure out a solution but I do need to see your Daily Progress and that way I can give you live feedback on what you're actually doing and this isn't a way to
Lewis Benson: Critique you real hard in a negative way or anything. It's just a way to give you some feedback while you're working and say that that looks pretty good there. Maybe if you change that a little bit and be better practice or layout procedures, or maybe I noticed that you have a bug in your code that you haven't seen yet and I can point that out to you and you're kind of help you along with the process. So we'll do a line by line code review. You'll just explain to me what you did how it works. And we'll go from there. Does anyone have any questions about that process at all?
Lewis Benson: Already, I'm gonna open up the rubric down and we'll just go through all the criteria required for this. aesthetically and with functionality a website that displays a professional design with intuitive navigation. All functionalities work with expected without any bugs or errors. So what I would expect here is for example, your JavaScript implementation. If you have the tech calculator calculate and not produce odd results. Probably not using alerts and prompts on your page. Maybe use a bootstrap solution like a modal in order to capture that input instead. That way it has a more professional appearance and again having no bugs with that. So if you're typing in a number and it's expecting a string and that throws an error, you might lose a couple points on that.
Lewis Benson: and then here the halfway point would be it has decent design but last aspects of professionalism or navigation is not fully intuitive. So if you have to type in your url to get to your second page, you probably should put a link in there and make it so you can just click your next page. I'm using navbars use nav areas put navigation in your Footers. If you need to whatever looks good and fits your design and you'll meet the first criteria content quality and originality
Lewis Benson: So this means that you don't have any alarm Epsom within your page and you're unsplash images have attribution within your readme file. So whatever images you put within your readme file, you can kind of do this how you want. Just make sure the authors in there and explain that it came from unsplash. You can put the entire image in there. You can put a link to the image in there. Just make sure that you include which image and which author that you're referring to. so that we have some reference on that and we don't want to have to knock points off for plagiarism or anything like that. Integration of all the technology. So this would be using everything we learned through this quarter. So if you were to build an entire web application that doesn't have any JavaScript in it whatsoever. Then you're only going to receive 10 points on this.
Lewis Benson: If you were missing two of these then you'll probably receive zero points on the integration of Technologies. And any of these criteria that have a not achieved I'd like you to resubmit to get at least partial credit on it. Make sure that you're getting at least the minimum partial credit. So I would like to see all of the Technologies used though and potential employer would also like to see all of these tools that you're saying that if you're going to be presenting this to somebody on a resume and you're saying that you can use JavaScript bootstrap and CSS Then You're Gonna Want to demonstrate that and And the best way to prove it is to have a project code quality and best practices You're gonna have to put code comments in here. You don't have to go crazy with it. Just kind of explain what a function if you create a function. What does that function do?
00:10:00
Lewis Benson: Inside your HTML if you have an area that's knitted on dedicated to your navigation. Just put now area as a comment maybe have a section for pictures then have a comment that says pictures. If you have a carousel have a code comment that says this is the top of the carousel or this is the bottom of the carousel. I'm not too worried about to particular as long as you have code comments in there breaking this into a kind of a modular look. That would be sufficient for that and make sure in your JavaScript. You're not using outdated practices such as VAR. Or you might be missing or you strict make sure you have that in there as well. And then to read me with the Daily Reflection, I'll come back to this one whenever I show you the readme file and what that looks like.
Lewis Benson: And then it deployment on GitHub Pages or a similar platform. So you're gonna go to github.com. And you're going to go into the settings. Click Pages selector main branch and make sure this is accessible. We're going to need your final deployed link. Also, it's good to include your deployment link within your readme file so that we don't have to search for that or type it in manually. It can be done. If I wanted to find a deployed site, for example, this read me here. It's not currently deployed. But I would know that the deployed site is. Code demos dot github.io slash readme template with that. I'm going to share this link. I'll put it in the chat and I'll also put it within our Slack.
Lewis Benson: This is the code template you can clone this down. Just keep in mind. If you do do that. You're going to be in a repository. You could also just download this as a zip or you can click on Raw. I don't see it on mine. I think it's because I'm the owner of this. Let me open this up in a incognito.
Lewis Benson: So I can get it from your perspective here.
Lewis Benson: So I'll click on this readme and then here is raw. If you click on this, then you can just copy and paste this directly into your readme file.
Lewis Benson: And I'll show that process here in a moment. Here I'm getting that two Factor authentication warning. okay, so I shared that in the Chat, let me also share this in the slack. I want to make sure that everybody has access to this.
Lewis Benson: already So that is So go ahead and open it up and be ready to copy it. The next thing I'm going to do is create a new repo. I'm just going to kind of show you how to get started with this project. That way you at least have a starting point. So I'm going to create a new repo. And I'm going to select my demos organization. And the name of your repository should be Dash level-1 or something very similar to this. If you use camel casing that's fine. If you preferred minuses something similar to this one Capstone level one anything within this is fine just so we can identify what we're looking at during your submission. You're Gonna Want to make it public if not already your should be selected already. And I'm going to add a readme file.
Lewis Benson: So the repository is now created Capstone level 1 and I'm going to clone this down.
Lewis Benson: And let me open up my projects folder.
Lewis Benson: And I'm going to go to get bash here. If you're using a different.
00:15:00
Lewis Benson: Operating system. I know Iris here. You're switched over to Chrome OS so you may have to open up your vs code within that directory. And then work that way I believe Control Alt t on a Chromebook will open to terminal up. I'm not sure if right clicking has the ability to open the terminal within that folder. If that is the case. I would recommend doing that. If you press out T. You'll need to navigate to your projects folder. If you don't currently have a project folder, then you can create one at your current directory if you'd You would do that with mkdir. projects
Lewis Benson: And after you press enter I'm already in a You can then CD into projects. And that would allow you to get into that folder. And then from there you can do get one. and paste in the link from the Capstone level one and that's where we're at with the get command here is get clone and then the link We like just a little wider. So it's all online. So there's the command I'm going to go ahead and paste this and no. And then I'm going to see the end of that.
Lewis Benson: All right, so I'm in this folder. Let me open my vs. Code here just so we can see our empty readme it'll have a heading one in it. So here's our Capstone level one. So what I'm going to do now is go to github.com. Where I have my hemplay, and I believe I closed it. So let me go back into that link From the class slack I clicked on it. And then I'm going to click on the readme.md file. I'm going to click on Raw. And I'm just going to hit control a control C to copy this entire page. You can also just drag and copy if you prefer. And now I'm going to open up my vs code and paste that into that readme file. So again, I'm in My Capstone level 1 Project folder. This is going to be my actual project. I'm just going to paste that in.
Lewis Benson: Now I'm going to quickly go through this with Just so what's going on with it project description. What does it do? And why did you choose it? things like that just explain about the project. There's a pretty good description on here. what's required? what does it do? What a Technologies or methods used in any other relevant information that is a clear project a picture with the project is about The problem statement describe the problem. Your project is solving. An example of this project is a personal portfolio and it is used to Showcase my skills and abilities maybe a little bit elaborate a little bit more on that just a couple sentences is fine.
Lewis Benson: What problem does it solve if it's a guess the number game? You can say something like it provides entertainment to the user and showcases my skills and all of these Technologies and then you would list all of those Technologies. games are a little weird when you're talking about problem solving because it's typically not actual problem as more of it's solving a need to the user. Why would the user want to view it basically? and then Enough Daily Reflections, plug the date in here. And today's product today's progress. what did you work on? Did you have any blockers so I could say something along the lines of implemented HTML and CSS had issues with adding bootstrap from
Lewis Benson: fruit Swatch resolve this issue by changing the file path something like that. So this would be a blocker if I had an issue with adding bootstrap implementing HTML and CSS. That's the features we added and you could elaborate more on that as well. You could say
Lewis Benson: added main content
Lewis Benson: added navigation and added footer the more specific you are the better. This is for you I do want to see at least a couple sentences here I do. Ask that you might add a little more because it just looks better in your documentation. It gives you a better Showcase of your skills and it explains your thought process a little bit more. So you could also use this as a toll for if you're currently in an interview and they want to see something You could just read these progress reports to them and say so the first day
00:20:00
Lewis Benson: Working on this. I implemented my HTML and I had this issue with bootstrap. I couldn't get it linked properly. I downloaded the file from boot Swatch and I ended up resolving this by changing the file path. It makes a really good way to talk to the person that you're working with or you're trying to get hired by so that this is just a toll for you. Just a couple sentences is fine. Put as much as you like the more you put the better that is for We do have a section here for challenges and blockers. I'm not expecting every single one of these to be filled out if there's something that you don't have to add. Let's say this is kind of a grind for you today. you ground it out. You didn't actually like learning new skills.
Lewis Benson: Then you could just remove this section here if that doesn't apply to you, but if you might have picked up on something maybe you learned a new method. Maybe you found a new attribute in your HTML. Just go ahead and throw that in there again, that'll help you later. That's for interviews and reflecting back on your projects and seeing what you did. And goals and tasks for the next day. Again. This is the option on the biggest thing is today's progress. So Date two repeat the same and we have one for each day of the bra of the project. If you exceed five days, you can continue this on if you like again, this is for you, but I do need a minimum of five days worth of Reflections and here for the submission to get the full credit on that criteria.
Lewis Benson: The final reflection. This will be your final submission. So this is overall how you would reflect on the entire project. This is the reflection on day five. The difference is what did you do one day five. This is the entire week? How do you feel about everything you learned? So there is a difference keep that in mind whenever you're reviewing that. attribution this is going to be where you place your
Lewis Benson: Stuff for unsplash open source libraries used if you used anything off stack Overflow if you used any AI then you're going to want to place that here. even if you're using something like GitHub pilot if it generates a whole bunch of code for you.
Lewis Benson: Make sure that you include in the attribution utilizing GitHub co-pilot to assist with autocomplete something along them lines because a lot of that is generated and it's not all your ideas. unless it was your idea, exactly what you're gonna wrote and it just autocompleted it. that's a little different but if there's things in there that you didn't think of go ahead and include that in the attribution, you'll never be marked down on having attribution, but you potentially could be marked down if we suspect that you are plagiarizing code. There is a criteria for that so you could lose points on that. Installation instructions. I put this in here because this is a typical thing. You'll include in any readme file.
Lewis Benson: So anytime you're building a new project you want to tell whoever's going to be using your project because remember this is GitHub. It's an open source platform. Maybe somebody really likes your portfolio and they want to borrow the way that you build it. Then you want to tell them how that works with what we do so far. There won't be that many installation problem steps. It would be cloudiness down from GitHub open your preferred IDE such as vs code and
Lewis Benson: Begin coding there's no setup required for that. If you were to build say a full stack application with database API integration, then you would have to explain how all of that's being configured and set up you'd have to give step by step instructions on how to download all the packages required how to get the data database managed and how to set up your tables. If you have any external schemas, especially for using Cloud Solutions at all how to set those Cloud Solutions up and you have to give a full rundown on how this would be used and that's what makes a really good open source project. Usage what is the purpose of your project? And what would Expect it to be used for also. This here says including any necessary commands user instructions or examples. So if you have a user input available, for example, you have a guess the number game.
Lewis Benson: What is required to go into that input are there any terminal commands that are required to get this going such as creating a new file or something along them lines? And I just have a note in here. Be sure to update this readme with your Reflections and maintain it as a living document through your project. And not only serves as a diary, but the progress of your comprehensive overview of the Capstone project for anyone to visit your repository and what that means is potential employers can and will visit your Repository. Are there any questions about this Capstone at all?
00:25:00
Lewis Benson: one thing to note too if you do any Wire framing you would also include that in here a good place to that under project description You could create a new heading if you like at the bottom here. maybe underneath attribution you can put wireframe like this There's no set role on how these readme files are supposed to be laid out. You just want to include all necessary information and whatever format works for you. I'm using a layout. That's just popular right now. I see it all the time on GitHub and it doesn't have everything those ones have and it has some things those ones don't have. So again, these are very customizable put is as little as you want in here.
Lewis Benson: And if there's any of these headings that aren't being used such as additional information, you can always remove that if you don't like how that looks in here.
Lewis Benson: So I think that pretty much covers everything on the readme file. I'm going to go ahead and close this vs code instance. I remember I already downloaded that was my actual project. Let me open that back up For some reason I was thinking I cloned down my template.
Lewis Benson: This is my actual Capstone. Make sure I forgot to mention this at the top the Capstone project title. Make sure you update this to whatever you want to call your Capstone project. So if it's a portfolio put your name and portfolio if it's a car rental, you might put something like big Joe's cars or something like that, whatever you want to name the web page. You can be fictional characters that you're creating for this just as long as it looks professional. This is also where we create our file structure. Make sure you're using some sort of organized file structure here such as an index.html. and a script.jsstyles DOT CSS just use some of the more accepted naming conventions for this if you have a multi-page application, which I would definitely encourage you making at least two pages on any project you ever make
Lewis Benson: If that's the case, then your second page can be more descriptive of what it is because remember that's going to be reflected in your url. If you don't want the dot HTML to show up in your url. You can also create a new folder and create like I say a sales folder and then you can create a second index.html for this.
Lewis Benson: I'm just show you real quick with the differences. This is home. And this is sales.
Brian Kimbrow: Also, if you guys have any questions just make sure that you guys are actually reaching out and regards to this because the structure of the projects are extremely important. on
Lewis Benson: Yes. Thank you. So here I'm on the home page notice. It doesn't say slash index.html it can if I put that in there, but it doesn't have to so you can set up your homepage to take you right to the root slash. And then if I want to go to sales, I just type in sales. I don't have to type anything else in and it takes me right there instead of sales.html. And the reason that works is because I created an indexed on HTML within that sales folder. So that is an option you're allowed to use for laying out your file structure, or you could just create a sales dot Easier for you, and that would look like this.
Lewis Benson: And you'll get similar results except in your url. It's sales.html instead and it's blank because I didn't put any content in it, but it does exist. You can tell that because I don't get that air that it can't get. Okay, that's all the time I have for the lecture here. Are there any questions at all?
Lewis Benson: Yes, Ryan.
Ryan Arnold: will you be going over this week how to deploy it to get out Pages again or
Lewis Benson: Certainly, and if you get stuck on anything like that. I'll be through all of the breakout rooms. Each one of us is going to be in a different breakout room. That way you can share your code with me and show me your current progress. I'll just cover that real quick because it only takes a minute to do. So to deploy to GitHub pages. You go to the repo homepage. So I'm on Capstone level one. And I go to pages. And I set my Branch to Maine and That's all there is for GitHub Pages deployment. So hopefully that little bit of review.
00:30:00
Brian Kimbrow: Yeah, okay it's always kind of good to make sure that if you're working with pages to make sure that you deploy to Pages first because it'll show you if you have errors or anything as well. That's another way of. Actually checking to see if what you got is actually functioning correctly.
Lewis Benson: Absolutely. Yeah, so checking your deployed page as you're working every time you ACP and see those changes updated you could track that one thing to note about that the hoe don't forget to close your deployed site. Whenever you're done checking the changes because when you go back to start coding you might forget that you're on the deployed site and you're not going to see any new changes reflected. It's something I do all the time.
Brian Kimbrow: just I'm sorry, but then Lewis I just wanted to add one thing.
Lewis Benson: Are you good?
Brian Kimbrow: There was a lot of people that had cold and all that from the greater aspect of it, but a lot of people didn't have their Pages deployed as animated a little difficult year the cold and stuff for structured, but it was also People didn't have their Pages deployed, so it'll show you on the right bottom side of your page. You got your page to say where's deployed at the right bottom side of your page. and it just say Pages at the bottom and that's that you actually deported deployed it correctly.
Lewis Benson: Yeah and always just double check your links. Make sure everything's going the way you think it should I'm going to start opening up breakout rooms. Unless somebody has another question.
Ryan Arnold: And they're just the pages it just automatically updates as you add commit push.
Lewis Benson: Yep. It takes about 30 to 45 seconds to update and you could track that progress through the actions.
Brian Kimbrow: It can be slow sometimes too though. So you have to be patient with it as well because it can be slow.
Lewis Benson: I have seen it take several minutes before. there was probably six months ago. It took almost an hour for everyone's pages to update. I was just on GitHub the other they're having issues. But typically it's done. in a matter of minutes Okay, so I'm going to go ahead and open up the breakout rooms.
Lewis Benson: And you open up an extra one just in case we need it.
Lewis Benson: And then once we're in the breakout rooms again, I'll be around to see what your progress is on everything. I will be expecting you to screen share and show me your code just to ensure that everything's going And if you're stuck on anything, I can help you get through any bugs to an extent. I'll give you the guidance. You need to solve it. I won't give you the direct solution just because that's not really helpful to you. But I will show you how to find the answer and guide you to the solution. I'm going to open the rooms.
Ryan Arnold: Of homework quick question.
Lewis Benson: Yeah, go ahead.
Ryan Arnold: What was the link for the readme again?
Lewis Benson: I put that in the class slack and it's in the channel chat here as well. So it's in October cohort too. There's a link to it. Yep.
Ryan Arnold: Okay.
Brian Kimbrow: It's Umar still here.
Lewis Benson: He might have stepped away for a second. He's gone now.
Brian Kimbrow: Hey good news and bad news. The good news is I start the bad news.
Lewis Benson: Okay.
Lewis Benson: I don't matter whatever you want to do.
Brian Kimbrow: So I took the code and exam yesterday, right?
Lewis Benson: You took coding is him?
Brian Kimbrow: Yeah for the test that was a final exam. I needed to get a 80 out of 100.
Lewis Benson: Okay.
Brian Kimbrow: Got a 50 questions. I got 78 out of 80.
00:35:00
Lewis Benson: All right. Nice job.
Brian Kimbrow: That's I mean after your field in my mind because I was supposed to get a but
Brian Kimbrow: there's so many trick questions down there I know what my weaknesses now, though.
Lewis Benson: Yeah I know exactly how that feels. I actually just took it an A+ exam and
Brian Kimbrow: You know what? I mean? it's just like I know what my weakness is and they didn't give me it was open Notes, but it wasn't open notes. if you give them so I couldn't go in and…
Lewis Benson: Yeah.
Brian Kimbrow: Use the tools that I would use to fix on the answers that I would normally six. Oh.
Lewis Benson: why couldn't you did they disable copy paste?
Brian Kimbrow: because They would that the copy and paste it wasn't allowed.
Lewis Benson: so I actually found a way around that on my exams. Do you have gpt4?
Brian Kimbrow: one I do.
Lewis Benson: Yeah, let me show you this you'll love it. I'm still sharing, right? Yeah. let me open up.
Brian Kimbrow: you taught me a lot bro. That's what I'm saying. You taught me a lot. So I was aware prepared. and I tell my girl I was so bummed yesterday because I was so prepared I'm really pretty much caught up. I just got week six to catch up on grading.
Lewis Benson: Yeah.
Lewis Benson: Let's I think it was this one.
Brian Kimbrow: And there's every time I try to copy and paste it but to think about that test. Guess what? they had a camera on me bro watching me.
Lewis Benson: No, they were watching your screen, too.
Brian Kimbrow: Yeah. That's agenda developer Road like it…
Lewis Benson: I'll still show you this trick.
Brian Kimbrow: That freaked me out so bad, bro.
Lewis Benson: of Latina
Lewis Benson: Yeah, I'll show you this trick though. It's pretty funny.
Brian Kimbrow: That's what you show it to me get this thing to me, too. that's like…
Lewis Benson: Yeah, once you see what I do, it'll make sense.
Brian Kimbrow: how and
Lewis Benson: I got to find a quiz on here, though.
Lewis Benson: because these quizzes are hope that's a lab. You're back out of that.
Brian Kimbrow: never time all the questions to ask and I was a minute and 45 seconds.
Lewis Benson: It should be a quiz here somewhere. Here we go start exam. So these ones are the same way. I can't copy and paste out of it. so if I hit the control C,…
Brian Kimbrow: Mm-hmm
Lewis Benson: it doesn't do anything I can hit copy in here, but it doesn't have the option for copy in here. So all I do is I use my screen.
Brian Kimbrow: Yeah, it was probably some weird thing.
Lewis Benson: I use my Snipping tool.
Lewis Benson: And then I go to chat GPT. And I just paste it in as an image. If you have gpt4. It just takes the whole screenshot. And it uses object character recognition software to read the question.
Brian Kimbrow: All right.
Brian Kimbrow: That's crazy.
Lewis Benson: The correct choices for computer hardware list would be printer and motherboard. This is what I've been doing for my exams. Yeah.
Brian Kimbrow: That is crazy. I wish I would have known that…
Lewis Benson: Yeah.
Brian Kimbrow: but I didn't know what it would entitled until …
Lewis Benson: If you would have got caught screenshotting you might have eliminated you.
Brian Kimbrow: what I mean,
Lewis Benson: and if they were watching your monitor
Brian Kimbrow: But I didn't even know they were gonna be watching me like that. it's a Jr. Developer Road and it's like I'm not gonna know some of the stuff I knew and it's like I know I know these Etc but it got to
Lewis Benson: Yeah. so when I did was
Brian Kimbrow: It was the four Loops that got me. Because they made it seem as if it was.
Brian Kimbrow: An if and then it's just weird bro. you don't think it was weird formatting. it wasn't a diet.
Lewis Benson: Yeah, there's a lot to make it harder.
Brian Kimbrow: was like a word and then when I'm reading it if it is that…
Lewis Benson: I don't do well with word questions either I have a hard time interpreting them.
Brian Kimbrow: if
Brian Kimbrow: I suck at testing I'm gonna be honest with you I suck at testing but if you ask me to build something I could build it.
Lewis Benson: Yeah. Yeah, when I did a couple technical interviews.
Brian Kimbrow: I get anxiety when it
Lewis Benson: I had my tablet in front of my keyboard and I was on webcam and they were watching my screens, but they couldn't see what I was typing on my tablet and they couldn't even see that. I had a tablet in front of me.
Lewis Benson: So I was able to reference things that I shouldn't have been able to for my technical interviews. But I wasn't able to copy and…
00:40:00
Brian Kimbrow: yeah, and I mean That is the best I've done…
Lewis Benson: paste out of my code.
Brian Kimbrow: since I've actually been testing and stuff though but I did have anxiety. But I also knew what I missed it wasn't like, I'm questioning about this. It's like I'll get halfway through it and then I get stuck. As opposed if I had access to other tools. I can think if you get them can't GPT. I could be like What are the amount of minor things that I need to do to fix this? Because I know it's asking me to do something else. and then it asked me for Loop. the double functions, whatever you call the
Brian Kimbrow: You just went over last week. AR nested finally that's the functions.
Lewis Benson: a nested for Loop
Lewis Benson: a nested function like recursive or just a helper function.
Brian Kimbrow: Yeah, and I killed that though. I know for sure…
Lewis Benson: All right.
Brian Kimbrow: because you had just literally went over it like you don't say nothing like you just putting So that was fresh.
Lewis Benson: nice
Brian Kimbrow: I went over there I got there but when it came to them asking me to do. I don't know man.
Lewis Benson: I got a request for help here along.
Brian Kimbrow: It's the simplest stuff that gets me.
Lewis Benson: I'm gonna head to break out room one. Can you head to six and work your way up?
Brian Kimbrow: okay.
Lewis Benson: If you don't mind.
Brian Kimbrow: No problem.
Meeting ended after 00:42:16 👋