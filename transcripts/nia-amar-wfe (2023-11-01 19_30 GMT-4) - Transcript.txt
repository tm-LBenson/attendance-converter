nia-amar-wfe (2023-11-01 19:30 GMT-4) - Transcript
Attendees
Chantrice L, Daniel Perez, Elgin Sharper, Gregory Robertson Jr, Iris Coats, Justice Miller, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Reece Renninger, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: And look at my screen presented so I don't forget to do that.
Lewis Benson: Hey, welcome to week three day three. We'll be diving deeper into some more bootstrap components some practical applications as well. Today we're going to The Does anyone know What a breadcrumb component is. You've probably used it before but maybe you're not familiar with the term.
Lewis Benson: a thumbs up from Gregory there. I'll show a quick example of one they're on so many different web pages. It's a way for you to navigate a little bit easier whenever you're using. Pages that kind of Nest deep into other pages one I can think of in particular is actually on the Lowe's website. I believe Home Depot also has one I'm just gonna go to their website. And I'll show you an example of the breadcrumb. So I'm going to just kind of search for some random stuff here. We'll go to bathroom. And we can already see it starting to work because I went to bathroom. I'm no longer on the home. So it's giving me this breadcrumb on how to get back to home. It's showing me where I'm currently at and it's showing me how to get back to where I was. now if I click on something else
Lewis Benson: we can see that to get back to where I was. The breadcrumb changed a little bit here, but we can still see the slashes in there if I zoom in on that might be a little easier. If we click on another one, it just kind of shows me my navigation on how to get back to the start of all of this. So if I clicked on this one again, I can see that I can go back to home from here. And then that takes me back to the home and all the breadcrumbs are gone. So that's how they work in a nutshell and I'm going to show you how to build those today. We're also going to talk about. pagination at the same time We're going to be building multiple page applications. And these patent the pagination is just some numbers at the bottom so you can click on which page you want to go to specifically. So if you have
Lewis Benson: A large data set and there's 10 pages of results. You would typically have some numbers at the bottom and you can click on which page you want to go to and I'll show that with our code. So, let me open up my vs code.
Lewis Benson: We'll start a new file. index.html and I will import my boilerplate code.
Lewis Benson: And because I'm doing a pagination and breadcrumbs demo, I'm just gonna call my title page one so we can see in the tab which page I'm currently on. also
Lewis Benson: I want to put some content in here that we can see on each individual page. So I have my body. So I'll just do like an H1.
Lewis Benson: And we'll just call it page one. And we'll put a paragraph element. And say this is the content of page one.
Lewis Benson: And then when I make page two I'm going to do the same thing except that'll say this is the content of page two. all right, so Let me get bootstrap and ported in here. I still don't have that. Before I do I want to make sure that this is working me open up my Local Host. five is it 5500? Yeah.
Lewis Benson: So we can see our results there. We can also see that I have the serif font currently and I still have this margin and padding. So let's bring in bootstrap and watch that disappear. We have a my link place this in the head as we always do and then at the bottom of my body is where I place my JavaScript file.
Lewis Benson: We can already see the font changed. I remember the CSS link we put in we'll do all of the styling on this JavaScript link will do all of the functionality. For example, when we Implement at navbar and it has that little hamburger menu and we open up there's drop menus. That's all coming from the JavaScript. So we'll put that here.
Lewis Benson: Does anyone have any questions so far? This is a little bit of review. But if you do have any questions, make sure you do ask them. because if you get lost at the beginning it's going to be harder to follow along.
00:05:00
Lewis Benson: Okay.
Umar Z: Yeah, Lewis. Can you please do a quick recap, Especially the link you inserted. Below the title page one.
Lewis Benson: Yeah, so this is the CSS file that's coming from the bootstrap CDN. We can see this URL here. This is the same link you would use to do a CSS. We can see we have our rail style sheet here. The only difference is they added an Integrity attribute and across origin attribute and I'm going to remove this and reinsert it so you can see where I got that from.
Lewis Benson: So I'm going to go back to the bootstrap home page. And this is their landing page on get bootstrap calm. And I will scroll down to where it says include via CDN. And I'm just going to hit the copy to clipboard on the link and we can see all that content is in here. And then I'm going to go back to my vs code and paste it under my title.
Umar Z: So it's the same link. I got confused with the word integrity in it. I thought there was some other link or I'm sorry about that.
Lewis Benson: no, you're fine. So the Integrity is an attribute they added I think it has something to do with security so that This can't be used maliciously somehow. I'm not a hundred percent sure, but this sha 348 usually implies some sort of encryption. So this probably has something to do with security but it's beyond the scope of what we're doing here. And I actually don't know what they're using this for in particular it's probably something on their own server. so that when we get this delivered as long as it has this Integrity attribute, it works. I just copy it in and see that it takes effect. So yeah that attribute is there and it's also down here as well. and even has a slightly different code on it, so
Lewis Benson: Yep, no problem. All So in my body we can see the H1 and the content is there so that we lost all that padding. We lost all that margin. So the reset is also working. So if we need to add that back and we can later. So next I'm going to bring up the pagination docs.
Lewis Benson: And pagination and breadcrumbs both can be very confusing to work with because it's a lot of similar code across different pages. But each part is going to have different attributes to make this function properly. So I'm actually going to start with the breadcrumbs because it'll be at the top of the page as you seen on that lows site. I showed you they had it directly under their nav bar. So here's how they have this laid out.
Lewis Benson: I'm just gonna copy. This top one in so this is kind of showing how you would have this on multiple pages right now. So if we were on the home page Then this is the first link. You'd also. Optionally have it on your homepage. You don't have to have it there, but you can have it there to show where you're currently at. So if you don't want to include one on your homepage, then you can skip down to this one and put this one on your second page, but I am going to put this on my home page just for this demo.
Lewis Benson: And this is going to go at the top of the body. And this would typically go directly under your bar or under your primary header. If you remember on the lows, they didn't really have much of a nav bar at the top but they did have our search bar. Yes, Elgin. You have a question.
Elgin Sharper: Why did you use just the top of that just now?
Lewis Benson: Because let me show you real quick. if I use all of these Then it's going to display this right here with a home then a home Library data what they're showing here in this code snippet is how you would lay this out on multiple pages. So the first one would be just on your home page. And then the second one is going to be on your library page. And then the third one is going to be on your data page and the link to the data page would live within the library page and the library link would live within the homepage. They just kind of condensed all this into one code block. This actually probably should be broken into three different code blocks. Just to kind of show the difference between that. Does that answer your question?
Elgin Sharper: Iraq Yeah,…
Elgin Sharper: I understand.
Lewis Benson: Okay. Yep.
00:10:00
Lewis Benson: So I have this on here. Let's make sure that's working. And we can see we have a home up here and it's kind of grayed out because that's where we're currently at. We could make this also highlighted if we want to I'm Gonna Leave It kind of subdued. I'm just to make sure it's very clear that you can't click on this because it's where we're currently at. So there's no reason to click on it. I'm also going to put this inside of a container so that the stuff isn't right up at the edge of the page. So let me put that on my body.
Lewis Benson: Okay, so that brought it there and then on my I'm also going to put a class. And I'm going to add some margin top. I'll put a five on here. It's a little bit dramatic, but I just want to kind of bring this down a little bit lower. So it's a little bit more centered in the page, but still kind of laid out in a natural way if that makes sense. So this empty space up here would represent our nav bar if we had one. Okay, so that's page one for the breadcrumb and now I'm going to add page two for the breadcrumb.
Lewis Benson: So I'm going to create a new file and call it page two dot HTML. And what I'm going to do is just copy everything that's Into my page too, and then I'm going to modify my page two. To fit the content better. Typically, you would want to build out your entire page too, and then add your navigation and so in that case I would just copy in my navigation. So let's add page two and this is the content of page two. I'm also going to change my title to page two. So everything on page two now says page two. And I was in three different places that I had. That So now I'm going to grab the next link off of I'm actually gonna change this to page. I'll leave it at home and it'll change the other one to page two.
Lewis Benson: So I'm gonna grab the library breadcrumb now.
Lewis Benson: And bring this back in. So I'm on page two dot HTML. I'm going to highlight my nav. And I'm also going to put this mt5 class back on this after I paste because it's going to disappear. Let me do that next.
Lewis Benson: 5 remember that gives margin top and it gives the most amount of pixels of margin top, which I think was 48 pixels. If I remember when we looked at that last time. All right, so we have our home page here. So our href for this length with our home page is going to need to be our index.html. So I'm going to remove this hashtag. And insert index got HTML, so we have a link back to our home page. The current page to call it Library. I want to call it page two. Because that's the name of our page. Does anyone have any questions about what I just did here?
Lewis Benson: So one difference we can see between I'm going to go to index. We have this active on our home. And we're looking at this list item right here. And I'm gonna split my page two in my page one so we can see I'm side by side. So we have this active right here. And then on page two the active is actually on the page 2 Link so we can see that here. And let me close that sidebar. So we have a little bit more space.
Lewis Benson: that looks better so our page two is the active Li and over here. Our homepage is the active Li and that's one of the show the difference there. And now I'm going to go to the age. The browser again and show the difference between the two pages. So here's page one. I don't currently have a link to get the page two yet, but in my URL I can type page 2.html.
Lewis Benson: And here's page two dot HTML and we can see on our breadcrumbs. We have page two is kind of subdued but now we have a link back to the home page. So if I click on that link, it takes us back to page one. Does anyone have any questions at all about how I implemented this breadcrumb?
Lewis Benson: All So there's no questions. Then I'm going to start bringing in the pagination. The pagination will give me a link to my page too, so that I don't have to manually type in and up here in my URL. And they kind of work in a similar way. We'll still have active attributes. And we'll also not have links to the page. We're currently on just how this one has a hashtag for home. So let me go down to pagination.
00:15:00
Lewis Benson: And here's a sample of what this can look like.
Lewis Benson: with the little arrows and the numbers in between we have the lit up buttons.
Lewis Benson: So there's a few different options here. This one has the previous button disabled. With the two being selected you probably don't want your previous button disabled unless you're on one. I think they're just doing this as a way to demo this and show what it would look like.
Lewis Benson: And then we have And smaller versions and other Seasons don't have the arrows. They're just the numbers. And then we have this one's aligned in the center. This one's aligned on the left. So showing the difference on that how you can put this in the center of your page and notice they're using this attribute called justify content Center. This is a flexbox.
Lewis Benson: Movement remember when we do justify it goes across the main axis. So they're actually justify content Center as the last name, which would then apply the actual flexbox and everything and move it to the center. So we can add our display Flex justify content Center all with just one class name instead of having to type out the selector plus to two lines of code.
Lewis Benson: And then there was on the right and then down here. It shows all of the CSS involved. If you were to go into the actual bootstrap CSS file. This is what they have. They have their variables in their CSS variables and they're using some mixins there the SAS stuff. Don't worry about that. We'll get to that and front end three. Assassins just a different language for CSS that gives you a little bit more power over it.
Lewis Benson: Okay, so let's find a good looking. Pagination. I'm going to go with this one here. And let's just Copy to clipboard. It looks like we have a previous. And it has the link and then we have one two.
Lewis Benson: three and a next so let's just drop that right in here. And I'm gonna put this under my content. It's typically your pagination would go at the bottom or in a footer. I'll put it actually inside of a footer so it has a semantic element. And notice this is also a nav. Again, this is up here is also now if we have two nav elements on our page now. This is perfectly acceptable as long as the element describes the content. And in this case, this is navigation for the breadcrumbs. And this is navigation for the pagination and we can have a third nav in our header. That would be our navbar if we needed it so you can have multiple knobs on your page and maybe you have a fourth one on the sidebar. You might have a sidebar navigation as well.
Lewis Benson: And you could also have drop-down menus that also contain navs so you can have a lot of navs on your page. Just make sure we're using as many of these semantic elements as possible. So now we need to adjust our links here. So page one This is fine that this is going to a hashtag because we're already on page one. Previous is disabled. This is also fine because there is no previous before page 1 so I'm going to leave previous disabled. We have our page two and then we have page three. We don't actually have a page three, so I'm going to remove this. So now we're just left with page two and page one the href for page two. I'm going to type in page two dot HTML.
Lewis Benson: And the href for next is also going to be page two. dot HTML That way these are both wired up to the same page and we can get to either page the same way now when I create a third page. We would have a link to the third page here. The next would still take us to page two. It would not take us to page three.
Lewis Benson: Okay, so let me just copy this again since we only have two pages and I'm going to actually grab the footer as well. Copy go to page two. And on page two under my P tag, I'm going to paste that in. What we need to adjust this a little bit our disabled no longer should be on previous. So I'm going to remove that.
Lewis Benson: And we're going to put the previous or the disabled on to this anchor tag for next.
00:20:00
Lewis Benson: I seem to have lost it out of my clipboard already. Have to type it in. So this can just be a hashtag since we no longer have a link.
Lewis Benson: Being that it's disabled. This doesn't even do anything anyway, because you can't click on a disabled blink. And then our page two can be a hashtag because we're already on page two. And we're going to put on page two So there's the active class and I actually put this in the wrong spot disabled should be on the class.
Lewis Benson: There we go. So disabled and active and our previous needs an href now, we don't have one on there. href and that's going to be index.html. so our previous button will take us back to our home. Yes, Elgin.
Elgin Sharper: I'm sorry. I've had a little trouble trying to. Watch the screen and jump back affordable strap. Which pagination did you use?
Lewis Benson: I picked the one with the colorful buttons. I'll show you where that's this one right here. So it has a previous button that's disabled. And it has a few next buttons. So it shows the disabled active States. you could use either of these and have the same results. We do have to manually modify some of this code to make this wired up in work properly though.
Elgin Sharper: Okay.
Lewis Benson: So as you're looking at this you'll just have to kind of analyze it and see what makes sense and I'll go back through this code one more time after I get this wired up and working just to make sure everyone has their pagination working if you are trying to follow along. And going over it again won't hurt as well. It'll just kind of reinforce everything. I've showed so far.
Lewis Benson: So I believe everything here should be set. I probably missed something. I usually do. So let's just check it and see what I missed. page one We're already on page one and we can see page two is currently. Lit up on page one as well and it looks like our page one link isn't working. But our previous is so we have a couple things here to modify. Yes, Elgin.
Elgin Sharper: I'm sorry pagination. Is that going in both pages? I just want to page one and page two. All right.
Lewis Benson: Yeah, it's going on page one and page two.
Lewis Benson: So some of this is working if I use the next and previous buttons those are working but my highlight here isn't moving. So we need to adjust that and if we remember from the documentation, they had the two lit up by default and it looks like I put that on the wrong spot that goes on the LIE. I put it on the anchor tag, so that's probably why that isn't moving. So let me move that up.
Lewis Benson: This is currently page two so we won't page two to be active.
Lewis Benson: And I'm gonna go back to page one. And I'm going to remove active. And put it on. I'm going to replace this. Nope. Sorry, where's that a page wander Here's DLI for page one. And I'm going to add it to the class active. And we had an issue with one of our links if I'm on the home page. We don't go anywhere. if I click page two that takes us to page two and if I click next I'll takes us to next so that one's wired up correctly.
Lewis Benson: and then if I go back to page two Our previous is wired up to the home. One is an anchor tag. I need to change this to index.html. So it's also wired up to The home page, so one is now wired up to index.html. And on page two, we have page two as active. So when I look at this lie, we have the active class and we have our Disabled here on next I think that was working correctly. So I'm going to leave that on the anchor tag, and we'll just double check that.
Lewis Benson: All right. So my next is disabled on page two, my two is highlighted. If I press 1 it takes me to page one. My previous becomes disabled. My next becomes active and allows me to click it so I can click next previous or one two one and you can see our breadcrumbs up there also working. All right. So, like I said, I'm gonna walk through this one more time just to make sure that everyone understands the changes I made yes, Iris
Lewis Benson: you're muted if you're talking Iris.
00:25:00
Iris Coats: okay, so the changes you made on page two for the link to make it move over. if you add page three four five Etc each one would have to be changed, correct.
Lewis Benson: Yes, every time you add a new page you have to modify all of the code inside of the pages for it to work correctly.
Iris Coats: for the previous button. That would have to be adapted per page also wouldn't it? So you wouldn't go right to homepage each time you hit previous. Okay.
Lewis Benson: I'm actually gonna out of third page in right now that might help with Maybe some of those questions there. So to add a third page what I'm going to do instead of just copying all of the stuff in again. I'm going to keep using what I have here. So I'm going to actually duplicate page two. Since all of the content is already the same. And I'm going to call this page 3.
Lewis Benson: You could also just create a new file. Called page three and copy in the code from page two. But then we're going to start changing everything over to page three.
Lewis Benson: So our Our paragraph has changed my navigation here for my breadcrumbs also needs to change. So page two will remain.
Lewis Benson: But I'm going to create a new Li. And I'm going to paste it here. The reason I copied this one is because I want my current page to be the active one. So I'm going to change that to three. And then I'm going to copy this first one and paste it over page two. And then call that page two and the reason I did that is just so that my class name and everything is already set with one that is a link. So I don't have to change that and then I can change this from index to page two dot HTML. Everyone see how I just did that.
Lewis Benson: I just did a little extra copying and pasting to make this so we have indexes our home page two and Page Three is active and it does not have an href or an anchor tag. Okay, so the breadcrumbs should be good for page three. I'm going to do the footer and our pagination. So I'm going to do something similar here. Page three is going to be my active. So I'm just going to copy this active one. And just paste it directly underneath.
Lewis Benson: And then I'm going to call this three. And then page one is currently a link. So I'm going to copy that over top of page two so that it grabs an href. It has the anchor tags. It has the correct class names. I'm gonna paste it over top of it and then I'm going to format that. And then name And rename this index to page two dot HTML. And it looks like our links here are good except for the previous button. So currently our previous would be page two, but we have previous set to index.html. So we need to change this to page two dot HTML so that when we hit previous since we're currently on page three, it takes us back to page two Our next is going to remain disabled because we don't have a page four.
Lewis Benson: If I add a page four then I'll have to come back and change that with that note. This means my next on page two. Needs to be now activated. So let me go back to page two, and I'm actually going to grab. I'll just change it in page two so you can see that. So we're going to remove disabled from here. a trip is now going to be paged three. dot HTML for next so my next button is now wired up to page 3. And my current page is still going to be page two, but I'm going to copy page one underneath of page two. So that I have an active Li. And I'm going to rename this to three. And I'm going to rename this to page three and again, this can be really confusing. Doing this for the first time.
Lewis Benson: You just kind of have to read each line by line and kind of think about how the flow of this is going to be. So currently we're saying if we're on page two, our previous should take us back to index and that's what it's doing. So I look at previous it takes us back. So I'm going to go to the next line. Here's my index for page one. And page one is wired up to index. It's not set to active that makes sense. So now I'm going to look at page two. We're currently on page two. It's set to active our href is set to a hashtag that makes sense because we're on page 2 already. If we want to remove the hashtag that would just cause the page to h. That's also If you just leave that as an empty string that. I prefer the hashtag so that there's no accidental refreshes on your page. If you don't want to have that behavior.
00:30:00
Lewis Benson: And then page three is wired up to page three because we're on page two next is wired up to page three. Does anyone have any questions about that?
Lewis Benson: Again, I know that's a lot of stuff in there. Especially when you start adding in this Aria and then even there's active and have this Aria current page. This is good to keep in here. You can remove it and this will still function but this could mess up screen readers and it could mess up SEO. So keeping whatever Aria they have is a good habit. And then they have this Aria label up here. You could add a label if you wanted to. And say this would be like a label of what the pagination is for. What kind of content? if this was an commerce site, this could be cells items something like that.
Lewis Benson: but you can just leave that as three dots for now and if you ever forget to change an aria label from three dots while we're studying all this it's not a big deal. If you start working for a company you want to make sure that you're actually changing these so that you have that SEO. And you'll also get code review from senior developers. They'll go through exactly how I just did this line by line examining each line of code and explaining to you what's going on and making sure that everyone's on the same page and they also might give you feedback on better ways to do things. Maybe they don't like that. There's a footer here. Thatll tell you don't use a footer here. Just make sure you have the nav or maybe they'll tell you don't put this in a nav first, whatever reason you something else. they may have their own role. So just whenever you get a code review just kind of follow along with whatever roles they tell you. Okay, so let's make sure everything's working.
Lewis Benson: Go to page two. So on our next are both workable. So let's click previous. We're now on page one. We forgot to add page three to page one. So we'll have to do that. And we're going to page two we have our next on our three. And it looks like we have a typo here. Which is also breaking the three, but we can see our previous works and our next is disabled. So it's not uncommon to have things like this happen. We just got to go in and figure it out. It looks like we're missing our angle bracket here. So we're getting a little bit of HTML showing up.
Iris Coats: the photo
Lewis Benson: You seen it?
Iris Coats: page link page 2 it's not close.
Lewis Benson: Right here.
Lewis Benson: There we go. So that should have solved that part. So it looks like page two and Page Three are working. I hit previous it takes me to page two if I hit next page three, and then I can bounce between two and three so now I just need to update page one so that it has page three as well. And this is one of the more difficult things about using pagination. When we start getting into front-end Frameworks, this gets significantly easier because whenever you're using a front-end framework such as react you can do this in one file. And just plug it into all your other files and it will just kind of work out of the box. You don't actually have to do this modifying it on every single page. So that'll be a nice quality of life whenever we get there. Here's our page one. I'm going to paste this underneath and then set this to a three.
Lewis Benson: And set this to three dot HTML
Lewis Benson: and We don't want it to be active. And that looks like that'll work. So let's take a check and make sure. Next goes to two two goes to two and three goes to three. And if we look at our breadcrumbs if I need to go back to page two, I can just click on my breadcrumb. It takes me to page two. If I need to go back to the home page. I can go there and you can see those links are disappearing as we go as they're supposed to. And if I'm on page three, I can also go directly back to the home page.
Lewis Benson: So does anyone have any questions at all? About these breadcrumbs or about this pagination. Does anyone want me to add any more pages or is anyone having any issues with it?
Krystal Jefferson: I am that's only because I was trying to correct something of from earlier. I didn't realize that all I had to do is refresh the page, but now that I've gotten that corrected I'm kind of lost on this.
00:35:00
Lewis Benson: that's perfectly fine. Let's see if we can get you sorted out. Do you have multiple HTML files right now?
Lewis Benson: Are you in that state with this?
Lewis Benson: You're currently muted if you answered.
Lewis Benson: hear me Krystal
Krystal Jefferson: I created two more files.
Lewis Benson: Okay, and is there something in particular on here that you want me to go over or you just created the files? do you want me to go over the breadcrumbs again? and…
Krystal Jefferson: Yes.
Lewis Benson: then the pagination. perfect. So I'll create.
Lewis Benson: that's perfectly fine. I'm actually a little bit ahead on time. So this is good time to debug anyone or anyone who got stuck. So we'll take advantage of that time. So yeah, I'm gonna go over this again. So what I'll do is I'll actually create a new file here. And I'm gonna manually set this one up. so we'll do a page for HTML Dove you started in the index.html yet.
Krystal Jefferson: I have correct something from earlier.
Lewis Benson: Okay, I'm gonna
Lewis Benson: I'm actually gonna restart my index and I'll leave my page too, and I made page three alone. So I'll just do index and Page four and then that should be enough to help us get the page two and three wired up if we need to. So I'm just going to delete everything out of here for now. So we have our body and I gave it a class of container. We have our stuff LinkedIn and this is page one in the title So before I created an H1 and within the H1, we said page one. and then I have a paragraph element and within here I said this is the A page one so we can keep track of whenever I'm switching between the pages we can see this dynamically change.
Lewis Benson: So the next thing I want to do underneath of my H1 is place in the breadcrumb, so I'm going to go back to the documentation.
Lewis Benson: and click breadcrumb and because I'm on my home page, I only want to grab this first nav here. If I was on the second page, then I would grab this second nav and a thousand my third page I would grab this third nav, and if I needed more breadcrumbs than that, I probably grab the second or the third and just add them in.
Lewis Benson: So I'll grab the first because this is my home page. I'll paste that right there. and let's take a look and see that the nav or…
Krystal Jefferson: Okay, where you?
Lewis Benson: I placed it in the wrong spot. Let me move that up. I'm pasting it at the top of my body.
Lewis Benson: And I'm gonna give it a class. on this nav of mt-5 this is gonna give it some margin top. So it's not all the way to the top. this would leave room if we had enough bar. So we have a body that has a class of container. I don't know if you caught that earlier. And element has a class of mt5 to give it margin top.
Lewis Benson: Okay, so I'm going to check to make sure that this applied correctly by going to my browser. And let me go back to the home page because that's where they're working at and we can see our home. We see our page one. And this is the content of page one. So, this is our first breadcrumb. It is just telling us We're currently located on. That's all it does. It's telling me where I'm at.
Lewis Benson: So breadcrumb one is done. I'm going to go to page four. You would go to your page two. and in my page four I'm going to copy my index content into page 4 so I'm just going to grab all of this. And again, you're working in page two.
00:40:00
Lewis Benson: So for my page four, I'm going to add the other allies for my breadcrumbs. So I'm going to go back into the documentation to see what does how those are structured. and here they have this anchor tag I'm looking the wrong one to have this anchor tag. I'm going back to the home page. So you can either grab the entire nav and replace your nav. I'm just going to grab the Ally since I copied over my content.
Krystal Jefferson: don't mind.
Lewis Benson: And you can do this the same way on page two, just grab the Li. That has the anchor tag in it.
Lewis Benson: And we want to paste directly under the home page notice the home page is saying I paste it over. I want to go under it like this. Our current page should always be the active page or sorry the last page should always be the active page. So whatever is in your breadcrumbs the last item in your list because this is an ordered list on the last item is going to be active and it's going to have the Aria current on it as well. And this would be called for you page two. since you're on page two, but since I'm on page four, I'm going to call this page for
Lewis Benson: and the other thing I need to change is my title because I still have this as page one. You're going to change yours the page two. I'm changing mine to page four and also my content H1 and paragraph these also need to be updated since we copy this over. So I'm going to go page four. You'll go page two.
Lewis Benson: So let's take a look at the browser. pause here a second so you can Make sure all yours is good.
Lewis Benson: I'm going to look at the content to make sure that this is rendering properly. So I'm going to page one. We don't have a link yet to page two. So in order to get the page two, you'll have to type in your url. you'll type in page two like that. I'm going to type in page 4 so I can get to my fourth page. You'll type in page 2 though and then you want to make sure that your page two is grayed out. You can't click on it. Your home is a link and you're heading and your text has the correct content in it. So that would be the correct setup for breadcrumbs on a two-page application. Because I have four pages. I'm gonna add in quickly my other three links. And I can do that using my Homelink here. Also, I need to update this href here. Sorry, I forgot to mention that index.html for home.
Lewis Benson: This is on My second link is going to be page two. So I'm just going to copy this home link paste it in. changes index to page two change this link to your page two. And then I'm going to add in my page three and four as well. Again being on two on page two you would only add in.
Lewis Benson: I have an extra link. An your paid you don't have to add any extra links. If you're on page three, then you'll have to add in page two and page one. And I'll call this page one just so it's clear.
Lewis Benson: So it should look something like this if you're on four pages. Yes, Krystal.
Krystal Jefferson: I'm not sure what I'm doing wrong. Let's see. I'm on page two.
Krystal Jefferson: I'm not sure if I did it, right.
Lewis Benson: So here's my current page, too. You should look a lot like this. The stuff I have highlighted is the stuff that we would have written so far.
Krystal Jefferson: Okay.
Lewis Benson: So my page two is currently an active class. And it has this Aria content on it. And I gave it the page two and make sure this is inside of the list item. On and up here my home page. Is inside of this anchor tag? And it has a index.htmlhref. And the home is inside of the anchor tag.
Krystal Jefferson: I think that's where I went wrong.
00:45:00
Lewis Benson: And again this can get really confusing just because we're dealing with so many pages. And they all have such similar names.
Krystal Jefferson: because where the index HTML is I have a hashtag. So I think that's where I went wrong.
Lewis Benson: That would be the link back to home just replace the hashtag with index.html. That's not going to affect your content…
Krystal Jefferson: Okay.
Lewis Benson: though whenever you look at the browser. if I got a page two, you should see. Everything I have highlighted you shouldn't have this down here yet.
Krystal Jefferson: Okay.
Lewis Benson: Let me comment out my footer.
Krystal Jefferson: I think I got.
Lewis Benson: What's that?
Lewis Benson: You got it. Okay.
Krystal Jefferson: Think so.
Krystal Jefferson: use it you said that
Krystal Jefferson: wait Okay,…
Lewis Benson: It should look like this.
Krystal Jefferson: I got it.
Lewis Benson: Yeah, and we're gonna add this in next. And so I'm gonna go back to page four.
Krystal Jefferson: Okay.
Lewis Benson: And I'm going to place this underneath of my paragraph element. So here's my paragraph. Here's my H1. I'm going to place it in here. So let me go back to documentation to retrieve the code.
Lewis Benson: Let's go to pagination
Lewis Benson: and then I'm going to scroll down. Until I find the ones with the lit up buttons and the reason I'm using the one to let up buttons is just because I like having it telling me which page I'm on. So that's really the only difference there.
Lewis Benson: So you can just copy this entire thing.
Lewis Benson: And the one I'm using is the one that says disabled and active States. I'm just going to paste that So now this is where you have to kind of go through and think about how all this is going to work being that your own page two. You don't want to have this disabled class on your previous button. But you do want to have this inside of your index.html. So if you pasted this inside of your index.html, let me go back to that one.
Lewis Benson: Where is it? That I delete it. I'm sorry. I forgot how I was rebuilding my index.html.
Lewis Benson: Here we go. All right, so I'm on the same page as this is inside of my index.html. And I just pasted this underneath of my paragraph element. So previous does need to be disabled on the homepage because there is no previous page if you're on index.html. This is the root page. So this part is correct. the next part is one and it's set to this hashtag. This is also correct.
Lewis Benson: Because We're on the home page notice that we have active on page two. So if I look at this lie for page two Li is active here so we actually need to move this.
Lewis Benson: to page one
Lewis Benson: So that is now on page one, and I'm also going to move Aria current page. So the data On page one. This is an optional thing. It's best practice to have it on your current page. But if you don't want to mess around with that, you don't have to and then we format that. So page one now has the active class and this Aria attribute. and it's showing the page one page two should have a link to page two. So instead of a hashtag. I'm going to put page 2 dot HTML.
Lewis Benson: There wouldn't see how I did that. Here's my anchor tag for page two. This is my list item. That's surrounding the anchor tag and I just changed the href to page two dot HTML. And now I have a page three dot HTML or since I have three pages or four pages. I'm also going to update my next link to be page three to HTML. If you don't have a third page, then you could delete this link if you needed to I can comment it To show you that but I do have a third page, so I'm going to leave three and I'm going to have page 3.html.
Lewis Benson: Okay, and I also have this next link right here. Since I'm on the home page index.html, this should be page 2.html because the next page I would go to using pagination would be page two. So next is set to page two dot HTML. And then I'm going to add in my page four as well since I have one of those. And I'll just change that to a 4. And change that to a 4.
00:50:00
Lewis Benson: Do you need me to go over any of that again or are you good on the pagination
Krystal Jefferson: I think I got it.
Lewis Benson: If it's broken, when you look at it, let me know and we can see if we can debug the problem. So I go to my home page your previous button should be disabled. And if you only have two pages, then you only have one and two here unless you include it extra links.
Lewis Benson: If I look at my code again. You can see I have link for page four. I have a link for page three. And I have a link for page two and as well as page one.
Lewis Benson: Yes, Elgin.
Elgin Sharper: So the disabled active and are your current that's all on it. you adjust that to the page that you're on?
Lewis Benson: Yeah, so the disabled would be if you're on the home page or on the last page and you would either put this on your previous or your next depending on which one you're on. So if I'm on my homepage my disabled will be on previous…
Elgin Sharper: free
Lewis Benson: because if I'm on page four. Then my disabled will be on next because there is no next page after page four. The Aria current goes on your current page and…
Elgin Sharper: we're
Lewis Benson: you're active attribute also goes on your current page.
Elgin Sharper: Gosh, all right.
Lewis Benson: Other than that the rest of these links are going to be identical and I can actually make The same as those by making it one line.
Lewis Benson: So these three links are the exact same. This one is slightly different because it has this extra attribute and it has this extra class. And my href on my current page, I set it to a hashtag. I can set this to index.html I can also leave it empty. I'd also doesn't hurt anything. So if you want to just make all of your atrifts the page that they're representing you can do that as well. I'm just keep in mind. If you do this. It will cause your page to Whenever you click on the link that may be Behavior you don't care about that's fine. There are times that I say you have a calculator application. You're probably not wanting your page to refresh every time you click a button on the calculator. So there are times where you want to use a hashtag instead?
Lewis Benson: Okay, so I'm going to copy my Pagination over to my page four, so it's up to date. I'm just going to paste that in actually have it here. I'm just gonna paste over top of the current one. This way it gives me all four links. Because I'm on the last page. I need to move my disabled from previous to next.
Elgin Sharper: 
Lewis Benson: So here's my next and that goes on the class. for the anchor tag And my page four I'm gonna change this to be a hashtag because I like using the hashtags and then I also need to get the active class. I'm going to remove that off of this one. And that's going to go into my page four class. And I'm going to give it this Aria current page.
Elgin Sharper: 
Lewis Benson: And that goes right here outside of the class. We create a new attribute called Aria current. And then my page one needs a link to index.html. And I'm going to make this all one line again so that it matches the rest of these.
Elgin Sharper: H H
Lewis Benson: This part's optional. You don't have to do that. If you don't want I just think that makes it a little bit easier to see when they're all perfectly lined up with each other. And this one also. Sticks out a little bit further because that's the one we're currently on and again because I'm on the last page. I don't have a page five. I disabled my next button and I enabled button. However, my previous button has to have a trip to work properly. So I need to add href equals. And this is going to go back to page three. page 3 dot HTML
00:55:00
Lewis Benson: and then let's make sure that page four and the home page are both working. So if I click page 4 it disables my next button, we can see my breadcrumbs. Look good up here. I have four three two one. If I go back to page one. My previous is disabled and I can click on one two three on these haven't had the fourth link added to them. So let me add that quickly.
Lewis Benson: And I'll just take this 3. And I will paste it in here.
Lewis Benson: And we'll Make that a four. Disabled will not be on page 3 anymore because I have a fourth page and we're going to link this to page 4.html.
Lewis Benson: And that should work for page three If I go to page two, it'll be the same thing. Page two isn't disabled because it wasn't my last page. Let me add in this link page and I'll make sure all of those are working. One two three four. We're disabled. Our breadcrumbs are not complete. I'm not going to do two and three right now just because Yeah, they' good breadcrumbs are good. I don't want to make sure these work.
Lewis Benson: And they do seem to be working. I did relay label this one to page one on page for and then I got a page three. It's on home. It's kind of like how Lowe's had theirs. They actually changed the name of one of the breadcrumbs at some point. So not too worried about it. Does anyone have any more questions about the pagination or the breadcrumbs how this functionality works? Can you see the use case for this if you have a large application and you need to navigate through a whole bunch of pages? You probably ran into this at some point somewhere. There's lots of web pages that have multiple search results. For example If I do a Google search at the very bottom they have paginations so you can go through the search results that way.
Lewis Benson: Okay, so let's take our 10 minute break.
Lewis Benson: and when we get back We're gonna kind of refine some of our grid system practice. We're going to implement it just a little bit more kind of go back over that one more time. We're going to introduce the card element again. We talked about that briefly. I'm just kind of show where we can use that and what we're gonna do is we're going to kind of build a Product page for if you were doing an commerce site you would have different products available to buy. And then you would want to include a price maybe a Buy It Now button or something along them lines just so we can practice using a layout system like cards with a grid system. All right, so I'll start my 10 minute timer and that's what we do when we get back.
Lewis Benson: I'll see you in 10.
01:05:00
Lewis Benson: Okay, welcome back everyone. Before we move on to this product page. I just noticed it actually two more components. I need to introduce to you before. We dive into that. There'll be in the assignment so. I need to show you And the reason we need to introduce these components is because some components in bootstrap. They won't work out of the box out actual JavaScript and what I mean is the link we're providing if I go back to their home page. This link right here won't work on every component. There's some that we actually have to include more JavaScript than just that so I want to show you how you can Implement those with very little knowledge of JavaScript and our case. We haven't introduced it at all yet. So I'll show you how we can use those components. So let me go back into the docs and the components. I'm referring to right now specifically.
Lewis Benson: there's a tool tip?
Lewis Benson: the other one is the similar. What was it called? I'll come back to that. We'll start with the tool tip. I'll pop over was the other one's thinking of.
Lewis Benson: So here they actually have some raw JavaScript that we can use. and here is the element that they're using it on. So what I'm going to do is I'm actually just going to copy this element in first. And I'm gonna go back to go to my page one. And it's going to go in my content.
01:10:00
Lewis Benson: What I'm going to do is create a
Lewis Benson: class container just so we have a little bit of space to work with. I'm going to paste it in right there. and format
Lewis Benson: So there's a lot of stuff here.
Lewis Benson: But let's take a look and see what it looks like.
Lewis Benson: So we don't have anything new on the page this little on the wrong page area.
Lewis Benson: So nothing's working on these tool tips. And that's because we haven't included any actual JavaScript to make them work. let me show you how that works. And I'm also going to show you how to use this because this is a lot of stuff right here. When we look at everything I just pasted in there's more here than what we actually need. So there's a few important pieces to this. We have this data bootstrap toggle attribute and is data bootstrap title attribute. These are the two attributes needed to make
Lewis Benson: this component work correctly. And again, we're on the tool tips component here. So first thing we need to do is grab this JavaScript. I'm just going to copy that to clipboard. And I'm going to go. Into my code and at the very bottom of the page. There's a script tag here. I'm going to create a new script tag. And this works a lot like the style element inside of HTML where you can write CSS, but instead of writing CSS between two script tags. We can write JavaScript. So I'm just going to paste that in.
Lewis Benson: And again, you don't have to know JavaScript in order just to paste this end and make it work. But I do want you to notice one thing about this. It's this piece right here. We can see this data bootsrap toggle equals tool tip. This is what is actually going to make it work. So whenever I create the element we want to make sure that the data bootstrap toggle attribute equals, whatever name we're trying to use the tooltip on otherwise this won't work correctly. So this is about the only piece of the JavaScript you need to understand at this time is making sure this the attribute in your HTML the rest of this you can just ignore for now and this is actually really Advanced JavaScript that they provided for us here. So we probably won't even get into most of the stuff. We see here to a level four when we get into the backend development. So let me save this it's going to format.
Lewis Benson: I want to add those Here is the bootstrap toggle tool tip. That's the one we've seen in the JavaScript below. And heres These are the only two we need. This works a lot like the title attribute.
Lewis Benson: So I'm going to change the actual title once we get there. So Sorry not delete I cut that out. So I can delete all this and I'm going to create a button. I'm going to give it a class. of BTN and BTN primary
Lewis Benson: this will just give us a blue looking button and This is our tool tip example. So that class or that stuff like out of there earlier. I'm going to paste it in now again, so this is data bootstrap toggle tooltip. And then another one here too. It says so I'm actually gonna change this text here. This is the text. You will see and the pull tip.
Lewis Benson: I just want to put a lot of content in there while I'm making this so long. All right, so we have our tool tip example inside of the button. So we have content within it and I just gave it this class so that it actually has a little bit of styling on it. And I'm also just going to give it m Dash three margin so that it has some space around it. Okay, so let's take a look at this Here's our tooltip example, and I'm just going to hover over it. And we can see That's the same text that I just typed in that attribute. So, let me just show one more time how You copy in this JavaScript? you take it down into a script element and you place it in between the two script elements. So here's my opening element. Here's my closing tag. And I just paste it right here. And then after you paste it, you just need two attributes on whatever element you want to put the tool tip on.
Lewis Benson: And I'll show you where to get those out of the documentation. So you want to scroll over to you see a Data toggle tooltip and a data bootstrap title. These are the two attributes you need and this is the only thing you need to make this work. So I'm just going to copy those out of there.
01:15:00
Lewis Benson: And I'm going to paste them into my button. I'll delete this out and paste it in just like that and then I'm going to format it. And then you can change this title to be whatever you want to have pop-up.
Lewis Benson: And then when I go to the button and hover it we see that little pop-up. And again, this is the same as the HTML title attribute. That's how it works. But it uses JavaScript to actually create this little loading bubble above it. So you have to use actual JavaScript to implement it and this one won't work right out of the box. And I'm gonna show you now the popover it'll work the exact same way as this whole tip almost right down to the last copy and paste. So if you didn't quite get this one follow along with the popover and it's the exact same process. So let me go to the popover. I'm going to copy this JavaScript. I'm going to go into my vs code. I'm going to create a new script tag at the bottom of my body. And I'm going to open it up so that lots of space in the middle of it and just paste in that JavaScript.
Lewis Benson: And then I'm going to save it. And again, we can reference the element or the here data gle equals pop over. And notice this one is data bootstrap toggle tooltip. These have the same attribute name when I highlight these you can see they're both highlighted. That means we cannot apply a pop over if we're using a tool tip. We can only pick one of these because they have the same attribute name. So JavaScript can only find one of them so only one can work.
Lewis Benson: So I'm going to create a second button, since I can't use the same one.
Lewis Benson: And I'm going to give it a class name of Vtn. I'll do warning for this one. There's a different color and I'll give it margin three and this all needs to be in quotes. I noticed that little shortcut there if you highlight something. And press quotes it will wrap everything in quotes. And then I'll put my equal sign in.
Lewis Benson: And let's give some content. This is our pop example and now I need to grab my Bootstrap data toggle popover. I'm just gonna grab that out of the documentation so you can see where to get that from
Lewis Benson: and we scroll down to it. So here we have our pop over data bootstrap title and this one has a third one. I forgot to mention. This one also has data bootstrap content. That's also important. So let's grab all three of those.
Lewis Benson: And we'll grab the ending quote. So we have three attributes for a popover and two attributes for a tool tip.
Lewis Benson: And I will paste this in as an attribute on my button. So make a couple new lines here right above my class paste it in. And we have the toggle for popover. You can change the title to whatever you want. So we'll call this hello world. And the content we can change this to whatever we want.
Lewis Benson: And whatever we're going over the assignment if anyone has questions about this or has any trouble let me know then and we can go over that then I do want to get through the product cards because those will be a little bit time-consuming and they're gonna be the more difficult part of the assignment. But again, this is three attributes. And two lines of JavaScript that we grab from one copy and paste and that's all we need to make this work. So let's bring that up. And here's the popover example for the popover you have to click on it. So I'm going to click and we get the little pop-up and we can see my Hello World title and the content of my popover.
Lewis Benson: And is there any questions about that? If you do have any questions, let me know.
Lewis Benson: If you're having difficulties with it, wait till we get to the assignment for that and we'll go through the difficulties then but if there's actual any general questions about it, I can go over those now.
Lewis Benson: Yes, Iris
Iris Coats: the popover is it just used for buttons or is for
01:20:00
Lewis Benson: You can place it on any element. Let me show that real quick. That's a really good question. So I used a button just…
Iris Coats: What?
Lewis Benson: because it's easier I could also make this a div and it would work the same. and that's the same with the toltip as well. So if I have that as a div And I click on it. We still get the up. didn't put my closing tag in so it included this within that same div. I'm do that.
Lewis Benson: And I'm just gonna grab this content out of here. And I'm gonna place it on my H1.
Iris Coats: Yes.
Lewis Benson: The one thing you'll notice about this my H1 is a block element. So it takes up the full width of the page. So you might get it way over here. But if I change the width of my H1, I could say Style. with 200 pixels
Lewis Benson: and now when I click on it, it's a lot closer that way. So yeah, you can put it on any element as long as you couldn't put it on an anchor tag if it's nested inside of a button that wouldn't work because you're clicking on the button and you're not clicking on the actual element. There's some stipulations like that. But if it doesn't work where you have it you could just move it up a level to the parent element and see if it works there.
Lewis Benson: Is there any other questions?
Lewis Benson: Okay, so I want to get into the card now. And I'm going to do this on page two. I'm going to do it inside of my content. So just to make room I'm going to actually just push all this way down. And of course just way down just so we don't have all this extra code distracting us. And then I'm gonna instead of this P tag. I'll place it here. so for the cards I'm going to make this a two column card. Let me just throw up my figma real quick and show you what this is going to look like.
Lewis Benson: Over here. We got some more space. So this will be a card. And this is gonna have a container. and within that container I want to have an image on the left I use a diamond to represent that.
Lewis Benson: And on the right we want to have text and I'll just put some scribbles over there to show that.
Lewis Benson: So we're going to be using the bootstrap grid so that we can put this into. A row so we have Basically two sections here. I'll use divs for this because there's not really any semantic elements that make sense to encapsulate this stuff in That will have two divs.
Lewis Benson: One will contain our image and one will contain our paragraph elements. And this will be as a row. So we'll end up putting the row class on this div.
Lewis Benson: And once we have the row set. On the card. I'm actually gonna have to Nest this down a little bit and I'll show you what I mean by that when we start writing it but I'm going to have the road to make these horizontal. And then I'm going to have to make this into a column and this into a column so that the information is one on the left one on the right. So hopefully that makes sense and then I'm going to use some card classes in order to lay this out. So we'll have a title in here. And I'll just throw in an actual text block for that.
Lewis Benson: And we'll make it extra large. And that'll go at the top. So we'll have a title using the card title and then we'll have a card And within the card body, we'll have our card text and those are all classes in bootstrap and I'll show you where to find those as well. Now does anyone have any questions about what this is going to look like?
Lewis Benson: So we have an image on one side. We have text on the other and when we get on Mobile screen sizes, I'm actually going to have this throw the text underneath of the image. That way it looks better on a mobile screen size. That'll all happen. Without me having to add anything extra it'll just kind of work because that's how bootstrap is designed. Okay, so let's start writing some code.
Lewis Benson: So this is our page two, I'll go underneath the sage one a little bit. First I need to create. a container So I'm going to make a div with a class of container.
01:25:00
Lewis Benson: And just so I have some edge around my primary container. So we're not pushed up against our H2. I'm going to give this an mt2 margin top to before. just formatted that so hopefully this isn't too distracting with all those other stuff here.
Lewis Benson: So inside of here, this is where we're going to create our row and this is going to align the image and the text side by side. So we'll create a div. And this is where things can get really confusing because we're going to have so many divs whenever we're creating stuff like this. And again, there's not really any good semantic elements to use in order to build something like this. So you just have to kind of Work your way through it by if I click on this div, I can see the closing tag. And if I click on this div, I can see the closing tag. So make sure you're using your tools to help you navigate through this. And the column I want to use for this is going or sorry the row I want to use for this is just the basic default row. And I don't want to have any gutter. Because I want my text and my image to be close together for this. So I'm just going to tell it right now. No gutter.
Lewis Benson: And now we need a column to hold the image. So this row is going to have two children. But it's going to have a lot of nested things within it. So we're going to create another div. And we're going to give this a class of column and I'm going to use the MD so that this can do the stacking with the image on top of the text whenever I'm on Mobile screen sizes, and we're going to put four right here. And then inside of here, I'm actually going to put my image. And for now, I'm just going to use that placeholder that we've been using Place hold dot Co / 600 by 400 and then for the alt text.
Lewis Benson: I'm just gonna say placeholder for now. This would be a product description if we had a product on our page. So that's the first child of this row. Let me get this porter back out of the way again. And then the next one is going to be the text content. So we need another column for that. And that this is the second child of the row, so we're gonna have another div. With a class on it. And we're going to give this one a column. MD Does anyone know what number I'm going to use so that this all adds up to 12 if you were. Following the whole grid system from last week or sorry from yesterday.
Lewis Benson: That's all right. I'm going to use eight here. that way our text is taking up the rest of the page or images kind of small and then our text is going to be a lot larger.
Lewis Benson: So does anyone have any questions so far about anything I've done.
Lewis Benson: All right, so we're gonna be nesting some more stuff.
Lewis Benson: I actually am missing.
Lewis Benson: Another div. I'll put that in at the end. We actually need one for our actual card outline. I could put it on my container, but I don't like doing that. I like to have their own part of the components so we'll keep moving forward here.
Lewis Benson: Inside of here. We're going to need a card body So we're going to do div. class and this is just going to have a card. body
Lewis Benson: and then within this div we can place the Title of the card and I want to use an H5 for my title. I know I don't have an H4 and H3 or anything like that. I'm going to skip down to the H5 just for this card because I would assume that on a commerce website. I would have other titles ahead of time. If you don't have them then you would want to use an H2. Alright, so here's my H5. And I'm gonna give this a of card title
Lewis Benson: and we'll just say product name.
Lewis Benson: So under the H5 is going to be some text.
Lewis Benson: You could include a price in here too if you wanted.
01:30:00
Lewis Benson: I'll do a last updated type thing just and show you there's an HTML element. We haven't gone over and just want to kind of throw this in here, too. And that's the small.
Lewis Benson: And we'll do card text here and inside of this. This is an inline element called small. And it just makes your text small.
Lewis Benson: and we'll give this a class of text muted. I'm getting these from the bootstrap topography area if you wanted to. Find where to modify the type of text you're using.
Lewis Benson: We're typography So here is our headings we can see that those are on by default. Here is our small.
Lewis Benson: And this one has the text body secondary. That's just for this faded look here.
Lewis Benson: Does anyone have any questions about this so far? Let's see, we did a lot of changes. Let's see what we got so far on us I actually didn't put any comp. I did put a little bit of content there. I'll run page two. we go. So There's our product name. This will start to look a little better once I put a size on the card. And once I actually put Our class in here as well. That's one thing. I'm missing at the moment. So let me add that in. This is actually going to be another div. And I actually want to put this directly under my container. So I'm going to make some space here and let me find above my closing tag. I'm gonna make some space there that way I know exactly where this is gonna go. Sometimes you'll have to inject content inside of div. So this is actually a pretty good little exercise here. We isolate all of our inner content.
Lewis Benson: And we want to place this inside of a new div. So I want to create a div here. I'm going to make some space to it. And then I'm just going to drag that right in there. We'll format and then on my new div, I'm going to give this a class of card.
Lewis Benson: And we'll give it some margin.
Lewis Benson: mb3 And I'm gonna give it an ID for selection, and I'm going to call card I'll have to use a class because I'll just use the card class because we're gonna have more than one of these. So yeah, we'll use the card class if we have 30. cards of different products then we're going to want to have 30 different selectors. So classmates sense for that. Let me create a CSS file. Because I want to actually hard code the pixels of my card so that we don't have it extend too large. So we'll do a styles.css.
Lewis Benson: And we're going to select card. And just give it a Max width. I want to go with 540 pixels.
Lewis Benson: So that should be good for that. And then I just need to import that into my head of my document as well. link
Lewis Benson: and we'll put in Styles dot CSS. So the only style I'm really doing right now is this size just because bootstrap doesn't have a hard coded pixel size anywhere and their classes. you could create one. I guess if you go in and I'll download the file you could modify it a little bit. If you wanted to continue to do it that way but it's easier just to make a dot CSS and add the custom Styles you want. So let's see what that 540 looks like. And there we go. Our product name and description is currently on top of The image so that's something we'll have to address.
Lewis Benson: But our text looks pretty good. And part of the problem could be that I have a 600 pixel image. Let me do a quick inspect and see if that's still sitting at 600.
Lewis Benson: Yeah, so I'm going to use a few classes to kind of modify this a little bit. I'm going to put on my image I want to put a class on this.
Lewis Benson: And we're going to use fluid. Does anyone want to take a guess on what this does image fluid?
Lewis Benson: Thinking about how container fluid works.
Lewis Benson: Let me bring up the docs and I kind of just spoiled it there.
01:35:00
Lewis Benson: You were gonna say something no more as I use it unmuted.
Umar Z: Yeah, I was gonna say that it's gonna fit it inside the container size.
Lewis Benson: Yeah, and remember how we were fighting with images the other night trying to get everything to fit. Yeah, this is the solution that works pretty well for making your images fit correctly. It scales them properly. It makes a fit by default. You don't have to do all that object position and everything else. We're trying to do to make it work. We got to build in right here. So we could also add this figure image on there. I'm not too worried about that as long as it fits.
Lewis Benson: And We'll put rounded start on it. so it has some rounded edges. We'll take a look at that now. And now we got that nice rounded look at the beginning, but we're Square on the outside. So everyone understand what I just did there with rounded start.
Lewis Benson: So it puts the start of the image around it, but it doesn't affect the end of the image. if I do rounded let me just do the
Lewis Benson: then we have a rounded image here. And it doesn't have that nice sharp line.
Lewis Benson: Okay, so that gives us that nice sharp line. And now let me shrink my screen. I'm going to use my Dev tools to do it. We'll go into mobile view.
Lewis Benson: And I'm gonna pop this out. And place it over here.
Lewis Benson: And then we can watch this.
Lewis Benson: let's go to 100%
Lewis Benson: So there are card is set up for a product with the image on top. And the text on the bottom on mobile. So if we were on a cell phone this is what the products would look like and when we're on a desktop, it'll look like this. Does anyone have any questions about how we laid this Using that CSS grid I know that was a lot of code and I went through that pretty quickly. So just do a quick recap. We have to create a container. and within that container I put this in at the end, but I have this wrapper just to give it to card background and a little bit of padding at the bottom. You could technically put this on your container, but I find that it works better when you have it by itself. It leaves the less bugs whenever you just put the border on. the child of the container so considering
Lewis Benson: if you ignore this one because it's going to take up a hundred percent of the container. We look at the row next so we create a row so that our image and our text is left and right to each other. And then we're going to tell it to be a column. It's taking up four 12s of the space on screen sizes medium and above. This Is How We put the image on top and the image on the bottom is with this column medium here If I had this as column large, then it would take longer for it to switch screen sizes. So we want to have this on a little bit of a smaller one for mobile devices. And we use this image fluid class to make the image fit with inside of its container. And then remember this is two children. So we have one column here. And we have one column here.
Lewis Benson: And use your tools to find the end of your divs because remember look at the bottom of this we have div this is crazy looking it's hard to read. So you have to use your tools here and also you can collapse things so we can collapse our image. We don't need to see that. We can collapse this P tag. We can Work for now. We'll collapse this card body. And we'll collapse. the column and the column so we can see the two children that are in the row. We have two columns. And then if I open these up. We have a card body which contains all of the text content. And when we look at the text content, we have an H5 and a couple P tags. And then this has that little small with text muted. I didn't put any content in there.
Lewis Benson: So that actually wasn't very helpful to see what that looks like. Just put a last updated. Yes, Elgin.
Elgin Sharper: Is that what you got from Tupac topography?
Lewis Benson: Some of this come from topography. Which one's been particular were you asking about? I got the small from topography.
Elgin Sharper: I was just that's what
01:40:00
Elgin Sharper: okay.
Lewis Benson: The body card title and…
Lewis Benson: text come from the That's in the components. So if we go components card And if you look at the sample code here, we have this card title and card body.
Elgin Sharper: you ever
Lewis Benson: And We're almost laid out exactly the same. I got the heading for this is actually a little bit different than some. Designs, you'll see the heading is inside of the body and then we have our paragraph. And then I put a muted one at the bottom and I'll show you what that muted one looks like now, so we have our little last updated three minutes ago type thing here. Which doesn't really make sense for a product I guess but it would make sense for a comment like you're doing a social media application. Let me close my Dev tools.
Lewis Benson: There we go. And we do got a little bit of padding on the bottom. I think that's coming from this.
Lewis Benson: That I've put something on that.
Lewis Benson: It could be coming from the P tag as well. I'm not too worried about that right now. I could always start messing around with p0s to try to get rid of that. I can inspect it and see where it's coming from. Let me close that.
Lewis Benson: Yeah, so that would take a little bit of debugging to find. This type of bugs do happen. So if we just start clicking on these Here we can see. Nope, it's not that one. I probably have to Nest end of these a little bit further.
Lewis Benson: Yeah, I'm just gonna have to move on from this from now. I do want to know what that's coming from, but I don't really have the time to dive into it. So the last thing is if you have multiple cards, so I'm actually going to duplicate all of this. And one easy way to do it. We We know that this container here is the card. So I'm just going to collapse it and then I can copy it this makes it really easy to copy only the stuff you want. So if I start creating multiple cards They're not going to lay out quite the way we'd want them to. so in order to create these cards. We're going to have to create another grid system to contain all this so I'm actually going to use the main element for this.
Lewis Benson: And on my main I'm going to give it a class of container.
Elgin Sharper: 
Lewis Benson: And also give this margin top just so we're not pushing up against our navigation stuff or…
Elgin Sharper: 
Lewis Benson: our H1 in this case. This is just something I like to do is add a little bit of space in between my elements. And then inside of my main I need to create a column to hold a card. So each card would be in its own column,…
Elgin Sharper: 
Lewis Benson: so I'll put it in here first, but I'll have to duplicate it later. So I'm actually going to wrap it around this one. That'll make it easier to understand how this works. So that way each card is in its own column. We're gonna say div. class we'll do column 4. That's cold. We need to call them. so once we have the column if I do four that gives me three cards per column I mean
Lewis Benson: I think I said it right the first time. I'll just slide this up.
Lewis Benson: I want to take a look to make sure that that doesn't break it. It does modify that a little bit should be fine once I get it moved into the main.
Lewis Benson: And now I should be able to duplicate my cards. Now I'll have to tweak it a little bit to get that extra spacing out of there.
Lewis Benson: So there's two cards. Doesn't look like we have enough space to stretch it to the left and I think it's because of this container thing again. Let me see here.
Lewis Benson: Expand that up. I'm just gonna examine this real quick to see what I missed.
Lewis Benson: Yeah, it's that container.
01:45:00
Lewis Benson: I should only have one container.
Lewis Benson: And what else am I missing? the column md4
Lewis Benson: I don't have a row.
Lewis Benson: Let me undo real quick.
Lewis Benson: Column and before this is the column to hold the card. So I also need a row to wrap this card.
Lewis Benson: That way these are actually horizontal. So doesn't anyone have any questions about why I'm adding a row here. Because you can't have columns without a row that doesn't make sense to try to create columns inside of a container. The Columns have to be inside of a row and this row is going to be encapsulating all of the new cards we create and this is one of the nice things about working with divs. Whoops. Whenever you need to drag your closing tag, you can see how many closing tags we have here. So where should I put this closing tag?
Lewis Benson: And the answer is it doesn't matter. Because it'll figure it out. I can put it here here. It won't make any difference because these are all closing tags for divs when I format it'll just fix it.
Lewis Benson: and let's see if that fixed our Issue, we only have one card. So let's This is our card. So I'm going to collapse Copy And paste it in. There we go. So we have two across.
Lewis Benson: And I'll add another one in here. three cards and if I had a fourth one, it should wrap to the next row. And I'm going to add two more as well.
Lewis Benson: So now we have six cards on the page I do want to figure out this little Thing that happened with my image here. It's not too big of a deal but it does look kind of bad because of the curved Edge there. So I think it has something to do with how I'm nesting this container.
Lewis Benson: So that did affect that a little bit.
Lewis Benson: I'm okay with that.
Lewis Benson: margin bottom have that set to zero.
Lewis Benson: I have to do an inspect and As anyone else following along having the same issue.
Lewis Benson: With the image taking up 50% of the height. I may have to.
Lewis Benson: Stretch it.
Lewis Benson: So that it takes up a hundred percent of the height. I can do that in CSS. It's not ideal. Let me see if that'll fix it.
Lewis Benson: I might have to put an important on that as well.
Lewis Benson: Yeah, it's fighting with the fluid thing. I believe.
Lewis Benson: And this is where bootstrap can get pretty. sometimes a pain in the butt to work with because
Lewis Benson: If you're working with plain CSS, your changes are pretty straightforward. But whenever you're styles are dynamically changing just because you're adding classes to them. This can get to be a bit of a headache so finding these little bugs sometimes can be tricky. What I can do here. Is inspect my outer container. And I see that it has a height of 152 pixels. And this is kind of a hacky fix. I don't like doing this but I could set my height to 256 PX. I see what it's doing. It's actually stretching.
01:50:00
Lewis Benson: me inspect that particular spot
Lewis Benson: So with the fluid image, it's actually scaling my image down, but the image itself is taking up the same amount of space. I guess so it can keep it aspect ratio. If I make it taller using the actual and again this goes back to what I said before you have to modify your image sizes.
Lewis Benson: Yeah, that's exactly what it was. It's scaling it down.
Lewis Benson: And that seems to have solved it. But everyone see what the actual little bug there was that I was running into.
Lewis Benson: My image was scaling down so that it would maintain the aspect ratio and not stretch it if I let me put in an unsplash image and we'll see how that responds. We use this cactus.
Lewis Benson: Let me do a different image.
Lewis Benson: And we even get a whole different height out of that. So now this one is taking up the whole card. Because the aspect ratio of the image is taller than it is wider. Whenever I have this set to 600 by 400 the image is wider than it is taller. because this is a vertical rectangle. It has to shrink itself down and have extra space in there in order to actually fit properly again, it gets pretty complicated whenever you're working with images. It's best to set all of your image pixel sizes ahead of time before plugging them in if possible. If you can't do that, there are tricks you can use to manipulate the image pixel sizes. I can demonstrate that quickly. if I were to select my Give here.
Lewis Benson: I'm only going to be able to do this on one of these because I don't have time to add classes to every single one. But I'm going to say I can do it. I can use this column md4 and then grab the image directly after it.
Lewis Benson: column md4 and then it has a direct child of image.
Lewis Benson: So I like to look at here to see how this is laid out this element. We're represents the div or the class of column md4 and it's grabbing the first image in there. So if I look back at this page, we have this element and it's grabbing this image. So that looks good. and then I could say height is I want to go with.
Lewis Benson: 450 pixels and you can see what I mentioned earlier about the aspect ratio how it looks really weird now. It's like stretching that
Lewis Benson: Alright, so let's go back to 250 pixels the only problem with using this solution. Is it doesn't stretching grow the way that it should anymore.
Lewis Benson: So all of these are the same now. so if I say 200 pixels the problem I have is at 600 by 400. So I'll have to change that in my code and actually can show you a trick to do that quickly. If you run into an issue like this where you're using placeholder images you can hit this little search bar on the left. And then I can type in the pixel sizes, which is 600 by 400.
Lewis Benson: And then We can now make this. 400 by 600 instead And if I click this little button here, it'll say replace all.
Lewis Benson: and then if we look it changed the sizes of all the files, so they're not taller than they are shorter that didn't quite give me that empty space I was looking for so let me Add just a little bit more height in that we'll go So we'll say 400 by. 650 replace all
01:55:00
Lewis Benson: and now they're taking up the full space there on those. the changes separately 600 by 680
Lewis Benson: And now that one's the same, too.
Lewis Benson: Is there any questions about how I did this little layout?
Lewis Benson: When we start the assignment if you get stuck on this,…
Iris Coats: Can you show that little resizing thing again,…
Lewis Benson: I'll gladly help you through it.
Iris Coats: you just did?
Lewis Benson: With the search menu here. Yes, I click on the little magnifying glass.
Iris Coats: Yep.
Lewis Benson: And it looks for text. It finds it exact match. You can also do this match case thing where if you don't sure if something's lowercase or Capital you can click on that it'll find exact so if this x was A hit Max K match case. Let me put this up here go capital x it doesn't find anything. But if I don't have this checked it finds everything. So if you don't know if it's capital or lowercase. There's that solution. This one here is match whole word if I check this now. It's looking for everything between the quotes so it won't find any matches with that checked.
Lewis Benson: It did find the match. it must be because it's inside of the element here. But then you just click this replace all button with your new change underneath.
Iris Coats: All right. Thanks.
Lewis Benson: Yeah, and then that can update all of your sizes for those.
Lewis Benson: So now we have all of our products and this is very difficult to read
Lewis Benson: and if this is all expanded open reading down through this is nothing but divs so you can definitely see why you want to use as many semantic elements as you can where you can. Because this gets to be very cumbersome to navigate through.
Lewis Benson: fortunately this entire process gets a lot cleaner when we get into JavaScript.
Lewis Benson: Because you can automate this whole process which is a few lines of JavaScript.
Elgin Sharper: I
Lewis Benson: You have a question Elgin you're unmuted.
Lewis Benson: Okay, so let me go over the assignment.
Lewis Benson: If you've seen this assignment earlier, I actually modified it a little bit today because it had some. older stuff in it
Lewis Benson: from the bootstrapped for that's no longer in bootstrap 5, so I got rid of that and changed it. I'm such using It's the same assignment except there was a few class names that said to include that no longer exist. But it's still creating the same product page.
Lewis Benson: All So today's assignment you're going to be creating that crop product page.
Lewis Benson: Want to make sure that we import our bootstrap and our styling correctly.
Lewis Benson: Implement the breadcrumb component to enhance site navigation. You only have to do two pages. If you want you don't have to do a five page on navigation. Just get that bread crumb in there. And get the pagination in there.
Lewis Benson: If you have at least one of these that's good enough. If you include both, that's great.
Lewis Benson: add toll tips and popovers to provide additional information on products. So what I would expect to see there is let me go back to my Example here. I could put a button in here that has a pop over. So if I go back into my code where my pop over is, which is on my index. I'll use the tool Tip since it's right here. If I put this inside of my card, I can go right above my small text place it there. And then I'll have to grab that JavaScript. for the tool tip I'll place that at the bottom.
Lewis Benson: So something like this you could have your tool tip or your pop over which I told tips broken.
02:00:00
Lewis Benson: I grab the right one.
Lewis Benson: Make sure this is underneath my bootstrap. I don't think that was what it was though.
Lewis Benson: little tip hello world Everything is there refresh there goes.
Lewis Benson: So I would expect to see something like that have at least a tool tip just to give you some more information about the page. It doesn't have to be in a button you can put it on their title. If you prefer that. I just did the button just to show you what that could look like. So back on the assignment. I told tips and popovers to provide a different information again, you only have to show one of these you don't have to do both. And create a product display. So we're going to use the grid system to create a product display layout that's very similar to what I just did. And incorporate card components into your layout each card should contain an image and some text describing the product again. I just went through that. So it's fresh in our heads. If we have any questions about that I can help you out without it all.
Lewis Benson: Just let me know and then add additional styling.
Lewis Benson: as always we have the option for submission through GitHub as So here is the rubric. We just want to make sure we have all of the required elements again pop over or tooltip. We'll have a card in there pagination breadcrumb.
Lewis Benson: These are basically going to be the same if you have all of these then you'll meet this one as well. and as far as the content goes Do your best to make this look like a real content page? You can use these placeholder images if you want or you can use on Splash images. Either way is fine. But just try to have some at least one of your cards have a real image and an actual product name to show what that would look like. And then just you can use placeholders and lowering up some for the rest if you want. Does anyone have any questions about that?
Lewis Benson: Okay.
Lewis Benson: So let me start the 10 minute timer for the break when I get back from the break. I'm going to go over the GitHub thing one more time just to show you if anyone's interested and submitting through GitHub how that can be done. 10 minute timer
Lewis Benson: and I'll see you in 10.
02:10:00
Lewis Benson: All right, welcome back.
Lewis Benson: I'm going to quickly go over the GitHub submission again for anyone who wants to use that. So I'm gonna go to github.com.
Lewis Benson: And I want to create a new repository on GitHub. So I'm going to go to your repositories
Lewis Benson: and I'm going to hit the new button here. to create a new Repository
Lewis Benson: and again a repository is a folder that's stored on this Cloud platform and this Cloud platform allows us to share our code and have other developers work with each other to collaborate and it's the standard in the industry for how you would share your code. So we're going to put in a repository name. And this is going to be bootstrap day three assignment the same as our folder in the assignment instructions.
Lewis Benson: And I'm going to just put in a quick description. This is optional.
Lewis Benson: It covers cards. grid
Lewis Benson: pop overs pagination most full pagination wrongs
Lewis Benson: and this is just a way to keep track. If you want to have some sort of record of your assignments to see which assignments have what content in it. And if you're up breadcrumbs.
Lewis Benson: Something like that. And then we want to include someone quick to add readme file. If you don't do this, it makes things more difficult to add files. So we're going to create repository from there.
02:15:00
Lewis Benson: Once we created ito Here is our current repository. We're going to go to add file.
Lewis Benson: ops. Sorry, I went to the wrong thing I go to add file and then upload files. And then I wanted to bring my files in here. So I'm going to
Lewis Benson: Make this smaller. So I can see my desktop at the same time.
Lewis Benson: And here's my projects folder. And I'm just going to grab this demo 11-1.
Lewis Benson: I want to grab the files this time. I have been grabbing the entire folder. You can also just grab the files and just throw all the files in there. And that works the same as you can also grab the whole folder and just throw the folder on there as well. But when you do then you have a nested folder inside to repo. I just feel it's a little bit cleaner to have all of your files. And the nested part of the repo and then we hit commit changes.
Lewis Benson: And there they are and then you can And click on this copy button and grab that URL and just to show you open up a new browser. This will take me to the same place.
Lewis Benson: And then I can submit that one. Does anyone have any questions about how to submit with GitHub or any questions about the current assignment you're working on?
Lewis Benson: Okay, so if there's no questions, then I'll leave you to it. But if anyone does run into any bugs Let me know and I can help you get through those. If you have any questions about the popover or the tool tip if those aren't working for you, let me know we can try to debug those since I went over those pretty quick.
Lewis Benson: And I'm also going to bring my code up here.
Lewis Benson: And I'll leave it on this card in case anyone wants to reference how this looks.
Lewis Benson: And I'm going to stop the recording as well.
Meeting ended after 02:18:02 👋