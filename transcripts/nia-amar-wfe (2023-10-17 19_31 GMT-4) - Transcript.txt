nia-amar-wfe (2023-10-17 19:31 GMT-4) - Transcript
Attendees
• M a t c h a M o c h i i •, Chantrice L, Daniel Perez, Dianca Griffin, Elgin Sharper, Gregory Robertson Jr, Hannah Richards, Ike Steoger, Iris Coats, Iris Coats's Presentation, Justice Miller, Katherina Rosa, Krystal Jefferson, Lewis Benson, Lewis Benson's Presentation, Ryan Arnold, shaista umar, Umar Z
Transcript
This editable transcript was computer generated and might contain errors. People can also change the text after it was created.
Lewis Benson: Okay, looks like it did not yesterday for some reason. It booted, someone out when I clicked that
Lewis Benson: So today is day Two, we're going to be exploring some more of the HTML elements and attributes. We'll be going over the div span. We talked about header a little bit and footer. Let me get my presentation started.
Lewis Benson: Share the screen here.
Lewis Benson: So I'm going to start off by going back to my desktop and I have a couple folders here, we have the demo folder and then I have the assignment folder. And I'm actually just going to create another folder here and I'm just going to call it projects. And I'm going to put all of these. Folders inside of here, that way. I don't have a mess of files. Let me close my VS code.
Lewis Benson: I'm not going to reopen it.
Lewis Benson: And now as I'm working, I'll be able to have everything in one spot. That'll make it a little bit easier to work with. back into VS code. And I'm going to click this open Folder button. And open that folder that I just put on my desktop called Projects. And now I can see all those in here.
Lewis Benson: So we'll do a little bit of review. I'm going to create a second demo for today. I'll call this. Demo 10 - 17.
Lewis Benson: And inside of this demo folder, I'm going to create my first HTML file. Can anyone tell me what I'm going to name this file?
Iris Coats: Index.html.
Lewis Benson: Yep, Index.html. Thank you. And how do I start my boilerplate code?
Krystal Jefferson: Of the explanation point.
Lewis Benson: It's also called.
Ryan Arnold: With an exclamation point.
Lewis Benson: Yep, exclamation point and then I'm going to click the emit abbreviation. And this will generate the starter template skeleton code. There's so many different names for it. I've prefer the name boilerplate, just because that's what I've mainly used. But if you hear any of those other terms, it's the same thing. So, because This is going to be a new project, I don't like to have document as my title. I like to change that to something else. so I will just call this Demo. 10 - 17. I'll put a little pipe there and say HTML. that'll just kind of look nice in my browser tab. And then I'm going to put just a little bit of content in here. So if I want to put in a H1 heading, what element should I wrap the H1 heading in?
Lewis Benson: Do you remember?
Umar Z: if you press 8 and then click Package, One that
Lewis Benson: Yep, that would give me the H1 but I want to put this inside of a header element as well, just because it's more semantic and it's better for screen readers and optimization so that it can find this. So I type in header And I'm going to click this image abbreviation And because I have this. outside of the header, there's a couple ways I can do this. I can highlight it and drag it in. I can open this up. And then come down to this line, hold the ALT key and press up. there's different ways you can move your code around. Whatever you prefer. Some people would just delete Th1 and start over if they did that. And then I'm just going to put in Proof. The page works. And this is a heading that's going to describe what I'm doing right now. I'm just making sure everything's working that this will show up in my browser whenever I press this Go Live button here at the bottom.
Lewis Benson: And remember, if you haven't done, so yet, inside of my extensions here on the left, I hit this little extensions button. If you type in Live Space Server, it looks like this icon here. You can install this live server extension so that you can view this in your browser. So make sure you do that if you haven't yet. I'm going to go back to the Explorer. It's the two pieces of paper here at the top on the left Underneath the file button. And then I'm going to click back on my index.html and I could have all just clicked on the tab up here. But I just wanted to show you how to get back into the Explorer. So let me close this tab so we don't have that. Okay, I'm going to press go live.
00:05:00
Lewis Benson: And it's starting and that popped up in a different browser, tab, we'll bring it over here so We drag it up. So we see that this is proof that the page works and just to inspect and make sure my elements look the way they should. I'm going to come Into my browser tools. And my elements are on the left, my styles are on the right. That could change based on your screen size. Sometimes you'll have your elements or your styles on the bottom, and your elements on the top, just try to identify where yours are currently located. Whenever you look at this, and I'm going to open up the body because that's where all the content is located. And within the body, I can see the header element that I created. And I can see the H1 with the proof of life right here. So everything seems to be working correctly.
Lewis Benson: Okay, so can somebody tell me another element that we covered yesterday?
Iris Coats: the block quote
Lewis Benson: The block quote. That's a good one. All right, so I'll type then block quote and I'll press Tab to AutoComplete that and I'll put in a random quote.
Lewis Benson: And I will do a Yoda, quote.
Iris Coats: Haha.
Lewis Benson: I can type today and my formatter just put it back all on one line. That's fine. It's still readable. And I'm gonna minimize this and look at my browser to make sure that I must have minimized the browser.
Lewis Benson: Where to go. There it is. I got too many windows open. And there's our quote so we can see that that is So open up vs code again. So, I just want to go into the documentation on that real quick.
Lewis Benson: And show you that for those who may not have found that yesterday. And dn. So I just did a Google search for Mdn. I'm going to click on the top link for Mozilla and I'm going to search for Block quote and I can see that it has the HTML element. I could tell that by the angle brackets. And it also says it in the small print here Web HTML element block quote just to reference to see how this looks. And we can see that they have a citation as an attribute within their block, quote an attribute. Remember is Something that kind of describes the element, it's something the browser can read about the element and maybe get some more information and possibly even modify how that's being displayed on the page.
Lewis Benson: And we can see that it has this thing called site. And notice there's a closing angle bracket here at the end. I'll actually put this in vs code, so it's a little bit bigger. It might be easier to read. So if I go into my block quote here, but right before that closing angle bracket, that would be the greater than sign angle bracket. I'm gonna put a space there. And I can put sight equals and then this is where they had a Web link in there. I'm just going to put in my own Web link for the site. You don't necessarily have to put anything in there. I just wanted to show you what an attribute with a link would look like. So we'll do HTTP colon slash slash 127.0.0.1.
Lewis Benson: And It's an IP address that references your own computer. You might see a joke out there, sometimes it says there's no place like 127.0.0.1, that's referring to home. And this is also called the home route. So yeah, just to show you what an attribute looks like inside of here.
Lewis Benson: Can anyone remember any other elements that we covered yesterday? The paragraph.
Iris Coats: Paragraphs.
Lewis Benson: Notice the inside of my block quote, I'm not using a paragraph element. This is all standalone text. We should probably put this inside of a paragraph so that it's more Semanally. Correct. Currently this isn't incorrect. But again, search engine, optimization screen readers. They might not realize what's going on here and they might just skip this text, if it's not done correctly. So I'm actually just going to do the P. Like that. And I'm going to drag that right in Highlight it, I'm dragging and dropping it. And then I formatted it. Okay, so we have the p element. We have the header. The H1.
00:10:00
Lewis Benson: And remember, there's also other heading elements or header elements that we could use as anyone remember those
Lewis Benson: I only briefly showed them.
Lewis Benson: So, I'll give a little hint Here's the next one.
Ryan Arnold: We did h1h2. and we did one called or it's the one where the metadata is located, the head not header, but head
Lewis Benson: Yep, and that's right here. So with these h2 elements, there's this kind of roll of thumb that it's followed across the industry and it's stems back to when It was originally created first scientists it was a way for them to display their papers. And they would have these headings. On their paper so that it was formatted in a certain way. And they would only ever pull One h1. So we only ever put one H1 on our websites as well. And this typically goes near the top of your page. So you have one H1 and that's The main title. And then after that, you have an H2. You wouldn't skip. So I can technically make this an h3.
Lewis Benson: But it doesn't really make sense to have a heading without having a level two heading. First, you want to make sure that these are in order as you're using them. So you could have multiple. Headings that are the same. For example, I could have two H2S here. And that's acceptable, but normally you'll have some content underneath of each of these headings. So we would have something that describes put my P element in here.
Lewis Benson: I could say something like that. And then I'll just copy and paste this underneath of this other H2. And this would be correct. And now I could put another subheading within here as a Level three heading and I'm actually going to open up. Wikipedia, there's a lot of examples of this on there.
Lewis Benson: And we just search for something random like fish.
Lewis Benson: So I'll do a quick inspect. And we can see we have our h1 here. This will be the only h1 on the page. And if I scroll down, here's another heading. You see, this is an H2. and then underneath the H2, we have all of this content
Lewis Benson: and then we have another H2 with more content underneath of that. And now right here, I believe this would be an H3. So if I click on that, you can see in the elements here, it's showing this smaller heading as an H3 because this is a subheading of the evolution heading.
Lewis Benson: Does anyone have any questions about anything I've covered so far?
Lewis Benson: and again, it's not like a set rule. Yes Ryan
Ryan Arnold: Sorry, my classroom seems to be lagging a bit. the H1 and 2, elements is there an upper limit to how far you can go if you just keep making subsections and subsections does the
Ryan Arnold: What's the word I'm looking for? the numbering of The element have a cap essentially or do you just use as many as you need?
Lewis Benson: I believe that Max is at H5, I'm actually going to double check the documentation.
Lewis Benson: And goes up to eight six. And I've never actually used an H6 before.
Ryan Arnold: Okay.
Lewis Benson: I typically don't go past h3s when I'm and it is kind of like bullet points in a way, but it's more of that. You have a heading and then you could put bullet points underneath of the Fancier questions. Question justice.
00:15:00
Ryan Arnold: Right. Okay.
Lewis Benson: but yeah, so this example here, kind of shows that they have one H1 And this documentation here, then have an H2. An H3 and H4, and then they go back to an H3, and you can see the indentation here how this H4 is nested inside of this H3. And this H4 is nested inside of this H3, but notice that there's no larger heading nested inside of a smaller heading. So you have this H4 here, you wouldn't want to nest an H3 inside of that. I wouldn't really make much sense to have a inside of a smaller heading.
Lewis Benson: So, if you look at the indentation, it keeps getting smaller and smaller.
Lewis Benson: again this isn't like a set roll. I've seen people do it. They'll use an H4 without an H3 just because they want The smaller font size. I don't advise doing that because you can actually just change your default font sizes for all of these using CSS and inline styling, which we'll actually go into the style attribute a little bit today. So you'll get to see what that looks like, how we can change some of the font sizes. And maybe some of the colors as well. Yes, I want.
Umar Z: Here just for my understanding. So from age one to eight six as the way we go down from H1 to,…
Lewis Benson: It's decreasing the font size and…
Umar Z: I think that means that the phone size is decreasing and that's it.
Lewis Benson: it's also decreasing the font weight a little bit, so they're not quite as old.
Umar Z: Okay.
Lewis Benson: And those are just default styles that are created by the browser. Don't think of these as The biggest versus the smallest think of more of a hierarchical data standpoint. So This is the second most important heading because you can actually make this smaller The most important. How do you can make it smaller than the secondary heading? And there are some cases where you might want to do that. I've seen some portfolios like that where they say
Lewis Benson: Hello. My name is as an H1 and then I have Their name is an H2 but my name is actually in smaller font. So it looks a little weird but search engines, understand it better that way. so, it's one of those things where You'll have to play with the font sizes and stuff to just see what I mean. And we'll go into the changing font sizes. A little bit later today and our second hour, we'll get into the styling. But you can change all of these to be the same size too if you want to.
Umar Z: Another good question. What if we need 15 herrings of age 2 or h3 stars? So there's no cap on that. We can use age, we can repeat is to as many times needed.
Lewis Benson: Absolutely, and if I go open up this Wikipedia again you can see, there's a whole bunch of H2S here. They have one for, I'm not going to try to pronounce some of these scientific words, but etymology and then we have our evolution. There might be some more down. These are h3s being repeated now because they're under the same category as evolution. So, as I scroll down here, you can see there's an H one h3 right here. And then we have a second And then a third h3. And then eventually we get to another H2 again. And then we start repeating our H3 H3, and you can see how these are nested inside of the H2S. It's just a way to keep things hierarchal, and it's more. up for optimization purposes, it's easier to
Lewis Benson: The browser. Sorry we're trying to say if you were to search for this page on Google can read this quickly. I can see all of the headings first and then it can start looking at some of the content and it makes it easier to return results that match what you're looking for a little easier and that is an important concept whenever you're thinking about design is making sure all of these Elements are, you're using the paragraph and you're putting The heading elements in a way that makes sense. That way your website is more optimized.
Lewis Benson: you'll see a lot of people use divs for everything as well, and there's nothing wrong with using divs. I'm actually going to show you that right now. go into that element. So a case where you might want to use a div would be right here. So we have this Inside of our header and underneath of that, we have a if I start putting multiple paragraph elements in here, This is just going to have the same thing repeated three times. So I'm going to change this up a little bit. This is something else.
00:20:00
Lewis Benson: So we have something different there. And I'm actually gonna try to space this out a little bit. I just won't format it just so you can see where I'm working here. So you can see how everything here is getting kind of clumped together. we have this 2. What I can do is put a div here. And this div doesn't describe anything, it's just a generic. Divider. So that you can group your content together. Without having. Anything like, for example, this is saying that this is going to be a heading this paragraph. This is going to be text, a DIV is just a very generic container, it's like a box so you can group all this together. And where that can get useful is whenever you're creating web applications, you might have a small area that you want to have certain styles on.
Lewis Benson: And you can attributes to style everything. That's only within this div and nothing else. So everything's suctioned off in this voucher here. And it doesn't describe the content but it does give you a way to lay things out and you can use as many as you need to. Maybe you want to have your heading by itself. You can put another div inside of here and put all of your paragraph elements, inside of another box. So now this starting to look a little messy because they're all the same name, but we have a div parent container, and it has two children. I'm actually going to collapse this one. So it's a little bit easier to see. and you can see how we have this div and we have this H2, so, the parent div has two children and these two children are referred to a siblings and it's kind of, your normal lingo as far as parent-child things go But inside of this container here, that I collapsed, I'm going to open that back up.
Lewis Benson: We have three more children here. Yes, Ryan. The other question.
Ryan Arnold: Talking about dibs in sections, When would you want to use a section versus a div? Because they both effectively do the same thing. But you mentioned one was slightly different And I was just trying to remember what the difference was.
Lewis Benson: That's a good question. So the section describes the content it's saying that this is a section of the page or a section of an article. And technically I could use one here. I could turn this one into a section. But typically, you're only using divs whenever you're just trying to make a container that you're going to be adding styles to and you're not trying to do it for optimization purposes. I would add a section if I was trying to optimize this for search engines or screen readers. But having a section inside of a header that could make sense. My header could have two sections, maybe a left side, and a right side. but if I had all of this everything inside of my head or here is kind of grouped together,
Lewis Benson: And it's all one piece, then it might not make sense to use a section in that case. So I would use the div for layout and…
Ryan Arnold: Okay.
Lewis Benson: And I think you would see more examples of that as we build more complicated applications, and maybe when we build our portfolio Web pages, it'll make a little bit more sense. But yeah, no problem. And I would make an article element here. I don't know if you remember seeing this in a documentation yesterday. I can spell it correctly.
Lewis Benson: So, the article element is just used for an article or a story. So if I look back at Wikipedia again, The article would be the entire page here that you're going to read all this stuff on the left. It's on the page. But it's not everything in the middle here is part of the article. And then each one of these are going to be in a section. So this fish is the main part. And then We have a section here. And this might be a good example to show you where a div could come in. We have these images on the right here, they're not part of these two sections. They're kind of a standalone component that's part of the overall section. And you could use a div just to put these into their own little container and put them off to the right hand side of the screen.
00:25:00
Lewis Benson: So it's just mainly for laying out, your page, may styling, and just sectioning things off so that you can manipulate them easier. And again, that I think that'll make more sense as we actually start to use it and I can show you more real world examples of where you would use a div. But a lot of times, maybe you'll work for a company that they didn't use a lot of semantic elements. They might have older code bases. This whole concept is relatively new still using article. The section. It used to all be done with divs. that was the only way to create space in between things, because if I write text in here,
Lewis Benson: Without the paragraph element and then ops. And I put some text underneath it. If you remember from yesterday's demo, this is going to be on the same line. So, when I look at my example, we can see this is some text and this is also text and it's all on the same line even though in my Vs code. They're on separate lines. if I wrap this in a div, a div is considered a block element. And a block element means that. This element is the only element on this line. it'll be the only one. It takes up that line and I'll show you an example of an inline element. Next. And we'll put both of these in divs. And I know I could be using paragraphs here and I will switch these eventually. I just wanted to show you maybe if you're in an older code base working,
Lewis Benson: You might run into this, we're just div and even this would be a div. And we can see now that it's putting it on two separate lines.
Lewis Benson: And again that's because they're block elements now. If I use my selector tool, it's this a talk left corner of my Dev tools and I click on this. You can see if I just highlight it, you can see it goes all the way across the screen here. It's going all the way to the, And that's because it's a block element. It's not leaving space for anything else beside it. And then this one's the same way. And you can see all of these, they're going the whole way across the screen. And that's because each of these are block elements. This one. Is inside of a container and that's why it's not the whole way across, if I click on that. And we click on We can see this block quote by default has I'm looking at my box model. that's what this is called here. It's showing that I have 40 pixels of margin on the 40 pixels of margin on the right and 16 pixels of margin on top.
Lewis Benson: And the block, quote just comes with some styling by default that we didn't have to add. So whenever you do put your quote in there, it just kind of pushes it off to the side a little bit. So it's not perfectly lined up with everything else. It's kind of like how the H1 has a default font size that's bigger and it's also This comes with default margin already attached to it and we can also see that here. it'll say we're in display block and we have Some margin set up with one em, 1 em, and then we have 40 pixels and 40 pixels.
Lewis Benson: the EM is a unit of measurement. This is just kind of a side note. We'll go more into this later but it represents 12 pixels. I believe it comes from the old typewriters, that was the height of the letter M on the key. Whenever you press the letter that was 12 pixels tall. So that's where they got that from.
Lewis Benson: Does anyone else have any questions about? the difference between a div and article or how any of this layout works, has anyone lost right now?
Lewis Benson: Okay, so we can move on to. Somebody have a question Krystal.
Krystal Jefferson: Did. the block quotas are like a citation or something or
Lewis Benson: Exactly. It's a citation.
Krystal Jefferson: yeah, I can I miss That you were going over that. okay. I
Lewis Benson: And it's not necessarily required for a citation, it's just a semantic thing. And when I say semantic, I mean, it's kind of like best practice. I could replace this with a div.
Krystal Jefferson: Okay.
Lewis Benson: I just do Div.
Lewis Benson: This will still render on the page. It's not going to get that margin put in there by default anymore. but I can add that margin and…
00:30:00
Krystal Jefferson: Okay.
Lewis Benson: if I want it, That's not a problem. But what's going on now is if I have a screen reader someone has accessibility needs and they're looking at this page. They're not going to know. There's a quote here, they're just going to see that. there's something here, there's a div And there's a paragraph element. There's some text there, but they don't have no idea That it's actually a quote. So, for best practice,…
Krystal Jefferson: 
Lewis Benson: you want to use. these semantic elements like block quote article header again these could all be replaced with just divs. But that wouldn't be good practice to do that.
Krystal Jefferson: 
Lewis Benson: I have a section here, this is just showing that there's one section to my header. It kind of makes sense to me. If I have one section, I should probably have another section. So I'm actually going to just add that in. Because why would I only have one section? And I'll just move these up into there and format. So now we have two sections in our header. So again, this is the header element, a collapse that downy show, how that disappears.
Lewis Benson: and within our header, We have our first section, which contains a second heading. And then it has this container a box of three paragraphs. And then within our second section, we have another heading and we only have one paragraph in there.
Lewis Benson: And then underneath of our article, that's where our block quote lives. So it's everything here is a sibling. So if I collapse each of these, we'll be able to see all of the Sibling elements rather be the header. So here's the body would be the parent, and then we have three children in there. And these three children are all siblings. And I'm just trying to get you familiar with that term, because it's something that you're going to hear me say quite a bit. Whenever you're nesting elements, they're referred to as parent and children.
Lewis Benson: So another element we can use, that's very common for layout. Will be the footer element. Let me bring that up in the documentation.
Lewis Benson: so, I type in footer in my search for MDM on Mozilla
Lewis Benson: And we're going to see an example of what that looks like. So they have this little copyright thing in here. And they have the year that it was copyright by Gandalf. And then they have a little bit of styling on theirs. But we can see that this is at the bottom of an article. So they have a footer. They have a H1. I notice, they don't have a header within here. They just have this one h1 element. The header is not always needed if you only have one. H1 then it doesn't necessarily need to be inside of a header. But if you're going to have a lot of information inside of your header or perhaps it has a lot of navigation in it, a lot of different links, a lot of content then you're definitely going to want to use the header element. And I believe I can actually type in here. And I'll actually put one in just so you can see how we have been doing this.
Lewis Benson: And I got to put my slash in for the closer. And then I'll just drag this over here. And make a new line. So this is a little bit more similar and it notice, it didn't change anything. It looks exactly the same. But this might help a screen reader or a search engine to find this heading because it's inside of a header element, it gets it a little bit more semantic. It's more descriptive. but again, in this case it probably ain't required because we know that an H1 is a header
Lewis Benson: Does anyone have any questions about what? I just went over there.
Lewis Benson: Okay, so I'm going to copy their photo out of here.
Lewis Benson: And I'm going to paste it in here. And that gave me that little copy symbol. I'll just put my name in here and I'll put the year 23.
Lewis Benson: And I believe there's actually another way to do these copy symbols. I'll see if I can do it on the other side. I believe it was and And that's given me some model complete here. And I think that does the same thing. So I'm going to look into browser just to make sure. So if you want to put in a copyright symbol on your footer, you can do that. We'll Go back to our sample page. And here you can see, I have two of those now. On the bottom. One of them was copied directly in as a character and then the other one, I use that little code that can put it in there for you. And there are several different things you can do with an ampersand and then some text and a semicolon. They'll give you different little symbols. I think there's even some emojis you can use like that. It's not something I really mess with too much unless I need it.
00:35:00
Lewis Benson: Specifically and then I'll just go into documentation and look for how do I make it copyright, symbol or How do I make a rights reserve symbol or anything like that? But there it is. We have our footer at the bottom of our body.
Lewis Benson: And again, I'll go back and show you that it's right there.
Lewis Benson: So I said I was going to go over the inline elements, I'll go over a few of them anyway. We find some text. I'm actually going to create a larger block of text and I'm going to do that within my second section here. And I'm going to show you a little shortcut for this. So make a new line. I'm going to create a paragraph element. And I'm just going to create an empty space here. So if I want some just filler text and it doesn't matter what it says I can type in the word lorem l o r e m. And if I click on this, It'll just give me a whole bunch of gibberish. I believe it's Latin but it doesn't actually say anything if you translate it and I want to format, it'll bring it back to a few lines. So now if I look at my page, We can see this loreum text going across the page. And I believe, yeah, that'll wrap. If I shrink the browser down.
Lewis Benson: Okay, so I'm gonna actually add some more of that. I'll make a new paragraph element.
Lewis Benson: And this is part of the Emmet shortcut as so, this was just a single Strand of lorem, I can actually do lorem. And then put in. The star, which is shift date for me and then put in a number and it will do that many The Loram Times 3. And then I can click on our autocomplete and it gives me a whole bunch of text. I'll format it and I'll scroll back over. So I got three sections of warm. by doing that. And this is really good if you're just trying to put together a quick web page but you're not worried about the content yet, you're more worried about it's going to have content and you want to see what the layout's gonna look like. So let me go back into here. We'll see if that looks like.
Lewis Benson: Does anyone have any questions about the alarm shortcut? What that is or anything?
Hannah Richards: Do you mind doing it just one more time? I'm sorry.
Lewis Benson: That's fine. I can do that. I'll actually make one more paragraph here. So I'm going to create a paragraph element. And then inside of the paragraph element, I'm going to write the word lorem l o r e m and if I press the Auto Emma abbreviation. Now it'll create one strand of lorem, but if I put the star for times and put two That'll create two strands of lorem and that can hit that abbreviation. I could even do a hundred times if I wanted a whole lot of text down my page, but I'm not going to do that. We'll just do two. And when I click this, it's going to stretch it across the page. And then I press Control s to save because my prettier extension is set up to format on Save It moved everything back to the left. Then I got to scroll back over to see it. Did that help?
Hannah Richards: Yes, thank you. I missed the saving part, I think.
Lewis Benson: Yeah, and also if you click on your page, You'll have this format document. And it tells you the shortcut to format, for me, it shift alt f. So if I click on that that'll also format the document. If you have a really long thing, a text
Lewis Benson: and I'm going to go back and make sure that everything showed up. So we have our three paragraphs
Lewis Benson: That's a decent amount of content there. Okay, so Let's start on a new element here before our break comes up. There's getting to be a lot of content in here, so I'm going to create a new document before I do. I want to go over this one because we're going to be going over linking things, so, Within our header.
Lewis Benson: Where's the bottom of the header? I have a lot of text in my header.
00:40:00
Lewis Benson: I'm gonna move some of this out of the header.
Lewis Benson: I know, I wanted two sections in here. But it's getting to be a little bit too much.
Lewis Benson: And I'll collapse that down. Just so that this is a little bit easier to manage so we're inside of the header element. If I click at the beginning of the header, you see this vertical line? It takes me down to the closing element. And also if you click on the text header it puts a square around it and it also puts a square around the closing element. So if you're ever having trouble finding where, Container is starting and where your container is ending. You can just click on the text and it will highlight that for you. So within here, I'm going to create another element called now. This isn't one we've seen yet. Can anyone take a guess at what NAV is used for?
Iris Coats: And Navigation Button Navigation page.
Lewis Benson: It's pretty good Ron. Did you have a guess too?
Ryan Arnold: I was gonna say the same thing.
Umar Z: Yeah, it could be Navigator.
Lewis Benson: Okay, would you say Omar?
Lewis Benson: Yeah, so I'm actually gonna go back to the Wikipedia page because it has really good examples. This. Exactly is for links.
Hannah Richards: It look for a link.
Lewis Benson: So all of these links over here, these would be within a nav element and I'm actually going to inspect it to make sure they did it right.
Lewis Benson: There it is. You see the nav element. And then, all these links are inside of that,
Lewis Benson: So that's what we're going to start creating now. I'm going to open my nav up.
Lewis Benson: Within this nav, I'm going to use another element. Which we haven't introduced yet. But this is called the anchor tag. So I'm just going to press The anchor tag is just a single letter similar to the paragraph element. This is one that might be sometimes. Hard to remember, but if we look here we have a few different options we have. A blank, a link, a male a tail. These are all different types of anchor tags that we can use. It's just giving me all of these different options. I'm actually going to click on the link and it doesn't matter. If first, I'll click on and show We have that a ref And now click on the link and now it has an href with HTTP Poland, lash. So it's starting off to create a link to another page. What I'm going to do here is I'm actually going to change that to an S.
Lewis Benson: I'm going to Type google.com. And I'm going to type inside of here, click me and this is exactly like a paragraph element. Let me remove this for a second, just to show you.
Lewis Benson: So you can see we have instead of a p. And then I have some text in the middle and I'll show you what that looks like. Let me delete this extra one here. And I'm going to go to my browser.
Lewis Benson: And click on the demo. And we have this clicking right here. And it's just plain text just like a paragraph element. There's nothing special about it. if I go back into my code, And I'm going to add an attribute. And if you remember the attributes, they go in between the name of the element, in the opening tag, You put a space. And that gives you that little bit of room to type there, and I'm just going to paste that back in because I put it in my clipboard. So now, the attribute we added is called ahref. It's value is google.com. Now I'm going to save this formats. I'm going to go back to the browser and show you. Now, it looks a little different. It actually looks like a link and when I hover it, it gives me that little pointer, it's underlined. And when I click on it, it actually takes me to google.com So that's how you create a link.
Lewis Benson: On your page. Is by using that href. but, When I showed you the autocomplete let me do that again. we have all these other ones too. So, blank mail. Let's see what the format looks like, for male. So, we have this male 2 here. This is kind of out of our scope, but just for reference, it's a protocol that opens up, your email on your computer. You may have seen this before. If you've clicked on an email link or it pops up like Outlook Express or Google email, whichever email you use on your computer. That's what this is for and this is how you build one of those. And we also have Oops, I clicked one. This will actually open up a phone.
00:45:00
Lewis Benson: If you're on a mobile device and you click on this, it'll actually open up your phone app and allow you to call directly from that link. And it will start the dial whenever you click.
Lewis Benson: So those are the different types of links and then the blank one, This has a lot of extra attributes in it. I'm actually not familiar with I'll target is for The server. And I have no idea what real is. It's not something I've actually used personally. Maybe you'll find a use case for that, but if you ever have a question about an attribute, like the thing to do is just check documentation, again, you're not going to memorize all of these elements. You're not going to memorize everything here. The documentation is going to be your best friend whenever you're actually using this stuff. So if you needed to create a way to open email, maybe you won't remember that the anchor tag does it? And you can come into the documentation and just search email. And this one's taking you to an input. That's probably not what you want, but I want to go to the anchor tag.
Lewis Benson: And we can see these different examples. Here, we have the male two, we have the tail. And then we have these different attributes and this gives you all of that information for those extra attributes. You may never use them and maybe you'll find this useful someday to come in here and read what these are about and how they work. We have some security Ways to Prevent. this cross origin thing. If you start learning about cybersecurity at any point, this is something that you'll see quite a bit. Is basically allowed it. that another web page can access your Web page and it could possibly do it maliciously. So it would be something good to learn about down the road. I don't believe we cover it in this course. That was something that. I actually found on YouTube myself. When I was trying to
Lewis Benson: Learn about how to secure websites.
Lewis Benson: So this right here, opens a new tab, so that's what that blank one does that we seen.
Lewis Benson: So, that is interesting. If you want your linked instead of just redirecting you to open a new tab, that's where you use. These attributes to do that.
Lewis Benson: Okay, so we have a link to Google. But maybe we want a link. To a different section of our page. And you may have seen this at some point too. So what we can do, is I'm actually going to introduce another attribute here. And this is called ID. And I'm going to put it on the article. And I'm going to say ID equals an AUTOCOMPLETED the quotes for me. And then I can write whatever text I want in here. I'm going to say,
Lewis Benson: Just the start just so you can see that it can be whatever you want, you can literally call these IDs anything. But keep in mind, you can only ever have one ID with this name. You can't have two elements with the same ID name. They're unique. So I'll save and if I look at the page now, We can see that. There is no difference. It didn't do anything. But if I look inside of here, And find my article. We can see that it has that ID so I can zoom in on that. We can see that ID inside of my elements here. That has the start.
Lewis Benson: So, I don't see anything different about this text or anything like that, but we did add an attribute to it because we can see it inside of the Inspector. So, if I go back into the code, And I'm going to create An anchor tag. And I'm just going to use the first option here that doesn't have the blank link mail or anything like that. It's just the top one. And for the href. I'm going to put in a hashtag. and then I'm going to put in that ID, name, the start
Lewis Benson: And let's see what happens. I'll have to put some text inside of here.
00:50:00
Lewis Benson: We'll call this one. Minimize. And I'll click that and you can see it actually scrolled me down and if you look at my URL now I have this hashtag the start after my index.html changed my URL. So I'm actually gonna delete the index.html out of here.
Lewis Benson: And I'm going to click that again. And you can see it puts that hashtag the start, and it scrolls me down the page, and if I had more content, it would actually take me down further. So that this is the top of the page. So I'll show you that. I'll add some content here.
Lewis Benson: We'll put it in the footer.
Lewis Benson: Out of paragraph, element. I'll do some lorem. I'm 50. That's a lot of text.
Lewis Benson: And you can see it's going the whole way down the page here. That's not a decent amount of content for this little demonstration.
Lewis Benson: all right, so if I click me also, this is at the top of the page, this was my article. I'm going to try that again. And you see how that puts that right at the top of the page? and that's a way that you can link to different things within your current page. And I believe you can see that inside of Wikipedia as well. So, if I click on diseases, you can see up here in the URL, we have hashtag diseases if I click on conservation, it switches to hashtag conservation and you can see my scroll bar here on the right, if it's not too small for you, It is scrolling me down the page as I click on these. And then there's even one here for top. And it just has an empty hashtag and doesn't have anything else on it. So that takes me all the way to the top of the page. You can see I'm scrolled up that can't open any further. So I click diseases, it takes me down.
Lewis Benson: And that's an example of where you might want to use something like that. Some sort of navigation to move around the page. Yes, Ryan,
Ryan Arnold: I just had a quick question about this scrolling back and forth within Visual Studio because mine doesn't have a scroll bar at the bottom where I can just quickly, scroll left and right to get back to the beginning of all that lorem text. Is there a keyboard shortcut for that that I can just use?
Lewis Benson: You have a scroll mouse or using a scroll wheel? If you hold the Shift key and…
Ryan Arnold: Yeah.
Lewis Benson: scroll, it'll scroll left, and right. Yep.
Lewis Benson: Does anyone have any questions about the anchor tag?
Lewis Benson: Omar.
Umar Z: Yeah, I just wanted to know we know what age do what P means was div means. But it is wrapped means I want to know that please.
Lewis Benson: I believe it stands for hypertext reference but I'm not a hundred percent. Sure I do.
Umar Z: Okay.
Lewis Benson: I'm actually going to bring up the documentation here in a second but kind of a high level whenever I see ahref, I know that it's a link, it's going to be an external page or an external sheet usually And I know that it refers to a link in that…
Umar Z: Okay.
Lewis Benson: that's a really good question. But I actually don't know, the act, what the acronym stands for. So if I just type in href here,
Lewis Benson: And it says Location interface.
Lewis Benson: I don't see that it actually says What it stands for with the letter stands for?
Lewis Benson: But I believe it's hypertext reference, I can search on Google. But I'm not sure that that's really within the scope. Of what we're doing, but that is a good question. And it is something to look out for because
Lewis Benson: this is kind of a little bit ahead of what we're doing. But you'll see this with the
Lewis Benson: What was it? the images. So, if I put an image tag in, And I click on that, we'll see this src equals. It's very similar to the href and sometimes you might mix these up. You might put an href inside your image, instead of an src because usually an SRC is a link to an image as well. But srcs for source.
Umar Z: So basically, we don't really need to memorize these terms or keep that because when we write image, this thing's gonna come up automatically and it's gonna autofill auto, right? So we don't need to memorize it, right?
00:55:00
Lewis Benson: That's correct. And you don't even need to memorize a lot of these tags. One second.
Lewis Benson: Sorry about that. My daughters have. A little bit of a tantrum.
Lewis Benson: So, yeah, you don't have to memorize any of this as far as these. Elements go Because you have the documentation to reference a lot of these you will memorize, just because you're using them so much. But if you ever forget, you can always just check Google Search. You can use AI to ask questions as well. Or even ask other developers, you'll be working. as a developer you wouldn't work by yourself, you'd be working with a team of developers and you can be like, Hey, What was that element again that we use for putting it everything in the article, or things like that? It's not something that it would expect you to memorize all of this. But what you are expected to know is That there are semantic elements and you should be using those instead of using.
Lewis Benson: The just to give for everything.
Lewis Benson: How does that make sense?
Lewis Benson: All right, so I've showed you all these block elements, everything I've done so far, has been putting all of our stuff on multiple lines. I'm actually gonna get rid of all this extra texture. That's way too much. That was just a demonstrate how that scrolls.
Lewis Benson: So, let me just remove most of that. And I want to show you an inline element rather than These block elements. So again, everything was on its own line and I showed you that inside of the browser tool. So I'm going to create an element right in the middle of all my text here. And I'm going to use a element called strong.
Lewis Benson: And then I'm just going to throw some text in the middle of that. And let's see what that looks like before I go into the explanation here.
Lewis Benson: So, here it is. And all it did was make the text bold.
Lewis Benson: Everyone see that. Let me zoom in a little bit. So here's the text inside of that, I'll actually select that so see And you can see the strong element is inside of our paragraph element. It's on the same line, it didn't break the line or anything and it just made a bold. and what this would actually do, is, if you're using a screen reader, it would be reading all of this text and it will read this a little bit more loudly. it'll give it a strong. Sound whenever it says those words. And I'm going to show you another version of this. I'll do it here with this. Word. And I'm just going to put in. B. And I'll put this word inside of the b element.
Lewis Benson: And you can see that. That's also bold.
Lewis Benson: And it's also an inline element, so we have a bold element and we have a strong element. So you're probably wanting to know use strong? And when would you use bold? And I kind of alluded to that when I mentioned the screen readers, this would be for example, on Wikipedia Here, this text is bold but it wouldn't necessarily need any special emphasis and there might be some words in here. For example this Latin Is bold. Whoops. But it doesn't have any special emphasis that you want to place on it, when you're reading it, it's just showing you that it's a keyword. So that's where you would want to use this B tag instead of a strong tag. if you were trying to put some special emphasis on, something you would use the strong tag And we also have that for italics.
Lewis Benson: I'll put that down here. So, if you wanted to make something italics you use, And this would be for a magazine article name. Or if you were writing some sort of reference, maybe using APA format where you have to use italics, you would use this. I tag for that.
01:00:00
Lewis Benson: And let's see that. If I can find where that is right there. I'll select it. And again, you can see the eye is inside of the same paragraph element as everything else. It's not breaking lines or anything and it's making that italic.
Lewis Benson: And then if you wanted to actually place emphasis on something using italics, you'll see this in a lot of novels where there are some metallic text and it puts emphasis on a words that's where we use For emphasis. And again, you don't have to memorize these just kind of be aware that they exist and if you forget them, they're on MDM. You can Google them. They're very easy to find if you can't remember the difference between them. But again, this one's for screen readers, it puts emphasis on it and this one is for citations and they're both italics and I'll show you that. They're both the same here. We have this one in italics and this one in italics. But one of these will. Add emphasis to a screen reader. Rather than just making it plain italics.
Lewis Benson: And those are two examples of inline elements because their elements, but they're still in line with the paragraph.
Lewis Benson: Does anyone have any questions about that? The inline elements, the bold or anything at all? Anything that we've covered up to this far or anything, we haven't covered.
Lewis Benson: All right, this would be a good place for a 10 minute break. let me bring my timer up. Do you have a question Krystal?
Krystal Jefferson: I did have one. So, the anchor element is just for links.
Lewis Benson: The anchor element is just for links. Yes.
Lewis Benson: And then it can be used for links on your page. I'll go back to this Wikipedia example. Where it can make it scroll up and down the page. So that I'm an elo evolution. If I hit top, it takes me to the top of the page. If I go to diseases, it takes me down to diseases and it's changing this link to be a hashtag diseases. And then in my demo I have the click me and it takes me down to this text right here.
Lewis Benson: Or it can be used for an external web page, where if I hit Click Me this will take me to Google where I can actually put in my and minute timer.
Lewis Benson: And I'll pause that for a second. And We also have it for the mail and…
Krystal Jefferson: It. Yes.
Lewis Benson: for the phone but those are probably not going to be used all that often. Does that answer your question?
Lewis Benson: Okay, so let's go ahead and take our 10 minute Make sure your hydrating and actually make sure you take the break. And I'll see you after 10.
01:10:00
Lewis Benson: Okay.
Lewis Benson: Are we all back?
Lewis Benson: Hope you all had a good break.
Lewis Benson: so far we've covered a few new elements, we talked a little bit about versus inline element. Could somebody tell me the difference between block element and then line element?
Ryan Arnold: A block element. Takes up the entire line. It doesn't leave space for anything. But itself, an inline element can be placed inside another a paragraph A link, could be placed inside a paragraph.
Lewis Benson: Good job. I don't know if you noticed this, I'm going to show My demo go. I hit that link to Google notice. These are also on the same line here.
Lewis Benson: So if I hit the NAV, the nav appears to be a block element. But these anchor tags are actually inline elements.
Lewis Benson: Does anyone know why you would want to do that or why those should be inline elements?
Ryan Arnold: Save space on the page.
Lewis Benson: It does. I'm going to open up this Wikipedia here. and if you take a look at all these different links that are inside of the paragraphs,
01:15:00
Hannah Richards: I was going to say, if you have multiple sources, you don't have to have a really long page. To separate out the links.
Lewis Benson: that's true. They're actually is. A way to make block elements, you can turn them into inline elements as well. So this here says Block, I could actually just change this to be it. Lets me edit it.
Lewis Benson: I'll just do it up here. We can do display.
Lewis Benson: Try that again.
Lewis Benson: And we can do inline block. and that crossed out our display block and it actually will turn that into A. Highlight it.
Lewis Benson: But now there remember the nav was going I'm check that. So now the nav goes the whole way across and then if I check it the nav, Is now only going, the width of the content, it's no longer going the whole way across the page. So even if these were block elements, you could technically turn them into inline elements. But if you were to build pages like this, that's a lot of changing. That's a lot of converting things from inline to block element. So they just made it inline by default. And then if you wanted it to be, A block element. Maybe something like this on the left here. Where each of these are on their own line. And then you're only changing a small amount rather than changing your entire page of links. So it's just one of those things where they decided that was the best approach to make these inline rather than block. So we'll go ahead and switch that back.
Lewis Benson: But let's see what that actually did. When I put this element on here. I'll take a look at my nav. an att style is an attribute that allows you to actually put CSS styles on these over here, this is CSS code.
Lewis Benson: There's only two here. Let me The body has a couple on it. Let me go to a page that actually has some styles on it. So this page is pretty well styled and there's some stuff in here that is a little beyond our scope, what we're doing today, but we can see there's this media thing here. We have some padding, that's a lot of stuff crossed out. We got some box sizing. This is set to display block. This is all different types of CSS styling. And we'll be going a lot more into CSS next week. We'll be learning a lot of these different properties. But today, I'm going to introduce you to the style attribute. It's a way to style your HTML.
Lewis Benson: Without using CSS and it's not normally done as far as on a large scale, but it is done. If you just need to style one thing, or you need to make sure that it's changing because whenever you style something in line, with that attribute, it will override anything that's already there. And we've seen that inside here whenever I To display, inline block. And whenever I check this block right here and it puts a style attribute on it, just crosses that out. It overrides the styles and that's one of the benefits of using the style attribute. Is it override other styles? So, when you have a lot of
Lewis Benson: Styles on your page and you want to just change one thing. Maybe you want this heading to be a different color but you want the rest of these to still be the same. Then you could select this one with the style attribute and change it. So let's go ahead and do that. We're going to change this heading. We're going to change its color. So, if I go in here, that will be the second H2 element. So I might have to open this up. There it And remember to add an attribute. We want to go right beside the name of the tag. So you can see it's highlighted with that little square. That means my Cursor's right there. I press space. I'm still inside of the angle, brackets. So, if I highlight that angle bracket, you can see I'm inside of the angle bracket. I'm going right towards style. Equals. And now we have our quotes.
Lewis Benson: So the way you do these styles is it is what's called a key value pair. And each key value pair is separated by a semicolon and I know that's a lot of words. Let me show you what that means. So Our first one is going to be color, so we'll change to color. This is our key. I'm going to put a colon and now it wants to know The value will go with blue because it's kind of a darker color and it's just giving me these options already. And it even gives me a little sample there and you can actually change the color here, you can select your own colors with this color picker. All I did was highlight over that. And it popped it up. And it will actually change it from the Word to this RGB value up here.
01:20:00
Lewis Benson: So after you put in the key color, the value blue. We need to end the statement or the semicolon. So, I'll put the semicolon there to tell it. This is done. We don't want any add anything else to this one. and I want to take a look at that now, And we can see that it is now blue. This is a heading level 2 and it's blue. The rest of these are still black And if I inspect that, we can see that we have the color Blue selected over here.
Lewis Benson: We can uncheck that. Check it back again this would be a way to see what's going on. You might come to this code be like Why is this blue was the rest of these not blue and then you can come in here and look, you can check that on, check it and you can see it starts moving something over here, whenever I'm checking an unchecking, So once you see that flashing on the left, we have an inline style on that. And then you can go into your code and search for that to figure out. why somebody might have added in on style, if it's not your code base or maybe you haven't visited this code in a while and you forgot that you put that in there. That actually happens quite a bit. You'll look back at your stuff. Why did I do that? but yeah, so the style attribute So it's style equals quotes and then, the key is the name of the property.
Lewis Benson: And the value of the property. In this case, it's the color blue and I'm just going to show you what this looks like Whenever I select a different color. I'll just drag this down to red. And see how now it changed the color to RGB. We have some parentheses and we have two, five zero comma zero. This is referring to red green blue. So there are 255 colors in red, so it just adds all red and then no blue and no green. You don't need to know how to read RGB. Because you have a color picker and it can do it for you. And if you ever want to find what the value of a color is, you can also click on this as well. I have hex HSL. Hwb actually never seen HWB. That's a new one. And then RGB.
Lewis Benson: I'm gonna switch this back to the word red, because it's a little more clear, what it is. Okay, so we have our color set to red. and then we put our semicolon in now, if I want to add another
Lewis Benson: Style to this same element. I can actually do that. Let's say we want to add some highlight to it. We'll add a background color. And I'll just autocomplete that. And so I have it, put the colon in for me and the semicolon. And we're going to go aqua, that's going to be ugly. But that's okay.
Lewis Benson: And then I'll minimize this to see the results. And now we have our aqua background highlighting the entire H2 element. You can see how it goes the whole way across the screen. And we have our red color. For the actual color of the text. So there's something kind of interesting, it uses background color. To do the whole element and then it just uses color to do the content, the text of the element. Now, does anyone have any questions about anything? I've shown so far?
Hannah Richards: I was trying to type it out, but I was going to ask How would you change the color for the actual background? If you use the keyword background color for
Lewis Benson: so, I put background color on the H2 specifically, If I wanted to change the entire page to have a background color, if I can actually do that, in my developer tools here, just to demonstrate. If I select the selected HTML, I'll actually just Body selects all of my content, my whole page. And then, within here, I can write background color.
01:25:00
Lewis Benson: I guess I got to type it out. I'll get my autocomplete and then I could pick a color from here. And I'll show you this in VS code as well. I just wanted to show you right here first, and then that gives it the whole page of background color. And we can see it on my body. It added the style attribute.
Hannah Richards: Okay.
Lewis Benson: So, the body has the style attribute and it has the background color of brown. what would happen if I add color to my body? The color attribute, does anyone know?
Lewis Benson: Any.
Ryan Arnold: I'm going to change the.
Hannah Richards: Would it change The track.
Iris Coats: Go ahead.
Lewis Benson: The text.
Umar Z: It's going to change the color of all the text or something.
Lewis Benson: Let's find out.
Iris Coats: And change color of the page, your background.
Lewis Benson: We'll change this to Aquamarine. And look at that.
Hannah Richards: Yeah.
Lewis Benson: All the text has changed but notice this is still red.
Iris Coats: Okay.
Lewis Benson: The rest of these are aquamarine.
Hannah Richards: 
Lewis Benson: and the reason for that is, The body is read first. So it actually applies to aquamarine color to this element. And then as it's reading through the elements, it'll get down to this H2 and it changes it again to aqua. and you can see it down here, it's crossed out. It was aquamarine. But because we added another style in here and told it we wanted it to be read. It actually got overridden to red and I don't know if you remember mentioning that earlier. Sometimes you want to override styles, you want things that are more specific. that will override one piece, but not everything. And that's what I meant by that. So, in this case, we want this one to be read, but we want everything else to be aquamarine.
Lewis Benson: So I added that style to the H2 and it was aquamarine but it changed it. And we can see that inside of our developer tools right there, it's crossed out. Does anyone have any questions about that? Does that make sense? This whole special facility thing. I keep using that word.
Lewis Benson: That's something we're going to dive into more. When we get into CSS is specificity. it's a real word. I didn't believe it when I first heard it. But it basically just means how specific is your selector in this case. We're using inline, styling. So it is the most specific you can get whatever you do with Styling, will always override whatever styles are there. But in this case, these are both inline styles. So it'll read the last one. First it sees this one and then it sees the one down below and reads this one second. So that one wins the color. And that's a little bit more than I wanted to actually bring up on that topic, but I think it's good to know…
Hannah Richards: sorry, that was probably me,…
Lewis Benson: because if you, go ahead.
Hannah Richards: but I was also curious from I guess the browser tools Assignment. How do you change an image in developer tools or is that possible? I know it's possible. How do you do that? is it the same in terms of what?
Lewis Benson: How do I change an image?
Hannah Richards: Mm- would it be the same as just editing and HTML and then changing the element style because it was a lot of the URL stuff and…
Lewis Benson: So, it depends.
Hannah Richards: I didn't quite.
Lewis Benson: Yeah, I'm sorry interrupt you there. Go ahead and finish what you're asking.
Hannah Richards: No, That was all.
Lewis Benson: Okay, so yeah, just to show you that real quick, I selected this image right here of this white shark. And we can see we have an src right here. That's a really long src. But it keeps popping up because it gives me a sample. The src is actually what The image will be and you can see that this ends and I can't even highlight over it to show you, but it ends in dot JPG. That tells you that that is actually an image file. So, what I can do is we'll actually go up above here and find another image. I'll inspect that one. and we have an src, which I'm actually just going to go to copy image address on that. And then I'll go back down to the shark.
Lewis Benson: And I'm going to change the Src so that it's
01:30:00
Lewis Benson: the one above it. So now my src is this. Other one.
Lewis Benson: I see a hand, went upward. Who was that?
Lewis Benson: That pronounced dianca.
Lewis Benson: Your hand went back down. But I just pressed enter and it changed the white shark into this other image here. Does that help you at all? Hannah with the question you had?
Hannah Richards: Yes, so just be changing, the actual value of the src. Okay.
Lewis Benson: Yes. Yeah, the src stands for source and that would be the source where the images coming from. So mmm.
Hannah Richards: Because I was actually going to source and trying to change it there and it didn't really well. It didn't do anything. Actually, it deleted it…
Lewis Benson: Under sources.
Hannah Richards: but it didn't really upload. Yeah.
Lewis Benson: Yeah so if I click on this image and you can do this with any image you find pretty much anywhere on the Internet are you Click on the image and go to Copy image address. And then if I wanted to change this was the shark, I want to change it to that image. Now I'm going to Src Of double click on the text that stupid pop-up keeps getting my way.
Lewis Benson: I have it I Hope I lost it. Try that again.
Lewis Benson: Delete paste. Enter and it changes it to the image from down below.
Hannah Richards: I was trying that maybe I don't know what I was going wrong. You can do it directly into the code.
Lewis Benson: And the src on the elements.
Hannah Richards: And the developer tools. Mm-
Lewis Benson: You mean, Yeah, that's where I just did it. I just changed this src. Attribute to a different image.
Hannah Richards: Okay.
Lewis Benson: But yeah, the developer tools, they allow you to test things out like that. So if you wanted to see what something looked like with a different image, different background color, you can use your developer tools to do all that. And I told you that I was going to change this, I want to show you what happened. When I refresh this page now to demo page We just lost all of our styles. Because I'm writing in the developer tools, it's not actually applying any of that code. So, let me go ahead and open up my VS code. And I'm going to go to the body and on the body I'm gonna add style equals. We have our double quotes. And can anyone tell me what I'm going to put inside of this style?
Daniel Perez: Background color.
Lewis Benson: Background color.
Lewis Benson: And we get some autocomplete. I'll use that and notice Put a colon in and a semicolon for me and backspace and put the colon back in. And what color do we want to use for this?
Lewis Benson: What we go is black. Make it a real dark background. It'll be interesting.
Lewis Benson: Can't read anything. We got text hidden here. I guess this would be a way to send somebody a secret message or something.
Lewis Benson: So if my background color is black, then I should probably change. My. Font color too. What was the Property to change the font color.
Ryan Arnold: Color not equals just color. Sorry and colon. And…
Lewis Benson: Yep.
Ryan Arnold: then you pick your color.
Lewis Benson: put that back in to get some choices here. And again you don't have to use these colors. I'll show you a toll real quick. I'm just minimize. I keep messing up my browsers here.
Lewis Benson: Do it from here.
Lewis Benson: Coolers. I'll just search for it because I couldn't remember the extension, it's co. So I just typed in coolers and this Web page. Let me close the browser tools here. This will generate colors for us on a pallet.
Lewis Benson: Close the tutorial. And you can get these cool little color palettes here so you can figure out what you want your page to look like and get a little themes and whatnot. So, let's go with this orange. Look at the yellow actually because we need a lighter color, and all I have to do is click on that. And then I get this hashtag f6 ae to D. So, I'll click on coffee color. You could also just highlight this and copy it there. I'll right click Copy to show you. And I'll go back into VS code. And here I'm still missing my color. I'm gonna put in #F6 ae2d. This is the hex code for whatever gold color that is. again, if I click on the hashtag right here at the top, I can switch that to the different formats.
01:35:00
Ryan Arnold: Three.
Lewis Benson: These are all the exact same color. It's just formatted differently.
Lewis Benson: Some people prefer RGB. I usually use the hex codes because when you have hundreds of different colors, It performs a little bit better. you might get one or two points more on your lighthouse score. Which is a total use just to test performance of your developer stuff.
Ryan Arnold: More.
Lewis Benson: Do you have a question Ryan? So you're off mute. you're good.
Ryan Arnold: sorry, I didn't realize my
Lewis Benson: You're good, no problem. but yeah, so I like to use the hex coats personally, it just comes down to personal preference just because this gives me one or two points more on performance, which In the grand scheme. That's nothing. It's just my preference. But as long as you can see, the sample of the color, it doesn't really matter what you use. Alright, so let me minimize. And we'll go back to the demo. and now we have that golden text color with the background, and we still have this as red and that aqua background on the heading there.
Lewis Benson: Does anyone have any questions?
Iris Coats: No.
Lewis Benson: Okay, is everyone able to get the styles to start changing on their elements As anyone tried? This are worked along with me at all.
Ryan Arnold: I've been going along as you've been doing it.
Iris Coats: No.
Ryan Arnold: I have it all in.
Lewis Benson: So I'm going to show one more thing here and then I want everyone to actually try this. After I do it. I believe this is probably going to be the more important part of today's lecture. I mean, It's all very cool but this part here is Gonna be kind of key. So I'm gonna create a new file. And this one is getting pretty full. So this will definitely help. Let's give this one a name of I'm just gonna call it library for no particular reason. It's just the name I picked. Library.html. And how do I get my boilerplate again?
Ryan Arnold: Exclamation sign.
Lewis Benson: Yep, explanation sign. We'll put that in. And I don't like this title document. This is the library.
Lewis Benson: Again, I don't know why I chose that name. I just popped in my head at the moment. So we have library, we have the body, let's put in a header.
Lewis Benson: So there is And within this header, I'm actually going to put a nav element so I'm going to nest my nav element within my header and this is a pretty common thing you'll see.
Lewis Benson: And within my nav, I want to create an anchor tag.
Lewis Benson: So now we have three nested elements technically four, if you count the body five, if you count the HTML. But I have these three nested elements. Here, we have header, our NAV, and our anchor tag,
Lewis Benson: I'm going to call home. This would be the link back to the home. and for the href, I'm going to put in Index.html.
Lewis Benson: Okay, so this is set up for that navigation to work. And I'll explain how that works in a second. I'm gonna go into my index and I'm going to do the same thing for library. So, we have this nav here, so I'm going to add in another anchor tag. And for the href, I'm going to put in library Dot HTML. And I'm going to put in for my text library. It's just a description of where the link will navigate to So just to recap in my library, I have a header. I have a NAV and this is just describing for screen readers and search engines. Where this is located and what is in it? And then this is saying that it's an anchor tag. And then inside of my index, I have a header. I have a nav.
01:40:00
Lewis Benson: And it looks like, inside of there, I have my anchor tag for the library. So let's take a look at the browser. Make sure that all works. So, we can see that that link is blue because I haven't clicked it yet. Let's go ahead and click on that. And it takes me to. Library.html. And then all I have on that page, was the link back to the home. If I click on that, it takes me back to my homepage. So, I just created a two page web application. By adding two anchor tags. And two HTML files.
Lewis Benson: So I'd like everyone to try that. Create an anchor tag Create two files and see if you can navigate between the two pages like that. You may want to put a little bit of content. On each page. Just so you can see the difference, I'll add a little bit more to my library, just so it has something else other than a link. So, under my header, I'll put an Arnold. And within the article, And within that paragraph, I'll do some lorem. Times 5. Save. And I'll scroll back to the left.
Lewis Benson: Okay, let me go back in and I'm going to click Library. And there's all my Lauren and there's my link back to the home page. All right, so go ahead and everybody try that. Make sure you're able to get that to navigate between the two pages. And if you can't get it, let me know. We'll see what you have going on. If you do get it just give me a thumbs up so that I can see that it's working for you.
Lewis Benson: And if you have any questions, feel free to ask those.
Lewis Benson: I'm seeing some thumbs up. That's good.
Lewis Benson: And if you're not able to follow along with it, That's perfectly fine, too. You'll be able to review the video. if you get stuck on creating a link between the two pages, Also keep in mind, the documentation DM. It can definitely help you find your way. Between. If you get stuck on that.
Lewis Benson: So, that was the
Lewis Benson: the anchor tag between two pages and I just want to show that one more time. Notice that These are all both in the same folder.
Lewis Benson: And the index was the one that loaded by default, and when I click on my anchor tag, that's how I get into my library. How would I change, Iris? You have a question.
Iris Coats: Really just a statement.
Lewis Benson: I see it.
Lewis Benson: yeah, and I know that can be difficult. Sometimes everyone has different learning styles, some people will have a hard time coding along while listening
Lewis Benson: So, if you do want to wait until we actually start our Assignment today to try to get that working because I believe that's in the assignment criteria as well. I'll have to bring up the rubric and double check that but You can wait…
Iris Coats: Yeah.
Lewis Benson: till then if you just want to watch that's perfectly fine.
Iris Coats: Thank you.
Lewis Benson: So, can someone tell me how to An attribute to this paragraph element here. I want to add an ID to it.
Iris Coats: In the paragraph or at the top of it. In line or block.
Lewis Benson: The attribute. I want to add is called id.
Iris Coats: Yeah, so just the ID.
Lewis Benson: So I'll type ID right here in between these angle brackets. But make sure you always have a space between the name. Because if I type ID right here, this is now a PID element which I don't know what a PID element is. But if I put a space there and I type ID I get a look. I can hit this autocomplete here and it will give me the equals and quotes. And can somebody tell me what the ideas used for?
01:45:00
Lewis Benson: I showed a briefly.
Ryan Arnold: It could be used For navigation. if you want to put a link that takes you to that specific paragraph, you could do that and I believe you mentioned could it also
Ryan Arnold: Helps with all people who use auto readers, it can navigate to That section and start reading it.
Lewis Benson: That's exactly right. It does have more uses than just that some of these we're going to dive into a little bit later. The ID is a way to select an element. Using some sort of unique identifier.
Lewis Benson: so, for example, if you wanted to select an element for navigation, as you said, You could put in the ID for that. You can also use it for selecting elements for scripting purposes. And we haven't got into scripting yet. That'll be week, six, I think. Five or six when we actually start using JavaScript, but it's one of those things where I want to tell you about it now. Just so, you're aware of it. We can use the ID to select the paragraph element with JavaScript and make this a dynamic piece of code. so, I believe I showed you an example yesterday, where there was A navigation. If I actually collapsed this down a little bit, maybe we can get one. There We have this little menu right here that popped up. I click on that it opens up our navigation again.
Lewis Benson: So, if I select this, And we look, it has an ID of vector page title. It has a really weird long ID. And that was probably not created. By a person when they built this page, it was probably built in a script. And then he's crazy script and that's kind of a more advanced topic and it doesn't really matter, but just noticed it does have an ID. And whenever I click on it, it opens and closes this that's just another use case. For the ID. It's a way to select an element. It can be used to select an element for navigation. It can be used to select an element for scripting or it can be used to select an element for styling. So if I wanted to style an element using its ID and CSS, that's a really good way to do. That is using the ID.
Lewis Benson: And I just want to touch on one more attribute here. So, I'm going to give this an ID of Paragraph, I guess. But there is another attribute and I want to show you this on the same element. So, I have an attribute called id, and I can add more attributes to the same element. I just put a space in here, and this one's called Class equals. Quotes. so, a class is almost the same thing as an ID. the difference is, You can have multiple elements with the same class name. So, maybe you have five paragraphs and I'll create five paragraphs, and I'm going to show you a shortcut for this as well right now. So if I hit P, it brings up my imminent abbreviation. I can do times five.
Lewis Benson: And then when I hit that, it creates five paragraph elements right there. And everyone see how I did that.
Lewis Benson: Yeah, absolutely. Let me hit control Z to undo. And so it's P. It brings up my little image abbreviation here. But I'm not going to click it. I'm going to hit the time sign it is the same. As with the lorem, the star, astrix, whatever you want to call it. So it's P times 5. And notice I have no spaces or anything there, it's all one. Piece and I got my in that abbreviation popped up here. I can click on that or press Tab. And it creates five paragraph elements all at the same time.
Lewis Benson: Okay, so I'm put a little bit of lorem. Into each of these paragraph elements. And it's hard to do this so quicker after the other, I'm going to show you one more shortcut. I'm gonna hold down the alt key. And I'm just gonna Click Click while holding the ALT key. And I can now type on multiple lines at once so much like Lauren Tab. Format. And that filled the text on all of them at once. I'll show that one more time.
01:50:00
Lewis Benson: So I have the paragraph elements. If I hold down the ALT key and I click in the middle, it'll create multiple cursors and see how I clicked in the wrong spot there. If I hold alt and click there, again, it will delete that one and I'll put it in the correct spot. So now you can type in multiple lines at once I'll do lorem. AB. I'll press Ctrl s to save. And it scrolled me over to the right. So I'll scroll back to the left and I have five paragraph elements all with a little bit of text down. And it's good to learn these shortcuts for whenever you're quickly building out. These little sites, maybe you want to lay something out for a client sometime and you're like Here's what potential website could look like. And you can build it in five minutes using these shortcuts. Let me minimize that and see the Click on Library to go to that page.
Lewis Benson: So there's my five paragraphs. And there's nothing special about them. At the moment. This one has an ID, this has a class, but I didn't actually assign anything to the class, so let me do that.
Lewis Benson: class equals And I called the ID paragraph. We'll call this. Text area.
Lewis Benson: That seems like a good name. And what I'm going to do now is copy this attribute. And I'm going to put it on every single paragraph so that they all have that. and what this would do is, I think I deleted. The.
Lewis Benson: Angle bracketer.
Lewis Benson: I lost my clipboard.
Lewis Benson: Have another number of trouble right now.
Lewis Benson: So each of these have a class of text area and it's just another way to select all of these at the same time. So, if I only want to just select, A paragraph elements with a class of text area. That's where I would use that attribute. But what I mainly wanted to show you is you can put multiple attributes. On these at the same time and I'm going to be going into what a class is used for a lot more next week. I just wanted to introduce the terminology now. And it's basically an ID. But it's used on multiple elements and this ID paragraph can only be used on this one paragraph. I can't reuse the same value, so if I put paragraph again, if I tried to put this here, This one, I don't think it even shows up. Let me check my developer tools. I'm actually not a hundred percent. Sure.
Lewis Benson: So I see this paragraph and then if I scroll down, it did put it on, but whenever the selector is running, it's going to go to the first one and stop. So if I put a link in there, And I know in scripting, it'll actually throw errors if you do that.
Lewis Benson: So definitely don't use the same ID name in two different elements even though it appears to work and developer tools.
Lewis Benson: That's what the class is used for. If you want the same name, use a class. If you need one unique ID, then just use an ID. And again, I'll go into more this next week on how this is useful. So it's kind of arbitrary right now but I'm just gonna add a third Attribute to this, just to show you. Each of these attributes are on one element. And I just keep separating them by a space and I said by a space. So this one I'm going to do.
Lewis Benson: Text align. Center. Let's see what that looks like.
Lewis Benson: And we can see now it did that. It put this text in the center of the page. We go full screen there. And it gave it that weird jagged edge on the side here, but it's all centered now. And that's just one of many properties if I open up MDN.
Lewis Benson: And Google Search Click on MDM Web docs. I could go to CSS properties.
Lewis Benson: And there is a whole lot of different properties that we can use. There's so much information here, this is actual CSS but the property names, like background color and then the name of the color they're going to be the same. So, if you're looking for something in particular, Here's showing some examples like color margin with, these are all things you can do. Inside of your style attribute. We'll get more into these curly brackets and all that work later.
01:55:00
Lewis Benson: I think we actually do get into some inline styling where we use some CSS syntax this week. I'll have to check the rubric on that but for now just use the inline styling With the style attribute.
Lewis Benson: Does anyone have any questions about? Any of this here.
Ryan Arnold: I'm sure there is a way. how would you like if you've aligned the text to the center, but you wanted to make it look a little neater or something or you wanted a straight edge on one side. How would you like text a line within Block within that element.
Lewis Benson: That's a good question and that's actually a more advanced layout technique. I'll demonstrate it just But I probably wouldn't use text align center if I wanted it to have a straight edge on the left. So I'll remove
Lewis Benson: I'll change this to left. See what that looks like.
Lewis Benson: So, everything's on the left. so, what I can do, And this is where the div comes in. So I'm actually glad you brought that up. It gives you a good example of where we can use our div. So I'm going to create a div and I'm going to put this paragraph inside of the div.
Lewis Benson: Just drag and drop it in there. And we'll put Equals. So the layout technique I'm going to use is a little bit out of the scope. So don't worry too much about how it all works, but I'll explain it briefly. So I'm going to put this property on called display. And I'm going to set up the flex flexbox is this layout technique that we can use for basically making the page aligned in a certain way. And this case it's going to make it into A row. And again, don't worry, if that doesn't make sense right now we're getting into that more next week. so, if I have this in a container with display Flex, I can put Flex Direction. I'm sorry, I can put justify content. Center.
Lewis Benson: And we'll see what that looks like. It might not look right because that's going to take up the whole width. So you don't really see much of a difference there. but where you would see a difference is when I put a width on the paragraph So I'll add that as a second. I'll put my semicolon there so I can put another one in. And I'll do width. 50%.
Lewis Benson: And semicolon. And when I notice it, put all my attributes on their own line, that's perfectly acceptable. I mean minimize. And now we have the text, it's left aligned, but it's centered on the page. So I said I would briefly go over that. Let me inspect and you'll see here, we have this little flex thing popped up. That's telling me that I'm using the flexbox technique. Or pattern. I'm not really sure what the proper term is for that, but I'm using flexbox is what it's telling me. The other layout that you could use is called grid Instead of saying Flex, it would say grid, we'll go more into all this next week. But when you're in flexbox, it uses rows and columns. And justify content. Basically is your
Lewis Benson: align text, but it does the whole element. And that's kind of like a high level. I don't want to dive too deep into how flexbox works. Just yet. if you wanted to know more right now there's plenty of YouTube videos in the documentation here on flexbox but,
Ryan Arnold: No, I just was wondering how you would make it look neater. If you were trying to align an article or a paragraph then into the center, so that it would be left justified.
Lewis Benson: And this is one of the ways you can do that. There's a few other ones you could also use float which is rarely used anymore these days but where it can be useful. As if you have An image and you want the image to sit right here and you want the text kind of wrap around it and be left justified. You could use float and it will move all your text to the left. There's so many different layout techniques Grid. Would do the same thing. But using text doesn't really do that. Good of a job text align center because as you've seen earlier I'll actually put that back on to show you the paragraph.
02:00:00
Lewis Benson: We have textile on left unless I put that back on center. And you can see that it has that jagged looking edge now to it.
Ryan Arnold: Yeah.
Lewis Benson: So, yeah, that's kind of how you would do that. You would adjust the width of the paragraph. You would adjust the text align here, and you would also work on the parent element, whenever you're applying your styles. And this is beyond the scope of this week, but I do want for anyone who's interested. I am willing to, dive a little bit into some of the stuff. I don't want to lose you though with these little rabbit holes.
Ryan Arnold: Okay, thank you.
Lewis Benson: But that is a good question and it did give me a good example of where a div can be used. This is just I'm using it for laying this out.
Lewis Benson: Because this paragraph, I set it to width 50%. So it's going to take up 50% of the width of this div And the div remember, as a block element, it takes up a hundred percent of the screen. So if the width of this paragraph is set to 50% whenever a center that's why it gives it this appearance where it's taking up 50% of the available space and let me highlight over that. And you can see that the amount of space to the left and the amount of space to the right. Plus the space in a metal should be roughly. 50%. We can't see it on the box model down there, but That's just kind of a rough outline of…
Ryan Arnold: Okay, thank you.
Lewis Benson: how that works. Yep, no problem. Yeah, good question. Does anyone have any other questions?
Lewis Benson: It is about time for our 10 minute break before we start the assignment. So, if we don't have any other questions prior to that, I'll start our 10 minute timer again. Here,
Lewis Benson: Okay, me. Hit home.
Lewis Benson: And I believe this one goes to Google. Nope, the other one.
Lewis Benson: 10 Minute, timer and I will see you in 10 minutes.
02:10:00
Lewis Benson: Welcome back, everybody. Hope you had a good break.
Lewis Benson: So, for the last hour of class, it'll be just like yesterday. We're going to work on Two assignment and the day two quiz. Thing. Here it is to bring it over from my other browser.
Lewis Benson: So, the day two assignment. I'll just run through these instructions real quick. Whenever you're reading instructions for assignments, make sure you're paying really close attention to the details. Because some of the stuff will be in the rubric. And you could lose points if you miss something. For example. This says to structure the document with a NAV. A main and a footer. So if you don't have a header wrapping your H1, you may lose a point for that. So make sure Reading through these instructions closely and making sure you put the H1 inside of the header, your links inside of the NAV, and you're doing all of the semantic HTML that we covered today. So this starts off open Visual Studio code.
Lewis Benson: And if you were following along at the beginning, I made that On the desktop and I placed my day one assignment within that folder. You can follow along with That little style that I did and keep all of your assignments inside of one folder, if you want to keep them all on your desktop. That's fine. it's your choice. I just think it's easier to have everything in one place. It's not a requirement. Inside that older. The Day to Assignment folder, you're going to create two HTML files. One of them is going to be called Index.html and we have an about.html.
Lewis Benson: on the Index.html here is the structure that you're going to use whenever you do your Boilerplate code. These elements won't be generated and here's an element. We haven't covered the main element. So what I'm going to ask is that while you're doing this assignment you actually use MDN. Or Google or something, and you find out where you might put a main element and what that would be used for. And then inside of our H1, This is going to have welcome to your names website, replace the square brackets, with your actual name. Where it says your name. So in my case it would be welcome to Lewis's website. and then next, we Create a NAV. And inside the Nav, you're going to have an anchor tag. This is similar that demonstration I did earlier.
02:15:00
Lewis Benson: And the anchor tag is going to navigate to the Index.html. We're going to label that home. And then on about page, we're going to label that about me.
Lewis Benson: Okay, so this is the structure About Me page. It's just going to have the boilerplate with the And inside of that main it says to provide a brief biography or any content about yourself, you don't have to go crazy with this you could put into this whatever you want. I do encourage you to experiment a little bit especially with the styles that we introduced today. This here says to include at least. All use of all these attributes. You don't have to use the class attribute. We don't really have a use for it, just yet. I just introduced it today so that you knew that it existed. And I wanted to show you the difference between the class and the ID. But we don't really have a way to use it yet, but that is coming soon.
Lewis Benson: And then the style attribute, so you can style your page, however you want to style it. One thing to keep in mind though is The semicolon After each attribute. I'll show that one more time here. I believe. Yep, we're here. I have one attribute called Text Align and then there's a semicolon separating the second one. So if you have multiple styles, they're separated by semicolons. So if I had a third one in here, I could do font size. We'll do 50 pixels. I'd be kind of big but see how I separate each one with a semicolon. if I highlight that, it will actually Show me the semicolons. And I can end this with a semicolon 2, that would be better.
Lewis Benson: Just so you're aware. but make sure you are using that style attribute and then ensure both pages have a navigation bar and links to each other and then test to make sure they work. So use your live server, use your VS code and your browser and make sure that you test everything before you submit it. And then you're going to zip the day to assignment if anyone is having trouble with zipping. Let me know. We can try to figure out what's going on there. If you remember that was just how we right clicked on the folder and we go back to my desktop. So, if I wanted to zip this one, for me, it says compressed the zip file. I believe somebody had a 7-zip. So, whatever yours is for compressing or zipping, just use that. And then you can submit it.
Krystal Jefferson: I did. But I figured out how to, Just compress it,
Lewis Benson: Okay, so let me open up the rubric real quick. What we're looking for. We want to make sure everything has the correct layout. We want to use of that anchor tag and it has to be linked between the two pages for full credit. And we have all three attributes here again. You can ignore the class. Unless you want to put it in there if so go for it but it's not going to actually affect anything. So
Lewis Benson: Ike's going to be the grade tiu in here, Ike.
Lewis Benson: I'll make sure that I send him a message, if he's afk. Yeah, so it's for the HTML attributes.
Ike Steoger: Yeah, I'm here. Sorry.
Lewis Benson: Don't worry about this class whenever you're doing the grading. Just because,…
Ike Steoger: Got you?
Lewis Benson: yeah, we haven't gone over what that's used for yet, so it's kind of useless to include it right now. And the content within the HTML is comprehensive meaningful and provides clear insights. So I know I showed you the alarm at some today, but don't do your bio with Laura Mips, and I'm actually put some content in there for me, even if you can make stuff up, just make sure it's actual text whenever you do it. Does anyone have any questions about the assignment?
02:20:00
Lewis Benson: It's Elgin.
Elgin Sharper: Yes, you just told him not to worry about it but shall we still do this assignment?
Lewis Benson: Just this one piece of the assignment where it says to add a class attribute. Since there's nothing,…
Elgin Sharper: 
Lewis Benson: we can use the class for just yet. That's the only part that I'm omitting. You'll still use the ID and the style attributes, just not the class.
Elgin Sharper: Okay. All right.
Lewis Benson: Yeah, it's just that one little piece. Danielle Daniel.
Daniel Perez: and you said about HTML, we only just need a main
Lewis Benson: Yeah, so you'll have your boiler plate because That's the only minimum is to have a main.
Daniel Perez: MMM.
Lewis Benson: I would recommend you use paragraph elements within that. And any other element you want to use. If you want to experiment with, an unordered or an ordered list, that'll be coming up into tomorrow's assignment. You can feel free to research that if you want whatever elements you want to place in there. that's fine. But a main is the required element at minimum
Lewis Benson: Yep. Are there any other questions about that?
Lewis Benson: All right, if there's no other questions, feel free to get started on this. This hour is your time to work on this assignment. And we're here if anyone needs any assistance and feel free to collaborate with each other, don't be shy. You don't have to raise your hand and talk. You can just talk to each other.
Lewis Benson: Okay, so I'll let you get to it.
02:40:00
Lewis Benson: Yes.
Iris Coats: I'm having trouble inserting The link between the two pages.
Lewis Benson: Okay.
Lewis Benson: Would you mind presenting? So we can take a look and see what you got going on.
Iris Coats: Yeah, cuz I have it all. The Second Coming.
Iris Coats: Or something.
Lewis Benson: sorry. I'm actually holding the presentation, so I won't let you. There you
Iris Coats: So I understand I'm entering it wrong.
Iris Coats: But I haven't found where I'm entering it. Wrong at
Lewis Benson: okay, so It looks like you clicked on a different anchor tag whenever you did the autocomplete. Probably the link one. It created an extra attribute called Ariel, that stands for relation. We don't need that. Ariel attribute.
Iris Coats: Okay.
Lewis Benson: And so it looks like it's showing some red. That's because there goes
Lewis Benson: Then the other thing is, you have the hypertext protocol. In front of your HTTP. Colon Slash slash you'll want to remove that hypertext protocol. You just have the file name, only?
Iris Coats: And so what words and our assignment it's telling us to enter the link and then change the name. Excuse me.
Lewis Benson: You mean the label?
Iris Coats: Yeah. We use the attribute to tag the index HTML. And label it home.
Lewis Benson: Mm- think of the anchor tag like a paragraph element. Where would you put the text in a paragraph element?
Iris Coats: After.
Iris Coats: Right there in between.
Lewis Benson: Yep, it's the same way.
Iris Coats: Okay.
Iris Coats: Thank you. That works.
Lewis Benson: Yep.
Lewis Benson: Does anybody else have any questions? We have about 15 minutes left of class time. So if you have any questions, this would be a good time to bring them up.
Lewis Benson: Has anyone started on any sort of stretch goals? Maybe getting some new styles added in or experimented with any new elements.
Ryan Arnold: I was just about to add an image. if I wanted to have the text on the left hand side and then the image to the right of the paragraph. I wouldn't put the link to the image or not the link but The actual image. I wouldn't put that within the paragraph. Right.
02:45:00
Lewis Benson: You want the text on the right and you want the image on the left. Okay.
Ryan Arnold: No, I want the damage in the text on the left.
Lewis Benson: so that's a little bit more advanced layout, that would be another. Place where you could use the Display Flex property. What I would do there is put the image and…
Ryan Arnold: Okay.
Lewis Benson: a paragraph both inside of a container. And then set the container to display Flex.
Ryan Arnold: Okay.
Lewis Benson: And then see what that looks like for you and that should get you pretty close to what you're looking for.
Lewis Benson: Yep.
Lewis Benson: The Elgin. Do you have a question?
Elgin Sharper: Make the page Similarly. I request to put the Welcome to Elgin's page website in About and the index.
02:50:00
Lewis Benson: It's just as in the index. If you feel like you need a heading for about me, you could put a different or the same one About Me page. that's an instance where you can have a second H1 because One of the pages will have an H1. And then when you change pages, you could have another H1 on another page that's acceptable. But yeah that's optional.
Elgin Sharper: Okay.
Lewis Benson: If you don't want to have a heading on your about me, you don't have to. But if you feel like you need it for the style or the layout then go ahead and include that. But it's not required.
Elgin Sharper: All…
Lewis Benson: Yep.
Elgin Sharper: Thank you.
02:55:00
Lewis Benson: Before we head off for the evening, does anyone have any final remarks questions or anything about our assignments?
Iris Coats: I think I'm catching on baby.
Lewis Benson: Good, that's good.
Iris Coats: Do we need to do that quiz also?
Lewis Benson: Yeah, the q should cover everything. We went over today. Let me take a look at it real quick just to
Iris Coats: Okay.
Ryan Arnold: Is there a due date on the quiz?
Lewis Benson: Are the due date for all of the assignments is going to be Saturday. it is best to submit them during class…
Ryan Arnold: Okay.
Lewis Benson: if you complete them Just so that, you don't have to play catch-up on one day. But we don't really.
Lewis Benson: Have to have everything all at once, if that makes sense.
Lewis Benson: But yeah, it's definitely best to work along with that.
Ryan Arnold: I was only asking because I'm still working on the class assignment. I was gonna finish that first and then knock the quiz out. I was just wondering if I had to get both of those done today or if it runs past midnight, if it would count against me or anything,
03:00:00
Lewis Benson: No, there's no late points for any of the assignments, even if it's past the weekend, but we do advise that you have all of your assignments in before we start the next bit of content that way you're not backtracking through old content, while we're learning new content. Next week, we're going to be Diving into CSS. so, we want to make sure that We're done with the HTML stuff before we start with that.
Ryan Arnold: Okay, I wasn't gonna put it off or anything. I don't know…
Lewis Benson: Yeah.
Ryan Arnold: how long the assignments gonna take. So I just wanted to make sure
Lewis Benson: I got And yeah, just for everyone else's awareness to that's the way we planned this out so that You'll finish HTML week one. And then week two, you'll finish the CSS and so on.
Krystal Jefferson: How do you submit the quizzes at the quiz last night? I'm not sure I completed the quiz but I wasn't sure how to. Submit it.
Lewis Benson: We just need to be able to see the score whenever you get to the point where it shows you your score. You can copy the URL. And submit that L. Or if you want, you can take a screenshot of your score and submit that
Krystal Jefferson: Okay.
Lewis Benson: Just as long as we have some sort of proof that, the score is what you're saying, that's all we need.
Krystal Jefferson: Okay.
Lewis Benson: And does anybody else have any other remarks before I head off? Any questions?
Lewis Benson: Okay, so if there's no other questions remarks or anything, I'm going to head off for the evening. If anyone gets stuck on the assignment reach out and slack. There's going to be TAs available to help with any assignments, like that.
Lewis Benson: I will see you all tomorrow at the same time. Have a good one.
Umar Z: Thank you, Lewis. Good night.
Lewis Benson: Yep, good night.
Meeting ended after 03:08:39 👋